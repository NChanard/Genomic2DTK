% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilterInteractions.r
\name{FilterInteractions}
\alias{FilterInteractions}
\title{FilterInteractions}
\usage{
FilterInteractions(
  matrices.lst = NULL,
  interarctions.gni = NULL,
  target.lst = NULL,
  selection.fun = function() {
     Reduce(intersect, interarctions.ndx_lst)
 }
)
}
\arguments{
\item{matrices.lst}{<List[matrix]>: The matrices list to filter. If is not NULL, the function will return the filtred matrices list, else return a list of index.}

\item{interarctions.gni}{<GInteractions>: The GInteraction object on which compute the filter.}

\item{target.lst}{<List>: a nammed list that describe the target.}

\item{selection.fun}{<function>: A function that described how the target must be cross. (Defaul intersection of all targets)}
}
\value{
A list of elements index or a filtred matrices list with attributes updates.
}
\description{
Search in a GInteraction object which interactions correspond ti a target list and return a list of index or filter a matrices list according to target and a selection function.
}
\examples{
library(GenomicED)
data("submatrixPF_Ctrl.mtx_lst")
target.lst <- list(
  anchor.Beaf.name = c("Beaf32_8","Beaf32_15"),
  bait.Tss.name    = c("FBgn0031214","FBgn0005278"),
  name             = c("2L:74_2L:77"),
  distance         = function(columnElement){
    return(14000==columnElement || columnElement == 3000)
    }
)
# Extraction on InteractionSet
FilterInteractions(
  interarctions.gni = attributes(submatrixPF_Ctrl.mtx_lst)$interactions,
  target.lst        = target.lst,
  selection.fun     = NULL
) |> str(max.level=1)

selection.fun = function(){
  Reduce(intersect, list(anchor.Beaf.name, bait.Tss.name ,distance) ) |>
  setdiff(name)
}

# Extraction on matrices list and with selection
FilterInteractions(
  matrices.lst = submatrixPF_Ctrl.mtx_lst,
  target.lst        = target.lst,
  selection.fun     = selection.fun
) |> str(max.level=1)

# Extraction on InteractionSet with InteractionsSet
target.lst <- list(interactions = attributes(submatrixPF_Ctrl.mtx_lst)$interactions[1:2])
FilterInteractions(
  interarctions.gni = attributes(submatrixPF_Ctrl.mtx_lst)$interactions,
  target.lst        = target.lst,
  selection.fun     = NULL
)

# Extraction on InteractionSet list and with GRanges
gRangesTarget.gnr <- attributes(submatrixPF_Ctrl.mtx_lst)$interactions |> 
InteractionSet::anchors()
target.lst <- list(
    first = 
      gRangesTarget.gnr[["first"]][1:2]
)
FilterInteractions(
  interarctions.gni = attributes(submatrixPF_Ctrl.mtx_lst)$interactions,
  target.lst        = target.lst,
  selection.fun     = NULL
)
}

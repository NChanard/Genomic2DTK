% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetQuantif.r
\name{GetQuantif}
\alias{GetQuantif}
\title{Compute quantification on extracted submatrix.}
\usage{
GetQuantif(
  matrices.lst,
  area.fun = "center",
  operation.fun = "mean_rm0",
  name.chr = NULL
)
}
\arguments{
\item{matrices.lst}{<List[matrix]>: A matrices list.}

\item{area.fun}{<character or function>: A character or function that allow an extraction of an area on each matrix that compose the matrices list (Default "center").
\itemize{
\item "C" or "CENTER": pixel at the intersection between anchor and bait.
\item "UL" or "UPPER_LEFT": pixels in the uppper left square
\item "UR" or "UPPER_RIGHT": pixels in the uppper right square
\item "BL" or "BOTTOM_LEFT": pixels in the bottom left square
\item "BR" or "BOTTOM_RIGHT": pixels in the bottom right square
\item "U" or "UPPER": pixels above the center area
\item "B" or "BOTTOM": pixels below the center area
\item "L" or "LEFT": pixels in the left of the center area
\item "R" or "RIGHT": pixels in the right of the center area
\item "D" or "DONUT": pixels that surrounds the center area
}}

\item{operation.fun}{<character or function>: A character or function specifying the operation used to get quantification (Default "mean_rm0").
\itemize{
\item "mean_rm0": apply a mean after replace 0 with NA
\item "median_rm0": apply a median after replace 0 with NA
\item "sum_rm0": apply a sum after replace 0 with NA
\item "median": apply a median
\item "sum": apply a sum
\item "mean" or other character:  apply a mean
}}

\item{name.chr}{<character>: The name of a column in GInteraction attributes of matrices.lst used as named in the output vector (Default NULL). By default, sub-matrices IDs are used.}
}
\value{
A GRange object.
}
\description{
Function that computes quantification of contact frequencies in a given area and returns it in a named vector.
}
\details{
GetQuantif
}
\examples{
\dontrun{
   # Index Beaf32 in TADs domains
   Beaf32_Index.gnr <- IndexFeatures(
       gRange.gnr_lst = list(Beaf=Beaf32_Peaks.gnr), 
       chromSize.dtf  = data.frame(seqnames = c('2L', '2R'), seqlengths = c(23513712,25286936)),
       binSize.num    = 100000
   )

   # Beaf32 <-> Beaf32 Pairing
   Beaf_Beaf.gni <- SearchPairs(indexAnchor.gnr = Beaf32_Index.gnr)
   Beaf_Beaf.gni <- Beaf_Beaf.gni[seq_len(2000)] # subset 2000 first for exemple
   
   # Matrices extractions center on Beaf32 <-> Beaf32 point interaction
   interactions_PF.mtx_lst  <- ExtractSubmatrix(
       feature.gn         = Beaf_Beaf.gni,
       hic.cmx_lst        = HiC_Ctrl.cmx_lst,
       referencePoint.chr = "pf"
   )
   GetQuantif(
       matrices.lst  = interactions_PF.mtx_lst,
       area.fun      = "center",
       operation.fun = "mean"
   ) |> head()
}
}

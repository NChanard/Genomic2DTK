% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PlotAPA.R
\name{PlotAPA}
\alias{PlotAPA}
\title{Draw multiple aggregation plot.}
\usage{
PlotAPA(
  apa.mtx = NULL,
  trimPrct.num = 0,
  colMin.num = NULL,
  colMid.num = NULL,
  colMax.num = NULL,
  colCondMin.num = NULL,
  colCondMax.num = NULL
)
}
\arguments{
\item{apa.mtx}{<matrix>: The aggregated matrix.}

\item{trimPrct.num}{<numeric>: A number between 0 and 100 thaht give the percentage of triming in matrices.}

\item{colMin.num}{<matrix>: The minimal value in color scale. If Null automaticaly find.}

\item{colMid.num}{<matrix>: The middle value in color scale. If Null automaticaly find.}

\item{colMax.num}{<matrix>: The mximal value in color scale. If Null automaticaly find.}

\item{colCondMin.num}{<matrix>: Avalaible for plotting differantial aggregation. The minimal value in color scale in the classsical aggregation plot. If Null automaticaly find.}

\item{colCondMax.num}{<matrix>: Avalaible for plotting differantial aggregation. The maxiaml value in color scale in the classsical aggregation plot. If Null automaticaly find.}
}
\value{
None
}
\description{
Draw aggregation plot from aggregation matrices.
}
\details{
PlotAPA
}
\examples{
# Data
data(Beaf32_Peaks.gnr)
data(HiC_Ctrl.cmx_lst)
data(HiC_HS.cmx_lst)

# Index Beaf32
Beaf32_Index.gnr <- IndexFeatures(
    gRange.gnr_lst = list(Beaf=Beaf32_Peaks.gnr), 
    chromSize.dtf  = data.frame(seqnames = c('2L', '2R'), seqlengths = c(23513712,25286936)),
    binSize.num    = 100000
)

# Beaf32 <-> Beaf32 Pairing
Beaf_Beaf.gni <- SearchPairs(indexAnchor.gnr = Beaf32_Index.gnr)
Beaf_Beaf.gni <- Beaf_Beaf.gni[seq_len(2000)] # subset 2000 first for exemple

# Matrices extractions center on Beaf32 <-> Beaf32 point interaction
interactions_Ctrl.mtx_lst  <- ExtractSubmatrix(
    feature.gn         = Beaf_Beaf.gni,
    hic.cmx_lst        = HiC_Ctrl.cmx_lst,
    referencePoint.chr = "pf"
)
interactions_HS.mtx_lst  <- ExtractSubmatrix(
    feature.gn         = Beaf_Beaf.gni,
    hic.cmx_lst        = HiC_HS.cmx_lst,
    referencePoint.chr = "pf"
)

# Aggregate matrices in one matrix
aggreg.mtx <- Aggregation(interactions_Ctrl.mtx_lst)

# MultiPlot Aggregation
PlotAPA(aggreg.mtx)

# Differential Aggregation
aggregDiff.mtx <- Aggregation(
    ctrlMatrices.lst = interactions_Ctrl.mtx_lst,
    matrices.lst     = interactions_HS.mtx_lst,
    )

# MultiPlot Differential Aggregation
PlotAPA(aggregDiff.mtx)
}

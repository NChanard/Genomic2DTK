[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Genomic2DTK authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Genomic2DTK.html","id":"library","dir":"Articles","previous_headings":"","what":"Library","title":"Genomic2DTK - Quick start","text":"Genomic2DTK package allows perform aggregation analyses. first step, analyses consist extracting 3D conformation data specific genome loci. , second step, aggregate extracted signal loci visualize . tutorial see quickly perform type analysis. However, invite closer look documentation articles present depth possibilities Genomic2DTK allows example exploration quantification signal single locus performance differential analysis.","code":""},{"path":"/articles/Genomic2DTK.html","id":"install-libraries","dir":"Articles","previous_headings":"Library","what":"Install libraries","title":"Genomic2DTK - Quick start","text":"","code":"remotes::install_github(\"NChanard/Genomic2DTK\")"},{"path":"/articles/Genomic2DTK.html","id":"load-libraries","dir":"Articles","previous_headings":"Library","what":"Load libraries","title":"Genomic2DTK - Quick start","text":"","code":"library(Genomic2DTK)"},{"path":"/articles/Genomic2DTK.html","id":"test-dataset","dir":"Articles","previous_headings":"","what":"Test dataset","title":"Genomic2DTK - Quick start","text":"testing dataset obtained Drosophila melanogaster S2 cells. first part data provided directly package consist genomic location data (ChIP-seq annotations). part testing dataset downloaded directly 4DN platform consists 3D structure data genome (HiC maps two different conditions).","code":""},{"path":"/articles/Genomic2DTK.html","id":"genomic-location-and-annotation-data","dir":"Articles","previous_headings":"Test dataset","what":"Genomic location and annotation data","title":"Genomic2DTK - Quick start","text":"Subset ChIP-seq peaks Beaf-32 protein wild type condition GRanges format (bed). kind data import R rtracklayer package.","code":"data(\"Beaf32_Peaks.gnr\")"},{"path":"/articles/Genomic2DTK.html","id":"genomic-3d-structure","dir":"Articles","previous_headings":"Test dataset","what":"Genomic 3D structure","title":"Genomic2DTK - Quick start","text":"second part test data downloaded directly 4DN platform. consists data HiC experiments .hic format (juicer format).","code":"options(timeout = 3600)  temp.dir <- file.path(tempdir(), \"HIC_DATA\") dir.create(temp.dir)  Hic.url <- \"https://4dn-open-data-public.s3.amazonaws.com/fourfront-webprod/wfoutput/7386f953-8da9-47b0-acb2-931cba810544/4DNFIOTPSS3L.hic\" HicOutput.pth <- file.path(temp.dir, \"Control_HIC.hic\") download.file(Hic.url, HicOutput.pth, method = 'curl', extra = '-k')"},{"path":"/articles/Genomic2DTK.html","id":"additional-genome-informations","dir":"Articles","previous_headings":"Test dataset","what":"Additional genome informations","title":"Genomic2DTK - Quick start","text":"General genomic informations used functions along process data.frame containing chromosomes names sized binSize, corresponding HiC matrices resolution. complete data 2L 2R chromosome sizes HiC map resolution.","code":"seqlengths.num <- c('2L'=23513712, '2R'=25286936) chromSize.dtf  <- data.frame(   seqnames   = names(seqlengths.num ),    seqlengths = seqlengths.num   ) binSize.num <- 1000"},{"path":"/articles/Genomic2DTK.html","id":"hic-preprocess","dir":"Articles","previous_headings":"","what":"HiC Preprocess","title":"Genomic2DTK - Quick start","text":"package supports preprocessing HiC data allows access information simplified way thanks data structure.","code":""},{"path":"/articles/Genomic2DTK.html","id":"import","dir":"Articles","previous_headings":"HiC Preprocess","what":"Import","title":"Genomic2DTK - Quick start","text":"Genomic2DTK can import HiC data stored main formats: .hic, .cool, .mcool, .h5, .hdf5.","code":"hic.cmx_lst <- ImportHiC(   file.pth      = HicOutput.pth,   res.num       = binSize.num,   chrom_1.chr   = c(\"2L\", \"2R\")   )"},{"path":"/articles/Genomic2DTK.html","id":"balancing","dir":"Articles","previous_headings":"HiC Preprocess","what":"Balancing","title":"Genomic2DTK - Quick start","text":"Genomic2TK forces import R environment raw counts matrix, thus necessary perform balancing step (Defaut: Iterative Correction) makes possible correct biases inherent loci balancing sums line column make comparable.","code":"hic.cmx_lst <- NormalizeHiC(hic.cmx_lst)"},{"path":"/articles/Genomic2DTK.html","id":"expected","dir":"Articles","previous_headings":"HiC Preprocess","what":"Expected","title":"Genomic2DTK - Quick start","text":"bias inherent loci corrected, bias due genomic distance two loci must corrected. , matrix corrected expected values genomic distance.","code":"hic.cmx_lst <- ExpectedHiC(hic.cmx_lst)"},{"path":"/articles/Genomic2DTK.html","id":"hic-data-format-contactmatrix-list-cmx_lst-structure","dir":"Articles","previous_headings":"HiC Preprocess","what":"HiC data format: ContactMatrix list (cmx_lst) structure","title":"Genomic2DTK - Quick start","text":"element list corresponds ContactMatrix object (dgCMatrix object, sparse matrix format) storing contact frequencies one chromosomes (cis-interactions, ex: “2L_2L”) two chromosomes (trans-interactions, ex: “2L_2R”). HiC data format based InteractionSet package, details sparse matrices format, see Matrix. list object generals attributes. attributes accessed via: names : names list elements (ContactMatrix). resolution : resolution HiC map. seqnames : sequence name (chromosome name). seqlengths : sequence length base pairs. dimension : sequence length base bins name : matrix name. type : interaction type. “Cis” interactions chromosome “Trans” interactions different chromosomes. kind : matrix kind. U upper triangle matrices, L lower triangle matrices, NA rectangular square matrices. symmetric : boolean indicates whether matrix symmetric (lower triangle identical upper triangle). mtx : kind values matrix. exemple observed counts, normalized counts, observed/expected, etc. expected : tiblle expected count function genomic distance contactmatrix list metadata. accessed via: name : name ContactMatrix. type : interaction type. “Cis” interactions chromosome “Trans” interactions different chromosomes. kind : matrix kind. U upper triangle matrices, L lower triangle matrices, NA rectangular square symmetric : boolean indicates whether matrix symmetric (lower triangle identical upper triangle). resolution : resolution HiC map. removedCounts : sparse matrix (dgCMatrix) counts removed beacause low count row low count columns. observed : raw observed counts sparse matrix. normalizer : balancer vector apply raw observed counts obtaine normalized counts. (observed * normalizer = normalized counts). mtx : kind values matrix. exemple observed counts, normalized counts, observed/expected, etc. expected : expected vector apply normalized counts obtaine observed/expected counts. (normalized counts/expected = observed/expected).","code":"str(hic.cmx_lst, max.level = 3, give.attr = FALSE) #> List of 2 #>  $ 2L_2L:Formal class 'ContactMatrix' [package \"InteractionSet\"] with 5 slots #>   .. ..@ matrix  :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ anchor1 : int [1:23514] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..@ anchor2 : int [1:23514] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..@ regions :Formal class 'GRanges' [package \"GenomicRanges\"] with 7 slots #>   .. ..@ metadata:List of 10 #>  $ 2R_2R:Formal class 'ContactMatrix' [package \"InteractionSet\"] with 5 slots #>   .. ..@ matrix  :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ anchor1 : int [1:25287] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..@ anchor2 : int [1:25287] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..@ regions :Formal class 'GRanges' [package \"GenomicRanges\"] with 7 slots #>   .. ..@ metadata:List of 10 #> str(attributes(hic.cmx_lst)) #> List of 6 #>  $ names       : chr [1:2] \"2L_2L\" \"2R_2R\" #>  $ resolution  : num 1000 #>  $ chromSize   : tibble [2 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ name     : chr [1:2] \"2L\" \"2R\" #>   ..$ length   : num [1:2] 23513712 25286936 #>   ..$ dimension: num [1:2] 23514 25287 #>  $ matricesKind: tibble [2 × 4] (S3: tbl_df/tbl/data.frame) #>   ..$ name     : chr [1:2] \"2L_2L\" \"2R_2R\" #>   ..$ type     : chr [1:2] \"cis\" \"cis\" #>   ..$ kind     : chr [1:2] \"U\" \"U\" #>   ..$ symmetric: logi [1:2] TRUE TRUE #>  $ mtx         : chr \"o/e\" #>  $ expected    : tibble [24,362 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ distance: num [1:24362] 1 1001 2001 3001 4001 ... #>   ..$ expected: num [1:24362] 52.3 68.7 42.8 35.5 30.4 ... #> str(S4Vectors::metadata(hic.cmx_lst[[\"2L_2L\"]])) #> List of 10 #>  $ name         : chr \"2L_2L\" #>  $ type         : chr \"cis\" #>  $ kind         : chr \"U\" #>  $ symmetric    : logi TRUE #>  $ resolution   : num 1000 #>  $ removedCounts:Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ i       : int [1:67995] 5 7 8 9 11 11 11 11 17 28 ... #>   .. ..@ p       : int [1:23515] 0 0 0 0 0 0 0 0 0 0 ... #>   .. ..@ Dim     : int [1:2] 23514 23514 #>   .. ..@ Dimnames:List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. ..@ x       : num [1:67995] 1 2 3 1 2 3 3 1 1 1 ... #>   .. ..@ factors : list() #>  $ observed     : num [1:6540004] 41 126 34 60 90 32 77 89 74 87 ... #>  $ normalizer   : num [1:6540004] 1.085 0.971 0.869 1.345 1.203 ... #>  $ mtx          : chr \"norm\" #>  $ expected     : num [1:6540004] 52 65.8 52 39.8 65.8 ... #>"},{"path":"/articles/Genomic2DTK.html","id":"genomic-locations-preprocess","dir":"Articles","previous_headings":"","what":"Genomic locations Preprocess","title":"Genomic2DTK - Quick start","text":"part data corresponds positioning data genome. integrate HiC data, represented 2D matrices, data processed way.","code":""},{"path":"/articles/Genomic2DTK.html","id":"features-indexing","dir":"Articles","previous_headings":"Genomic locations Preprocess","what":"Features Indexing","title":"Genomic2DTK - Quick start","text":"first step indexing features genome. step allows features splitted grouped bins correspond resolution HiC matrix.","code":"Beaf_Index.gnr <- IndexFeatures(   gRange.gnr_lst        = list(Beaf = Beaf32_Peaks.gnr),   chromSize.dtf         = chromSize.dtf,   binSize.num           = binSize.num   )"},{"path":"/articles/Genomic2DTK.html","id":"beaf32---beaf32-putatives-pairs","dir":"Articles","previous_headings":"Genomic locations Preprocess","what":"Beaf32 <-> Beaf32 putatives pairs","title":"Genomic2DTK - Quick start","text":"second step search pairs bins. put two distance constraints order limit number pairs kept. Thus, pairs peaks Beaf32 least 25KB 100Kb apart retained.","code":"Beaf_Pairs.gni <- SearchPairs(   indexAnchor.gnr = Beaf_Index.gnr,   minDist.num     = \"25KB\",   maxDist.num     = \"100KB\"   )"},{"path":"/articles/Genomic2DTK.html","id":"aggregation-analysis","dir":"Articles","previous_headings":"","what":"Aggregation Analysis","title":"Genomic2DTK - Quick start","text":"data pre-processed, analysis can performed integrate . ## Extraction first step extract HiC data centred previously formed loci pairs. result extraction list matrices matrix corresponds pair.","code":"Beaf.mtx_lst <- ExtractSubmatrix(   feature.gn  = Beaf_Pairs.gni,   hic.cmx_lst = hic.cmx_lst   )"},{"path":"/articles/Genomic2DTK.html","id":"aggregation","dir":"Articles","previous_headings":"Aggregation Analysis","what":"Aggregation","title":"Genomic2DTK - Quick start","text":"aggregate extracted matrices one unique matrice performing default mean.","code":"aggreg.mtx <- Aggregation(Beaf.mtx_lst)"},{"path":"/articles/Genomic2DTK.html","id":"visulatisation","dir":"Articles","previous_headings":"Aggregation Analysis","what":"Visulatisation","title":"Genomic2DTK - Quick start","text":"Finaly, can plot aggregated matrix. can see red square correspond topological associated domains formed beaf32 loci.","code":"ggAPA(   apa.mtx = aggreg.mtx,   title.chr = \"APA Beaf <-> Beaf\"   )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Chanard \\. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"\\<ff> NC (2022). Genomic2DTK: Set genomic interaction analysis tools. https://nchanard.github.io/Genomic2DTK/, https://github.com/NChanard/Genomic2DTK.","code":"@Manual{,   title = {Genomic2DTK: Set of genomic interaction analysis tools},   author = {Nicolas Chanard \\},   year = {2022},   note = {https://nchanard.github.io/Genomic2DTK/, https://github.com/NChanard/Genomic2DTK}, }"},{"path":"/index.html","id":"genomic2dtk-","dir":"","previous_headings":"","what":"Set of genomic interaction analysis tools","title":"Set of genomic interaction analysis tools","text":"Genomic2DTK set genomic interaction analysis tools.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Set of genomic interaction analysis tools","text":"can install development version Genomic2DTK GitHub :","code":"remotes::install_github(\"NChanard/Genomic2DTK\")"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Set of genomic interaction analysis tools","text":"Genomic2DTK","code":""},{"path":"/reference/Aggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregated matrices list. — Aggregation","title":"Aggregated matrices list. — Aggregation","text":"Aggregated matrices list. apply differential paired matrices two list aggregation.","code":""},{"path":"/reference/Aggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregated matrices list. — Aggregation","text":"","code":"Aggregation(   ctrlMatrices.lst = NULL,   matrices.lst = NULL,   minDist.num = NULL,   maxDist.num = NULL,   trans.fun = NULL,   agg.fun = \"mean\",   rm0.bln = FALSE,   diff.fun = \"substraction\",   scaleCorrection.bln = FALSE,   correctionArea.lst = NULL,   statCompare.bln = FALSE )"},{"path":"/reference/Aggregation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregated matrices list. — Aggregation","text":"ctrlMatrices.lst <list[matrix]>: matrices list aggregate control. matrices.lst <list[matrix]>: matrices list aggregate. minDist.num <numeric>: minimal distance anchor bait. maxDist.num <numeric>: maximal distance anchor bait. trans.fun <chracter function>: function use transforme scale values submatrix aggregation. parameter character : \"quantile\" \"qtl\" apply function dplyr::ntile(x,500) \"percentile\" \"prct\" apply percentile values matrix \"rank\" apply ranking values matrix \"zscore\" apply scaling values matrix \"minmax\" apply SuperTK::MinMaxScale values matrix \"mu\" apply SuperTK::MeanScale values matrix (Default) apply log2 1+ratio agg.fun <chracter function>: function use aggregate pixel matrix. parameter character : \"50 \"+\" \"sum\" apply sum (Default) apply mean rm0.bln <logical>: TURE 0 replace NA. (Default FALSE) diff.fun <chracter function>: function use compute differential. parameter character : \"-\", \"substract\" \"substraction\" apply substraction \"/\" \"ratio\" apply ratio \"log2\",\"log2-\",\"log2/\" \"log2ratio\" apply log2 ratio (Default) apply log2 1+ratio scaleCorrection.bln <logical>: Whether correction done median value take ane noising area. (Default TRUE) correctionArea.lst <list>: Nested list indice define noising area fore correction. List muste contain first element \"\" (row indices) element called \"j\" (columns indices). NULL automatically take upper left part aggregated matrices. (Default NULL) statCompare.bln <logical>: Whether t.test must apply pxl differential aggregated matrix.","code":""},{"path":"/reference/Aggregation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregated matrices list. — Aggregation","text":"matrix","code":""},{"path":"/reference/Aggregation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregated matrices list. — Aggregation","text":"Aggregation","code":""},{"path":"/reference/Aggregation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregated matrices list. — Aggregation","text":"","code":"library(GenomicED) data(\"submatrixRF_Ctrl.mtx_lst\") data(\"submatrixRF.mtx_lst\")   aggreg.mtx <- Aggregation(   matrices.lst = submatrixRF_Ctrl.mtx_lst,    agg.fun      = \"sum\",   trans.fun    = \"qtl\",    rm0.bln      = TRUE,   minDist      = 9000,   maxDist      = 11000 ) |> suppressPackageStartupMessages()  str(attributes(aggreg.mtx),max.level = 1) #> List of 15 #>  $ dim                 : int [1:2] 101 101 #>  $ dimnames            :List of 2 #>  $ totalMatrixNumber   : int 100 #>  $ filteredMatrixNumber: int 9 #>  $ minimalDistance     : num 9000 #>  $ maximalDistance     : num 11000 #>  $ transformationMethod:function (mat.mtx)   #>  $ aggregationMethod   :function (pxl)   #>  $ zeroRemoved         : logi TRUE #>  $ interactions        :Formal class 'GInteractions' [package \"InteractionSet\"] with 6 slots #>  $ target              :List of 1 #>  $ resolution          : num 1000 #>  $ referencePoint      : chr \"rf\" #>  $ matriceDim          : num 101 #>  $ shiftFactor         : num 1 aggreg.mtx[1:5,1:5] #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  269  381  433  431 1491 #> [2,]    0  452  683  864 1837 #> [3,]    0    0  851 1090 1839 #> [4,]    0    0    0 1172 1532 #> [5,]    0    0    0    0 1567   diffAggreg.mtx <- Aggregation(   ctrlMatrices.lst    = submatrixRF_Ctrl.mtx_lst,   matrices.lst        = submatrixRF.mtx_lst,   minDist             = 9000,   maxDist             = 11000,   agg.fun             = \"mean\",   rm0.bln             = FALSE,   diff.fun            = \"substraction\",   scaleCorrection.bln = TRUE,   correctionArea.lst  =  list(     i = c(1:30),     j = c(72:101)     ),   statCompare.bln = TRUE )  str(attributes(diffAggreg.mtx),max.level = 1) #> List of 18 #>  $ dim                 : int [1:2] 101 101 #>  $ totalMatrixNumber   : int 100 #>  $ filteredMatrixNumber: int 9 #>  $ minimalDistance     : num 9000 #>  $ maximalDistance     : num 11000 #>  $ aggregationMethod   :function (pxl)   #>  $ differentialMethod  :function (mat.mtx, ctrl.mtx)   #>  $ zeroRemoved         : logi FALSE #>  $ correctedFact       : num -0.0113 #>  $ correctionArea.i    : int [1:30] 1 2 3 4 5 6 7 8 9 10 ... #>  $ correctionArea.j    : int [1:30] 72 73 74 75 76 77 78 79 80 81 ... #>  $ matrices            :List of 7 #>  $ interactions        :Formal class 'GInteractions' [package \"InteractionSet\"] with 6 slots #>  $ target              :List of 1 #>  $ resolution          : num 1000 #>  $ referencePoint      : chr \"rf\" #>  $ matriceDim          : num 101 #>  $ shiftFactor         : num 1 diffAggreg.mtx[1:5,1:5] #>             [,1]       [,2]       [,3]        [,4]          [,5] #> [1,] -0.05192017 0.09251459 0.23694935  0.38138410  0.1519550339 #> [2,]         NaN 0.05003319 0.13796810  0.22590301  0.1014875188 #> [3,]         NaN        NaN 0.03898685  0.07042192  0.0510200038 #> [4,]         NaN        NaN        NaN -0.08505918  0.0005524887 #> [5,]         NaN        NaN        NaN         NaN -0.0552796115"},{"path":"/reference/Beaf32_Peaks.gnr.html","id":null,"dir":"Reference","previous_headings":"","what":"Drosophila Melanogaster Beaf32 peaks on 2L and 2R chromosomes. — Beaf32_Peaks.gnr","title":"Drosophila Melanogaster Beaf32 peaks on 2L and 2R chromosomes. — Beaf32_Peaks.gnr","text":"Drosophila Melanogaster Beaf32 peaks 2L 2R chromosomes.","code":""},{"path":"/reference/Beaf32_Peaks.gnr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drosophila Melanogaster Beaf32 peaks on 2L and 2R chromosomes. — Beaf32_Peaks.gnr","text":"","code":"data(Beaf32_Peaks.gnr)"},{"path":"/reference/Beaf32_Peaks.gnr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Drosophila Melanogaster Beaf32 peaks on 2L and 2R chromosomes. — Beaf32_Peaks.gnr","text":"object class GRanges.","code":""},{"path":"/reference/Beaf32_Peaks.gnr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drosophila Melanogaster Beaf32 peaks on 2L and 2R chromosomes. — Beaf32_Peaks.gnr","text":"","code":"data(Beaf32_Peaks.gnr) Beaf32_Peaks.gnr #> GRanges object with 600 ranges and 2 metadata columns: #>         seqnames            ranges strand |     score        name #>            <Rle>         <IRanges>  <Rle> | <numeric> <character> #>     [1]       2L       35594-35725      * |        76    Beaf32_2 #>     [2]       2L       47296-47470      * |        44    Beaf32_3 #>     [3]       2L       65770-65971      * |       520    Beaf32_5 #>     [4]       2L       73858-74052      * |       205    Beaf32_8 #>     [5]       2L     102138-102684      * |      1830   Beaf32_11 #>     ...      ...               ...    ... .       ...         ... #>   [596]       2R 24687286-24687440      * |        37 Beaf32_2943 #>   [597]       2R 24874870-24875019      * |        82 Beaf32_2958 #>   [598]       2R 24944555-24944686      * |        48 Beaf32_2966 #>   [599]       2R 24969405-24969744      * |      1068 Beaf32_2971 #>   [600]       2R 25038610-25038711      * |        76 Beaf32_2975 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"/reference/CutHiC.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut HiC map in HiC chunks. — CutHiC","title":"Cut HiC map in HiC chunks. — CutHiC","text":"Cut mega contactMatrix (join multiple chromosomic maps) inq list contactMatrix.","code":""},{"path":"/reference/CutHiC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut HiC map in HiC chunks. — CutHiC","text":"","code":"CutHiC(megaHic.cmx, verbose.bln = TRUE)"},{"path":"/reference/CutHiC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut HiC map in HiC chunks. — CutHiC","text":"megaHic.cmx <contactMatrix>: HiC megamap. verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE)","code":""},{"path":"/reference/CutHiC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut HiC map in HiC chunks. — CutHiC","text":"matrices list.","code":""},{"path":"/reference/CutHiC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cut HiC map in HiC chunks. — CutHiC","text":"CutHiC","code":""},{"path":"/reference/ExpectedHiC.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that normalises HiC matrices by expected values, returning observed/expected normalised matrices. — ExpectedHiC","title":"Function that normalises HiC matrices by expected values, returning observed/expected normalised matrices. — ExpectedHiC","text":"Function normalises HiC matrices expected values, returning observed/expected normalised matrices.","code":""},{"path":"/reference/ExpectedHiC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that normalises HiC matrices by expected values, returning observed/expected normalised matrices. — ExpectedHiC","text":"","code":"ExpectedHiC(hic.cmx_lst, verbose.bln = TRUE, cores.num = 1)"},{"path":"/reference/ExpectedHiC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that normalises HiC matrices by expected values, returning observed/expected normalised matrices. — ExpectedHiC","text":"hic.cmx_lst <List[contactMatrix]>: HiC maps list. verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE) cores.num <numerical> : Number cores used. (Default 1)","code":""},{"path":"/reference/ExpectedHiC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that normalises HiC matrices by expected values, returning observed/expected normalised matrices. — ExpectedHiC","text":"matrices list.","code":""},{"path":"/reference/ExpectedHiC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function that normalises HiC matrices by expected values, returning observed/expected normalised matrices. — ExpectedHiC","text":"ExpectedHiC","code":""},{"path":"/reference/ExtractSubmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Submatrix extraction — ExtractSubmatrix","title":"Submatrix extraction — ExtractSubmatrix","text":"Extract matrices HiC maps list around genomic features.","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submatrix extraction — ExtractSubmatrix","text":"","code":"ExtractSubmatrix(   feature.gn = NULL,   hic.cmx_lst = NULL,   referencePoint.chr = \"pf\",   res.num = NULL,   matriceDim.num = 21,   shiftFactor.num = 1,   cores.num = 1,   verbose.bln = TRUE )"},{"path":"/reference/ExtractSubmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submatrix extraction — ExtractSubmatrix","text":"feature.gn <GRanges Pairs[GRanges] GInteractions>: genomic coordinates compute extraction HiC submatrix. hic.cmx_lst <List[contactMatrix]>: HiC maps list. referencePoint.chr <character>: Type extracted submatrices. \"rf\" \"region feature\" extract triangle-shaped matrices around regions \"pf\" \"point feature\" extract square-shaped matrices around points. (Default \"rf\") res.num <numeric>: resoulution used hic.cmx_lst. NULL automatically find resolution attributes hic.cmx_lst. (Default NULL) matriceDim.num <numeric>: size matrices output. (Default 21). shiftFactor.num <numeric>: Onlt \"referencePoint.chr\" \"rf\". Factor defining much distance anchor bait extracted region (Default 1). Ex: shiftFactor.num=2, extracted matrices 2*regionSize+regionSize+2*regionSize. cores.num <integer> : integer specify number cores. (Default 1) verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE)","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submatrix extraction — ExtractSubmatrix","text":"matrices list.","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Submatrix extraction — ExtractSubmatrix","text":"ExtractSubmatrix","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Submatrix extraction — ExtractSubmatrix","text":"","code":"library(GenomicED) data(\"interactions.gni\") data(\"HiC_ctrl.cmx_lst\")   interactions_RFmatrix_ctrl.lst  <- ExtractSubmatrix(   feature.gn         = interactions.gni,   hic.cmx_lst        = HiC_ctrl.cmx_lst,   res.num            = NULL,   referencePoint.chr = \"rf\",   matriceDim.num     = 101,   cores.num          = 1,   verbose.bln        = FALSE   )  str(interactions_RFmatrix_ctrl.lst,max.level = 1, list.len=5) #> List of 314 #>  $ 2L:74_2L:77      : num [1:101, 1:101] 0 NA NA NA NA NA NA NA NA NA ... #>  $ 2L:107_2L:115    : num [1:101, 1:101] 0 NA NA NA NA NA NA NA NA NA ... #>  $ 2L:107_2L:121    : num [1:101, 1:101] 0 NA NA NA NA NA NA NA NA NA ... #>  $ 2L:117_2L:121    : num [1:101, 1:101] 0 NA NA NA NA NA NA NA NA NA ... #>  $ 2L:268_2L:274    : num [1:101, 1:101] 0 NA NA NA NA NA NA NA NA NA ... #>   [list output truncated] #>  - attr(*, \"interactions\")=Formal class 'GInteractions' [package \"InteractionSet\"] with 6 slots #>  - attr(*, \"resolution\")= num 1000 #>  - attr(*, \"referencePoint\")= chr \"rf\" #>  - attr(*, \"matriceDim\")= num 101 #>  - attr(*, \"shiftFactor\")= num 1 attributes(interactions_RFmatrix_ctrl.lst)$interactions[1] #> GInteractions object with 1 interaction and 15 metadata columns: #>               seqnames1     ranges1     seqnames2     ranges2 |        name #>                   <Rle>   <IRanges>         <Rle>   <IRanges> | <character> #>   2L:74_2L:77        2L 73001-74000 ---        2L 76001-77000 | 2L:74_2L:77 #>                constraint  distance orientation submatrix.name  anchor.bin #>               <character> <integer>   <logical>    <character> <character> #>   2L:74_2L:77       Tad_1      3000        TRUE    2L:74_2L:77       2L:74 #>               anchor.name    bait.bin   bait.name anchor.Beaf.score #>               <character> <character> <character>         <numeric> #>   2L:74_2L:77 2L:74:Tad_1       2L:77 2L:77:Tad_1               205 #>               anchor.Beaf.name anchor.Beaf.bln bait.Tss.class bait.Tss.name #>                         <list>       <numeric>    <character>        <list> #>   2L:74_2L:77         Beaf32_8               1       inactive   FBgn0031214 #>               bait.Tss.bln #>                  <numeric> #>   2L:74_2L:77            1 #>   ------- #>   regions: 429 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome"},{"path":"/reference/FilterInteractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Submatrix or Interactions filtering. — FilterInteractions","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"Search GInteraction object interactions correspond ti target list return list index filter matrices list according target selection function.","code":""},{"path":"/reference/FilterInteractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"","code":"FilterInteractions(   matrices.lst = NULL,   interarctions.gni = NULL,   target.lst = NULL,   selection.fun = function() {      Reduce(intersect, interarctions.ndx_lst)  } )"},{"path":"/reference/FilterInteractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"matrices.lst <List[matrix]>: matrices list filter. NULL, function return filtred matrices list, else return list index. interarctions.gni <GInteractions>: GInteraction object compute filter. target.lst <List>: nammed list describe target. selection.fun <function>: function described target must cross. (Defaul intersection targets)","code":""},{"path":"/reference/FilterInteractions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"list elements index filtred matrices list attributes updates.","code":""},{"path":"/reference/FilterInteractions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"FilterInteractions","code":""},{"path":"/reference/FilterInteractions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"","code":"library(GenomicED) data(\"submatrixPF_Ctrl.mtx_lst\")   target.lst <- list(   anchor.Beaf.name = c(\"Beaf32_8\",\"Beaf32_15\"),   bait.Tss.name    = c(\"FBgn0031214\",\"FBgn0005278\"),   name             = c(\"2L:74_2L:77\"),   distance         = function(columnElement){     return(14000==columnElement || columnElement == 3000)     } )   # Extraction on InteractionSet FilterInteractions(   interarctions.gni = attributes(submatrixPF_Ctrl.mtx_lst)$interactions,   target.lst        = target.lst,   selection.fun     = NULL ) |> str(max.level=1) #> List of 4 #>  $ anchor.Beaf.name: int [1:3] 1 3 4 #>  $ bait.Tss.name   : int [1:3] 1 2 3 #>  $ name            : int 1 #>  $ distance        : int [1:9] 1 3 8 24 38 49 63 65 80  selection.fun = function(){   Reduce(intersect, list(anchor.Beaf.name, bait.Tss.name ,distance) ) |>   setdiff(name) }   # Extraction on matrices list and with selection FilterInteractions(   matrices.lst = submatrixPF_Ctrl.mtx_lst,   target.lst        = target.lst,   selection.fun     = selection.fun ) |> str(max.level=1) #> List of 1 #>  $ 2L:107_2L:121: num [1:41, 1:41] 0 0 2.96 0 0 ... #>  - attr(*, \"interactions\")=Formal class 'GInteractions' [package \"InteractionSet\"] with 6 slots #>  - attr(*, \"resolution\")= num 1000 #>  - attr(*, \"referencePoint\")= chr \"pf\" #>  - attr(*, \"matriceDim\")= num 41 #>  - attr(*, \"target\")=List of 4 #>  - attr(*, \"selection\")=function ()   #>   ..- attr(*, \"srcref\")= 'srcref' int [1:8] 22 17 25 1 17 1 22 25 #>   .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x559f08e6e780>    # Extraction on InteractionSet with InteractionsSet target.lst <- list(interactions = attributes(submatrixPF_Ctrl.mtx_lst)$interactions[1:2]) FilterInteractions(   interarctions.gni = attributes(submatrixPF_Ctrl.mtx_lst)$interactions,   target.lst        = target.lst,   selection.fun     = NULL ) #> interactions1 interactions2  #>             1             2    # Extraction on InteractionSet list and with GRanges gRangesTarget.gnr <- attributes(submatrixPF_Ctrl.mtx_lst)$interactions |>  InteractionSet::anchors() target.lst <- list(     first =        gRangesTarget.gnr[[\"first\"]][1:2] ) FilterInteractions(   interarctions.gni = attributes(submatrixPF_Ctrl.mtx_lst)$interactions,   target.lst        = target.lst,   selection.fun     = NULL ) #> first1 first2  #>      1      2"},{"path":"/reference/GetQuantif.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute quantification on extracted submatrix. — GetQuantif","title":"Compute quantification on extracted submatrix. — GetQuantif","text":"Function computes quantification contact frequencies given area returns named vector.","code":""},{"path":"/reference/GetQuantif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute quantification on extracted submatrix. — GetQuantif","text":"","code":"GetQuantif(   matrices.lst,   area.fun = \"center\",   operation.fun = \"mean_rm0\",   name.chr = NULL )"},{"path":"/reference/GetQuantif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute quantification on extracted submatrix. — GetQuantif","text":"matrices.lst <List[matrix]>: matrices list. area.fun <character function>: character function allow extraction area matrix compose matrices list (Default \"center\"). \"C\" \"CENTER\": pixel intersection anchor bait. \"UL\" \"UPPER_LEFT\": pixels uppper left square \"UR\" \"UPPER_RIGHT\": pixels uppper right square \"BL\" \"BOTTOM_LEFT\": pixels bottom left square \"BR\" \"BOTTOM_RIGHT\": pixels bottom right square \"U\" \"UPPER\": pixels center area \"B\" \"BOTTOM\": pixels center area \"L\" \"LEFT\": pixels left center area \"R\" \"RIGHT\": pixels right center area \"D\" \"DONUT\": pixels surrounds center area operation.fun <character function>: character function specifying operation used get quantification (Default \"mean_rm0\"). \"mean_rm0\": apply mean replace 0 NA \"median_rm0\": apply median replace 0 NA \"sum_rm0\": apply sum replace 0 NA \"median\": apply median \"sum\": apply sum \"mean\" character:  apply mean name.chr <character>: name column GInteraction attributes matrices.lst used named output vector (Default NULL). default, sub-matrices IDs used.","code":""},{"path":"/reference/GetQuantif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute quantification on extracted submatrix. — GetQuantif","text":"GRange object.","code":""},{"path":"/reference/GetQuantif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute quantification on extracted submatrix. — GetQuantif","text":"GetQuantif","code":""},{"path":"/reference/GetQuantif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute quantification on extracted submatrix. — GetQuantif","text":"","code":"library(GenomicED) data(\"submatrixRF_Ctrl.mtx_lst\")   GetQuantif(   matrices.lst  = submatrixRF_Ctrl.mtx_lst,   area.fun      = \"center\",   operation.fun = \"mean\"   ) |> str(max.level=1, list.len = 5) #>  Named num [1:100] 0.00275 0.00479 1.01102 0.03643 1.69169 ... #>  - attr(*, \"names\")= chr [1:100] \"2L:74_2L:77\" \"2L:107_2L:115\" \"2L:107_2L:121\" \"2L:117_2L:121\" ... #>  - attr(*, \"interactions\")=Formal class 'GInteractions' [package \"InteractionSet\"] with 6 slots #>  - attr(*, \"target\")=List of 1 #>  - attr(*, \"resolution\")= num 1000 #>  - attr(*, \"referencePoint\")= chr \"rf\" #>  - attr(*, \"matriceDim\")= num 101 #>  - attr(*, \"shiftFactor\")= num 1 #>  - attr(*, \"operation\")=function (x)   #>  - attr(*, \"area\")=function (matrice.mtx)"},{"path":"/reference/ICEnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Iterative Correction on hic chunk. — ICEnorm","title":"Compute Iterative Correction on hic chunk. — ICEnorm","text":"Compute Iterative Correction (Vanilla Count) hic maps.","code":""},{"path":"/reference/ICEnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Iterative Correction on hic chunk. — ICEnorm","text":"","code":"ICEnorm(hic.cmx, qtlTh.num = 0.15, maxIter.num = 50)"},{"path":"/reference/ICEnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Iterative Correction on hic chunk. — ICEnorm","text":"hic.cmx <contactMatrix>: HiC maps chunk normalize. qtlTh.num <numerical>: threshold quantile bins ignored. (Default 0.15) maxIter.num <numerical>: maximum iteration number.","code":""},{"path":"/reference/ICEnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Iterative Correction on hic chunk. — ICEnorm","text":"normalized contactMatrix","code":""},{"path":"/reference/ICEnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Iterative Correction on hic chunk. — ICEnorm","text":"ICEnorm","code":""},{"path":"/reference/ImportHiC.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Hic data — ImportHiC","title":"Import Hic data — ImportHiC","text":"Import ..hic, .cool, .mcool .bedpe data","code":""},{"path":"/reference/ImportHiC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Hic data — ImportHiC","text":"","code":"ImportHiC(   file.pth = NULL,   res.num = NULL,   chromSize.dtf = NULL,   chrom_1.chr = NULL,   chrom_2.chr = NULL,   verbose.bln = TRUE,   cores.num = 1 )"},{"path":"/reference/ImportHiC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Hic data — ImportHiC","text":"file.pth <GRanges Pairs[GRanges] GInteractions>: genomic feature compute extraction HiC submatrix. Extension .hic, .cool, .mcool, .h5, .hdf5, .HDF5 .bedpe\" assuming .h5 et .hdf5 cool (mcool). res.num <numeric>: HiC resolution. chromSize.dtf <data.frame>: data.frame first colum correspond chromosomes names, second column correspond chromosomes lengths base pairs. chrom_1.chr <numeric>: seqnames firsts chromosmes (rows matrix). chrom_2.chr <numeric>: seqnames second chromosmes (col matrix). NULL equal chrom_1.chr (Defalt NULL) verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE) cores.num <numerical> : integer specify number cores. (Default 1)","code":""},{"path":"/reference/ImportHiC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Hic data — ImportHiC","text":"matrices list.","code":""},{"path":"/reference/ImportHiC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Hic data — ImportHiC","text":"ImportHiC","code":""},{"path":"/reference/IndexFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that indexes a GRanges object on binned genome and constraints. Needed prior SearchPairs() function. Note that bins in the same constraint region only will be paired in SearchPairs(). — IndexFeatures","title":"Function that indexes a GRanges object on binned genome and constraints. Needed prior SearchPairs() function. Note that bins in the same constraint region only will be paired in SearchPairs(). — IndexFeatures","text":"Function indexes GRanges object binned genome constraints. Needed prior SearchPairs() function.","code":""},{"path":"/reference/IndexFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that indexes a GRanges object on binned genome and constraints. Needed prior SearchPairs() function. Note that bins in the same constraint region only will be paired in SearchPairs(). — IndexFeatures","text":"","code":"IndexFeatures(   gRange.gnr_lst = NULL,   constraint.gnr = NULL,   chromSize.dtf = NULL,   binSize.num = NULL,   method.chr = \"mean\",   variablesName.chr_vec = NULL,   cores.num = 1,   verbose.bln = TRUE )"},{"path":"/reference/IndexFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that indexes a GRanges object on binned genome and constraints. Needed prior SearchPairs() function. Note that bins in the same constraint region only will be paired in SearchPairs(). — IndexFeatures","text":"gRange.gnr_lst <GRanges GRangesList list[GRanges]>: GRanges object, list GRanges GRangesList containing coordinates index. constraint.gnr <GRanges>: GRanges object constraint regions. Note bins constraint region paired SearchPairs(). NULL chromosomes chromSize.dtf used constraints (Default NULL) chromSize.dtf <data.frame>: data.frame containing chromosomes names lengths base pairs (see example). binSize.num <integer>: Bin size bp - corresponds HiC matrix resolution. method.chr <character>: string defining summary method used metadata columns defined variablesName.chr_vec multiple ranges indexed bin. Use 'mean', 'median', 'sum', 'max' 'min'. (Default 'mean'') variablesName.chr_vec <character> : character vector specify metadata columns GRanges apply summary method multiple ranges indexed bin. cores.num <integer> : Number cores used. (Default 1) verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE)","code":""},{"path":"/reference/IndexFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that indexes a GRanges object on binned genome and constraints. Needed prior SearchPairs() function. Note that bins in the same constraint region only will be paired in SearchPairs(). — IndexFeatures","text":"GRanges object.","code":""},{"path":"/reference/IndexFeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function that indexes a GRanges object on binned genome and constraints. Needed prior SearchPairs() function. Note that bins in the same constraint region only will be paired in SearchPairs(). — IndexFeatures","text":"IndexFeatures","code":""},{"path":"/reference/IndexFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function that indexes a GRanges object on binned genome and constraints. Needed prior SearchPairs() function. Note that bins in the same constraint region only will be paired in SearchPairs(). — IndexFeatures","text":"","code":"library(GenomicED) data(\"anchors_Peaks.gnr\") anchors_Peaks.gnr[1] #> GRanges object with 1 range and 2 metadata columns: #>       seqnames      ranges strand |     score        name #>          <Rle>   <IRanges>  <Rle> | <numeric> <character> #>   [1]       2L 35594-35725      * |        76    Beaf32_2 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths   seqlengths.num <- c('2L'=23513712, '2R'=25286936) chromSize.dtf  <- data.frame(   seqnames   = names(seqlengths.num ),    seqlengths = seqlengths.num   ) binSize.num <- 10000  anchors_Index.gnr <- IndexFeatures(   gRange.gnr_lst        = list(Beaf=anchors_Peaks.gnr),    constraint.gnr        = NULL,   chromSize.dtf         = chromSize.dtf,   binSize.num           = binSize.num,   method.chr            = \"max\",   variablesName.chr_vec = \"score\",   cores.num             = 1,   verbose.bln           = FALSE   )  anchors_Index.gnr[1] #> GRanges object with 1 range and 6 metadata columns: #>       seqnames      ranges strand |        name         bin  constraint #>          <Rle>   <IRanges>  <Rle> | <character> <character> <character> #>   [1]       2L 30001-40000      * |     2L:4:2L        2L:4          2L #>       Beaf.score Beaf.name  Beaf.bln #>        <numeric>    <list> <logical> #>   [1]         76  Beaf32_2      TRUE #>   ------- #>   seqinfo: 2 sequences from an unspecified genome"},{"path":"/reference/JoinHiC.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge HiC chunk as HiC map — JoinHiC","title":"Merge HiC chunk as HiC map — JoinHiC","text":"Create mega contactMatrix list contactMatrix.","code":""},{"path":"/reference/JoinHiC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge HiC chunk as HiC map — JoinHiC","text":"","code":"JoinHiC(hic.cmx_lst)"},{"path":"/reference/JoinHiC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge HiC chunk as HiC map — JoinHiC","text":"hic.cmx_lst <List[contactMatrix]>: HiC maps list.","code":""},{"path":"/reference/JoinHiC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge HiC chunk as HiC map — JoinHiC","text":"contactMatrix.","code":""},{"path":"/reference/JoinHiC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge HiC chunk as HiC map — JoinHiC","text":"JoinHiC","code":""},{"path":"/reference/NormalizeHiC.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute HiC map matrix-balancing normalization. — NormalizeHiC","title":"Compute HiC map matrix-balancing normalization. — NormalizeHiC","text":"Apply matrix-balancing normalization method list contacts matrix.","code":""},{"path":"/reference/NormalizeHiC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute HiC map matrix-balancing normalization. — NormalizeHiC","text":"","code":"NormalizeHiC(   hic.cmx_lst,   method.chr = \"ICE\",   interaction.type = NULL,   maxIter.num = 50,   qtlTh.num = 0.15,   cores.num = 1,   verbose.bln = TRUE )"},{"path":"/reference/NormalizeHiC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute HiC map matrix-balancing normalization. — NormalizeHiC","text":"hic.cmx_lst <List[contactMatrix]>: HiC maps list. method.chr <character> : kind normalization method. One \"ICE\", \"VC\" \"VC_SQRT\" (Default \"ICE\") interaction.type <character> : \"cis\", \"trans\", c(\"cis\", \"trans\"), \"\". NULL normalization apply cis chunks trans chunks (equivalent c(\"cis\", \"trans\")). \"\", normalization apply chuncks . (Default NULL) maxIter.num <numerical>: maximum iteration number. qtlTh.num <numerical>: threshold quantile bins ignored. (Default 0.15) cores.num <numerical> : Number cores used. (Default 1) verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE)","code":""},{"path":"/reference/NormalizeHiC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute HiC map matrix-balancing normalization. — NormalizeHiC","text":"matrices list.","code":""},{"path":"/reference/NormalizeHiC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute HiC map matrix-balancing normalization. — NormalizeHiC","text":"NormalizeHiC","code":""},{"path":"/reference/OrienteMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"extracted matrix orientation — OrienteMatrix","title":"extracted matrix orientation — OrienteMatrix","text":"Oriente extracted Matrix according anchors bait order. Apply 180° rotation follow transposation matrix matricies list according interactions attributes list.","code":""},{"path":"/reference/OrienteMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extracted matrix orientation — OrienteMatrix","text":"","code":"OrienteMatrix(matrice.mtx)"},{"path":"/reference/OrienteMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extracted matrix orientation — OrienteMatrix","text":"matrice.mtx <matrix List[matrix]>: matrix matricies list oriente","code":""},{"path":"/reference/OrienteMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extracted matrix orientation — OrienteMatrix","text":"Oriented matrix matricies list","code":""},{"path":"/reference/OrienteMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"extracted matrix orientation — OrienteMatrix","text":"OrienteMatrix","code":""},{"path":"/reference/OrienteMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extracted matrix orientation — OrienteMatrix","text":"","code":"library(GenomicED) data(\"submatrixPF_Ctrl.mtx_lst\")   head(attributes(submatrixPF_Ctrl.mtx_lst)$interactions$orientation) #> [1]  TRUE FALSE FALSE FALSE FALSE FALSE  submatrixPF_Ctrl_oriented.mtx_lst <- OrienteMatrix(submatrixPF_Ctrl.mtx_lst) #> [1] \"58 matrices are oriented\"  head(attributes(submatrixPF_Ctrl_oriented.mtx_lst)$interactions$orientation) #> [1] TRUE TRUE TRUE TRUE TRUE TRUE"},{"path":"/reference/PlotAPA.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw aggregation plot. — PlotAPA","title":"Draw aggregation plot. — PlotAPA","text":"Draw aggregation plot aggregation matrices.","code":""},{"path":"/reference/PlotAPA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw aggregation plot. — PlotAPA","text":"","code":"PlotAPA(   apa.mtx = NULL,   trimPrct.num = 0,   minBoundary.num = NULL,   center.num = NULL,   maxBoundary.num = NULL,   minConditionBoundary.num = NULL,   maxConditionBoundary.num = NULL )"},{"path":"/reference/PlotAPA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw aggregation plot. — PlotAPA","text":"apa.mtx <matrix>: aggregated matrix. trimPrct.num <numeric>: number 0 100 thaht give percentage triming matrices. minBoundary.num <matrix>: minimal value color scale. Null automaticaly find. center.num <matrix>: middle value color scale. Null automaticaly find. maxBoundary.num <matrix>: mximal value color scale. Null automaticaly find. minConditionBoundary.num <matrix>: Avalaible plotting differantial aggregation. minimal value color scale classsical aggregation plot. Null automaticaly find. maxConditionBoundary.num <matrix>: Avalaible plotting differantial aggregation. maxiaml value color scale classsical aggregation plot. Null automaticaly find.","code":""},{"path":"/reference/PlotAPA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw aggregation plot. — PlotAPA","text":"None","code":""},{"path":"/reference/PlotAPA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw aggregation plot. — PlotAPA","text":"PlotAPA","code":""},{"path":"/reference/PlotAPA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw aggregation plot. — PlotAPA","text":"","code":"library(GenomicED) data(aggreg.mtx)   PlotAPA(     apa.mtx                  = aggreg.mtx,     trimPrct.num             = 20,     minBoundary.num          = -2,     center.num               = 0,     maxBoundary.num          = 2,     minConditionBoundary.num = 0,     maxConditionBoundary.num = 2 ) #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.     #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead.  #> Warning: Use of `mu.tbl$grp.mean` is discouraged. #> ℹ Use `grp.mean` instead. #> Warning: Use of `mu.tbl$class` is discouraged. #> ℹ Use `class` instead.  #> Warning: Use of `mu.tbl$grp.mean` is discouraged. #> ℹ Use `grp.mean` instead. #> Warning: Use of `mu.tbl$class` is discouraged. #> ℹ Use `class` instead.  #> Warning: Use of `mu.tbl$grp.mean` is discouraged. #> ℹ Use `grp.mean` instead. #> Warning: Use of `mu.tbl$class` is discouraged. #> ℹ Use `class` instead.  #> Warning: Use of `mu.tbl$grp.mean` is discouraged. #> ℹ Use `grp.mean` instead. #> Warning: Use of `mu.tbl$class` is discouraged. #> ℹ Use `class` instead."},{"path":"/reference/SearchPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates pairs of coordinates from indexed anchor and bait genomic coordinates according to distance constraints. — SearchPairs","title":"Creates pairs of coordinates from indexed anchor and bait genomic coordinates according to distance constraints. — SearchPairs","text":"Creates pairs coordinates indexed anchor bait genomic coordinates according distance constraints.","code":""},{"path":"/reference/SearchPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates pairs of coordinates from indexed anchor and bait genomic coordinates according to distance constraints. — SearchPairs","text":"","code":"SearchPairs(   indexAnchor.gnr = NULL,   indexBait.gnr = NULL,   minDist.num = NULL,   maxDist.num = NULL,   verbose.bln = TRUE,   cores.num = 1 )"},{"path":"/reference/SearchPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates pairs of coordinates from indexed anchor and bait genomic coordinates according to distance constraints. — SearchPairs","text":"indexAnchor.gnr <GRanges>: first indexed GRanges object used pairs anchor (must indexed using IndexFeatures()). indexBait.gnr <GRanges>: second indexed GRanges object used pairs bait (must indexed using IndexFeatures()). NULL, indexAnchor.gnr used instead (Default NULL) minDist.num <numeric>: Minimal distance anchors baits. (Default NULL) maxDist.num <numeric>: Maximal distance anchors baits. (Default NULL) verbose.bln <logical>: TRUE show progression console. (Default TRUE) cores.num <integer> : Number cores use. (Default 1)","code":""},{"path":"/reference/SearchPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates pairs of coordinates from indexed anchor and bait genomic coordinates according to distance constraints. — SearchPairs","text":"GInteractions object.","code":""},{"path":"/reference/SearchPairs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates pairs of coordinates from indexed anchor and bait genomic coordinates according to distance constraints. — SearchPairs","text":"SearchPairs","code":""},{"path":"/reference/SearchPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates pairs of coordinates from indexed anchor and bait genomic coordinates according to distance constraints. — SearchPairs","text":"","code":"library(GenomicED)  data(anchors_Index.gnr) anchors_Index.gnr[1] #> GRanges object with 1 range and 6 metadata columns: #>       seqnames      ranges strand |        name         bin  constraint #>          <Rle>   <IRanges>  <Rle> | <character> <character> <character> #>   [1]       2L 73001-74000      * | 2L:74:Tad_1       2L:74       Tad_1 #>       Beaf.score Beaf.name  Beaf.bln #>        <numeric>    <list> <numeric> #>   [1]        205  Beaf32_8         1 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome  data(baits_Index.gnr) baits_Index.gnr[1] #> GRanges object with 1 range and 6 metadata columns: #>       seqnames      ranges strand |        name         bin  constraint #>          <Rle>   <IRanges>  <Rle> | <character> <character> <character> #>   [1]       2L 76001-77000      * | 2L:77:Tad_1       2L:77       Tad_1 #>         Tss.class    Tss.name   Tss.bln #>       <character>      <list> <numeric> #>   [1]    inactive FBgn0031214         1 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome   interactions.gni <- SearchPairs(     indexAnchor.gnr = anchors_Index.gnr,     indexBait.gnr   = baits_Index.gnr,     minDist.num     = 9000,      maxDist.num     = 11000,     cores.num       = 1,     verbose.bln     = FALSE     )  interactions.gni[1] #> GInteractions object with 1 interaction and 15 metadata columns: #>                 seqnames1       ranges1     seqnames2       ranges2 | #>                     <Rle>     <IRanges>         <Rle>     <IRanges> | #>   2L:278_2L:268        2L 277001-278000 ---        2L 267001-268000 | #>                          name  constraint  distance orientation submatrix.name #>                   <character> <character> <integer>   <logical>    <character> #>   2L:278_2L:268 2L:278_2L:268      Tad_10     10000       FALSE  2L:268_2L:278 #>                  anchor.bin   anchor.name    bait.bin     bait.name #>                 <character>   <character> <character>   <character> #>   2L:278_2L:268      2L:278 2L:278:Tad_10      2L:268 2L:268:Tad_10 #>                 anchor.Beaf.score anchor.Beaf.name anchor.Beaf.bln #>                         <numeric>           <list>       <numeric> #>   2L:278_2L:268              1641        Beaf32_41               1 #>                 bait.Tss.class bait.Tss.name bait.Tss.bln #>                    <character>        <list>    <numeric> #>   2L:278_2L:268       inactive   FBgn0031239            1 #>   ------- #>   regions: 429 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome"},{"path":"/reference/SwitchMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Change values in hic chunk — SwitchMatrix","title":"Change values in hic chunk — SwitchMatrix","text":"Change values matrix observed, balanced, observed/expected expected values according done hic.","code":""},{"path":"/reference/SwitchMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change values in hic chunk — SwitchMatrix","text":"","code":"SwitchMatrix(hic.cmx_lst, matrixKind.chr = c(\"obs\", \"norm\", \"o/e\", \"exp\"))"},{"path":"/reference/SwitchMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change values in hic chunk — SwitchMatrix","text":"hic.cmx_lst <List[contactMatrix]>: HiC maps list. matrixKind.chr <character>: kind matrix want.","code":""},{"path":"/reference/SwitchMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change values in hic chunk — SwitchMatrix","text":"contactMatrix list.","code":""},{"path":"/reference/SwitchMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change values in hic chunk — SwitchMatrix","text":"SwitchMatrix","code":""},{"path":"/reference/VCnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Vanilla Count or Vanilla Count square root correction on hic chunk. — VCnorm","title":"Compute Vanilla Count or Vanilla Count square root correction on hic chunk. — VCnorm","text":"Compute Vanilla Count Vanilla Count square root correction normalization hic maps.","code":""},{"path":"/reference/VCnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Vanilla Count or Vanilla Count square root correction on hic chunk. — VCnorm","text":"","code":"VCnorm(hic.cmx = NULL, qtlTh.num = 0.15, sqrt.bln = TRUE)"},{"path":"/reference/VCnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Vanilla Count or Vanilla Count square root correction on hic chunk. — VCnorm","text":"hic.cmx <contactMatrix>: HiC maps chunk normalize. qtlTh.num <numerical>: threshold quantile bins ignored. (Default 0.15) sqrt.bln <logical>: Whether square root must apply. (Default TRUE)","code":""},{"path":"/reference/VCnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Vanilla Count or Vanilla Count square root correction on hic chunk. — VCnorm","text":"matrices list.","code":""},{"path":"/reference/VCnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Vanilla Count or Vanilla Count square root correction on hic chunk. — VCnorm","text":"VCnorm","code":""},{"path":"/reference/ggAPA.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation plot — ggAPA","title":"Aggregation plot — ggAPA","text":"Create ggplot object used plot aggregation.","code":""},{"path":"/reference/ggAPA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation plot — ggAPA","text":"","code":"ggAPA(   apa.mtx = NULL,   title.chr = NULL,   trimPrct.num = 0,   bounds.chr = \"both\",   minBoundary.num = NULL,   center.num = NULL,   maxBoundary.num = NULL,   colBreaks.num = NULL,   blurPass.num = 0,   blurBox.num = NULL,   blurSize.num = NULL,   blurSd.num = 0.5,   lowerTri.num = NULL,   heatmap.col = NULL,   na.col = \"#F2F2F2\",   colorScale.chr = \"linear\",   bias.num = 1,   paletteLength.num = 51 )"},{"path":"/reference/ggAPA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregation plot — ggAPA","text":"apa.mtx <matrix> : matrix plot. (Default NULL) title.chr <character> : title plot. (Default NULL) trimPrct.num <numeric> : number 0 100 give percentage trimming. (Default 0) bounds.chr <character> : boundary must trim, , trim half percentage inferior superior see SuperTK::QtlThreshold. (Default \"\") minBoundary.num <numeric> : Minimal value Heatmap, force color range. Null automaticaly find. (Default NULL) center.num <numeric> : Center value Heatmap, force color range. Null automaticaly find. (Default NULL) maxBoundary.num <numeric> : Maximal value Heatmap, force color range. Null automaticaly find. (Default NULL) colBreaks.num <numeric> : Repartition colors. Null automaticaly find. (Default NULL) blurPass.num <numeric> : Number blur pass. (Default 0) blurBox.num <numeric> : null automaticaly compute 3 Sd. (Default NULL) blurSize.num <numeric> : Size box applied blurr null automaticaly compute 3 Sd. (Default NULL) blurSd.num <numeric> : SD gaussian smooth. (Default 0.5) lowerTri.num <numeric> : value replace value lower triangle matrice (Usefull blur apply). (Default NULL) heatmap.col <character> : Heatmap color list. null automaticaly compute. (Default NULL) na.col <character> : color NA values. (Default \"#F2F2F2\") colorScale.chr <character> :  shape color scale \"linear\" \"density\" based. (Default \"linear\") bias.num <numeric> : positive number.  Higher values give widely spaced colors high end. See ?grDevices::colorRamp details. (Default 1) paletteLength.num <numeric> : number color palette. (Default 51)","code":""},{"path":"/reference/ggAPA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregation plot — ggAPA","text":"ggplot object.","code":""},{"path":"/reference/ggAPA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregation plot — ggAPA","text":"ggAPA","code":""},{"path":"/reference/ggAPA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation plot — ggAPA","text":"","code":"library(GenomicED) data(aggreg.mtx)   ggAPA(     apa.mtx      = aggreg.mtx,     title.chr    = \"APA center on 0\",     center.num   = 0,     trimPrct.num = 5,     bounds.chr   = \"both\",     blurPass.num = 1,     blurSd.num   = 0.5,     heatmap.col  = SuperTK::viridis(6) ) #> Warning: Use of `data.dtf$x` is discouraged. #> ℹ Use `x` instead. #> Warning: Use of `data.dtf$j` is discouraged. #> ℹ Use `j` instead. #> Warning: Use of `data.dtf$i` is discouraged. #> ℹ Use `i` instead."}]

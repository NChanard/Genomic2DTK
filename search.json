[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Genomic2DTK authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Genomic2DTK.html","id":"firsts-steps","dir":"Articles","previous_headings":"","what":"Firsts Steps","title":"Introduction to Genomic2DTK","text":"","code":"devtools::install_github(\"Nchanard/Genomic2DTK\") devtools::install_github(\"Nchanard/GenomicED\")"},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"library","dir":"Articles","previous_headings":"Loads","what":"Library","title":"Introduction to Genomic2DTK","text":"","code":"library(Genomic2DTK) library(GenomicED)"},{"path":"/articles/Genomic2DTK.html","id":"data","dir":"Articles","previous_headings":"Loads","what":"Data","title":"Introduction to Genomic2DTK","text":"load testing data sequencing Drosophila Melanogaster chromosomes 2L 2R.","code":""},{"path":"/articles/Genomic2DTK.html","id":"hic_ctrl-gnp","dir":"Articles","previous_headings":"Loads > Data","what":"HiC_ctrl.gnp","title":"Introduction to Genomic2DTK","text":"HiC data control condition (depletion Luc protein) Pairs GRanges (bedpe) format 1KBp resolution.","code":"data(\"HiC_ctrl.gnp\")"},{"path":"/articles/Genomic2DTK.html","id":"hic-gnp","dir":"Articles","previous_headings":"Loads > Data","what":"HiC.gnp","title":"Introduction to Genomic2DTK","text":"HiC data Beaf-32 depletion condition Pairs GRanges (bedpe) format 1Kbp resolution.","code":"data(\"HiC.gnp\")"},{"path":"/articles/Genomic2DTK.html","id":"anchors_peaks-gnr","dir":"Articles","previous_headings":"Loads > Data","what":"anchors_Peaks.gnr","title":"Introduction to Genomic2DTK","text":"ChIPseq data Beaf-32 protein wild type condition GRanges format (bed).","code":"data(\"anchors_Peaks.gnr\")"},{"path":"/articles/Genomic2DTK.html","id":"domains-gnr","dir":"Articles","previous_headings":"Loads > Data","what":"domains.gnr","title":"Introduction to Genomic2DTK","text":"Data TAD calling HIC data wild type (F. Ramirez, 2018).","code":"data(\"domains.gnr\")"},{"path":"/articles/Genomic2DTK.html","id":"baits_peaks-gnr","dir":"Articles","previous_headings":"Loads > Data","what":"baits_Peaks.gnr","title":"Introduction to Genomic2DTK","text":"Data UCSC data base.","code":"data(\"baits_Peaks.gnr\")"},{"path":"/articles/Genomic2DTK.html","id":"genomic-informations","dir":"Articles","previous_headings":"Loads","what":"Genomic Informations","title":"Introduction to Genomic2DTK","text":"complete data 2L 2R chromosome sizes HiC map resolution.","code":"seqlengths.num <- c('2L'=23513712, '2R'=25286936) chromSize.dtf  <- data.frame(   seqnames   = names(seqlengths.num ),    seqlengths = seqlengths.num   ) binSize.num <- 1000"},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"hic-control","dir":"Articles","previous_headings":"Convert HiC bedpe","what":"HiC Control","title":"Introduction to Genomic2DTK","text":"","code":"HiC_ctrl.cmx_lst <- GnpToCm(   hic.gnp       = HiC_ctrl.gnp,   res.num       = binSize.num,   chromSize.dtf = chromSize.dtf,   cores.num     = 1,   verbose.bln   = FALSE   )"},{"path":"/articles/Genomic2DTK.html","id":"hic-under-beaf-depletion","dir":"Articles","previous_headings":"Convert HiC bedpe","what":"HiC under Beaf depletion","title":"Introduction to Genomic2DTK","text":"","code":"HiC.cmx_lst  <- GnpToCm(   hic.gnp       = HiC.gnp,   res.num       = binSize.num,   chromSize.dtf = chromSize.dtf,   cores.num     = 1,   verbose.bln   = FALSE   )"},{"path":"/articles/Genomic2DTK.html","id":"understand-results","dir":"Articles","previous_headings":"Convert HiC bedpe","what":"Understand results","title":"Introduction to Genomic2DTK","text":"result named list Contactmatrix object matrix dgCMatrix object (sparse matrix). element list corresponds interaction two sequences (chromosomes). name element corresponds names two sequences. exemple, element named 2L_2R correspond interaction 2L 2R sequences. See InteractionSet package details ContactMatrix objects see Matrix package details sparse matrices formats. element name 2L_2R , Bin make 2L 2R sequences represented contact map (sparse matrix) lines columns respectively. list attributes. element metadata. resolution : resolution HiC map. seqnames : sequence name (chromosome name). seqlengths : sequence length base pairs. dimension : sequence length base bins name : matrix name. type : interaction kind. “Cis” interactions sequence “Trans” interactions different sequences. kind : matrix kind. U upper triangle matrices, L lower triangle matrices, NA rectangular square matrices. See symmetric : boolean indicates whether matrix symmetric (lower triangle identical upper triangle).","code":"HiC_ctrl.cmx_lst[1:2] #> $`2L_2L` #> class: ContactMatrix  #> dim: 23514 23514  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 23514 #>  #> $`2R_2R` #> class: ContactMatrix  #> dim: 25287 25287  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 25287 #> class(HiC_ctrl.cmx_lst[[\"2L_2L\"]]@matrix) #> [1] \"dgCMatrix\" #> attr(,\"package\") #> [1] \"Matrix\" #> str(HiC_ctrl.cmx_lst[[\"2L_2L\"]]@matrix) #> Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   ..@ i       : int [1:617185] 73 74 75 75 74 77 78 78 79 73 ... #>   ..@ p       : int [1:23515] 0 0 0 0 0 0 0 0 0 0 ... #>   ..@ Dim     : int [1:2] 23514 23514 #>   ..@ Dimnames:List of 2 #>   .. ..$ : NULL #>   .. ..$ : NULL #>   ..@ x       : num [1:617185] 0.899 1.772 1.729 2.185 2.752 ... #>   ..@ factors : list() #> HiC_ctrl.cmx_lst[[\"2L_2L\"]]@matrix[101:110,101:110] attributes(HiC_ctrl.cmx_lst) #> $names #> [1] \"2L_2L\" \"2R_2R\" #>  #> $resolution #> [1] 1000 #>  #> $chromSize #> # A tibble: 2 × 3 #>   seqnames seqlengths dimension #>   <chr>         <dbl>     <dbl> #> 1 2L         23513712     23514 #> 2 2R         25286936     25287 #>  #> $matricesKind #> # A tibble: 2 × 4 #>   name  type  kind  symmetric #>   <chr> <chr> <chr> <lgl>     #> 1 2L_2L cis   U     TRUE      #> 2 2R_2R cis   U     TRUE #> S4Vectors::metadata(HiC_ctrl.cmx_lst[[\"2L_2L\"]]) #> $name #> [1] \"2L_2L\" #>  #> $type #> [1] \"cis\" #>  #> $kind #> [1] \"U\" #>  #> $symmetric #> [1] TRUE #>  #> $resolution #> [1] 1000 #>"},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"tips","dir":"Articles","previous_headings":"Genomic Features Indexing","what":"Tips","title":"Introduction to Genomic2DTK","text":"Put GRanges list allow name features. name feature “Beaf”. regions constraint used, chromosomes used constraints. multiples ranges bin can choose variables (variablesName.chr_vec) summary function (method.chr).","code":""},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"anchors-beaf32","dir":"Articles","previous_headings":"Genomic Features Indexing > Indexing","what":"Anchors (Beaf32)","title":"Introduction to Genomic2DTK","text":"","code":"anchors_Index.gnr <- IndexFeatures(   gRange.gnr_lst        = list(Beaf=anchors_Peaks.gnr),    constraint.gnr        = domains.gnr,   chromSize.dtf         = chromSize.dtf,   binSize.int           = binSize.num,   method.chr            = \"max\",   variablesName.chr_vec = \"score\",   cores.num             = 1,   verbose.bln           = FALSE   )"},{"path":"/articles/Genomic2DTK.html","id":"baits-transcription-starting-sites","dir":"Articles","previous_headings":"Genomic Features Indexing > Indexing","what":"Baits (Transcription Starting Sites)","title":"Introduction to Genomic2DTK","text":"","code":"baits_Index.gnr <- IndexFeatures(   gRange.gnr_lst        = list(Tss=baits_Peaks.gnr),   constraint.gnr        = domains.gnr,   chromSize.dtf         = chromSize.dtf,   binSize.int           = binSize.num,   method.chr            = \"max\",   variablesName.chr_vec = \"score\",   cores.num             = 1,   verbose.bln           = FALSE    ) non_Overlaps.ndx <- SuperTK::NotIn(baits_Index.gnr$bin,anchors_Index.gnr$bin) baits_Index.gnr <- baits_Index.gnr[non_Overlaps.ndx,]"},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"tips-1","dir":"Articles","previous_headings":"Search Pairs","what":"Tips","title":"Introduction to Genomic2DTK","text":"indexBait.gnr NULL function considers equal indexAnchor.gnr. search pairs feature certain distances. selection can also made resulting GInteraction object FilterInteraction function.","code":""},{"path":"/articles/Genomic2DTK.html","id":"pairing","dir":"Articles","previous_headings":"Search Pairs","what":"Pairing","title":"Introduction to Genomic2DTK","text":"Now two genomic features indexed genome want search putative Beaf-TSS pairs share constraint (.e: Tad). first element pair (beaf) called Anchors second one (TSS) called Bait. pair always order Anchors-Bait (B).","code":"interactions.gni <- SearchPairs(     indexAnchor.gnr = anchors_Index.gnr,     indexBait.gnr   = baits_Index.gnr,     minDist.num     = NULL,      maxDist.num     = NULL,     cores.num       = 1,     verbose.bln     = FALSE     )"},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"tips-2","dir":"Articles","previous_headings":"Extractions","what":"Tips","title":"Introduction to Genomic2DTK","text":"res.num null, function find resolution attribute hic.cmx_lst. feature.gn ranges overlap just one Bin, .e start end GRanges first second element GInteraction (GRanges Pairs) bin, reference point automatically \"pf\".","code":""},{"path":"/articles/Genomic2DTK.html","id":"genomic-regions-or-domains","dir":"Articles","previous_headings":"Extractions","what":"Genomic Regions or Domains","title":"Introduction to Genomic2DTK","text":"HiC map, genomic region defined square (triangle matrice triangular) along diagonal Map, resulting extraction square matrices diagonal diagonal HiC map. regions length, extracted matrices dimensions. extracted matrices therefore resized function.","code":""},{"path":"/articles/Genomic2DTK.html","id":"regions-defined-with-ginteraction-object-or-pairs-granges","dir":"Articles","previous_headings":"Extractions > Genomic Regions or Domains","what":"Regions defined with GInteraction object or Pairs GRanges","title":"Introduction to Genomic2DTK","text":"region’s start defined center first element region’s end center second element.","code":"interactions_RFmatrix_ctrl.lst  <- ExtractSubmatrix(   feature.gn         = interactions.gni,   hic.cmx_lst        = HiC_ctrl.cmx_lst,   res.num            = NULL,   referencePoint.chr = \"rf\",   matriceDim.num     = 101,   cores.num          = 1,   verbose.bln        = FALSE   )"},{"path":"/articles/Genomic2DTK.html","id":"regions-defined-with-granges","dir":"Articles","previous_headings":"Extractions > Genomic Regions or Domains","what":"Regions defined with GRanges","title":"Introduction to Genomic2DTK","text":"regions directly defined ranges GRanges object.","code":"domains_RFmatrix.lst <- ExtractSubmatrix(   feature.gn         = domains.gnr,   hic.cmx_lst        = HiC_ctrl.cmx_lst,   referencePoint.chr = \"rf\",   matriceDim.num     = 101,   cores.num          = 1,   verbose.bln        = FALSE   )"},{"path":"/articles/Genomic2DTK.html","id":"long-range-interactions","dir":"Articles","previous_headings":"Extractions","what":"Long range interactions","title":"Introduction to Genomic2DTK","text":"move away diagonal HiC map access long range interactions can extract less distant surrounding interactions resulting extraction square matrices centred long range interactions.","code":""},{"path":"/articles/Genomic2DTK.html","id":"interactions-defined-with-ginteraction-or-pairs-granges-","dir":"Articles","previous_headings":"Extractions > Long range interactions","what":"Interactions defined with GInteraction or Pairs GRanges.","title":"Introduction to Genomic2DTK","text":"extracted matrices, middle Y axis correspond center first element interact center second element middle X axis.","code":"interactions_PFmatrix.lst <- ExtractSubmatrix(   feature.gn         = interactions.gni,   hic.cmx_lst        = HiC_ctrl.cmx_lst,   referencePoint.chr = \"pf\",   matriceDim.num     = 41,   cores.num          = 1,   verbose.bln        = FALSE   )"},{"path":"/articles/Genomic2DTK.html","id":"interactions-defined-with-granges-","dir":"Articles","previous_headings":"Extractions > Long range interactions","what":"Interactions defined with GRanges.","title":"Introduction to Genomic2DTK","text":"middle Y axis correspond start range interact middle X axis correspond ends ranges.","code":"domains_PFmatrix.lst <- ExtractSubmatrix(   feature.gn         = domains.gnr,   hic.cmx_lst        = HiC_ctrl.cmx_lst,   referencePoint.chr = \"pf\",   matriceDim.num     = 41,   cores.num          = 1,   verbose.bln        = FALSE   )"},{"path":"/articles/Genomic2DTK.html","id":"ponctual-interactions-along-diagonal-","dir":"Articles","previous_headings":"Extractions","what":"Ponctual interactions along diagonal.","title":"Introduction to Genomic2DTK","text":"want extract fixed windows along diagonal center points (Bins).","code":""},{"path":"/articles/Genomic2DTK.html","id":"define-ponctual-interactions-","dir":"Articles","previous_headings":"Extractions > Ponctual interactions along diagonal.","what":"Define ponctual interactions.","title":"Introduction to Genomic2DTK","text":"First, want create objects points interaction along diagonal. exemple achieve take domains borders. width ranges put 1 force start end ranges bin. Probably end domains found next beginning domains. words, genomic locations found bin.       see conserve metadata Bin 2L:95 Tad_1 Tad_2.    addition, Tad_1 Bin 2L:74 2L:95, need put unique name ranges (=bin) keep Tad names new variables.","code":"domains_Border.gnr <- c(     GenomicRanges::resize(domains.gnr, 1, \"start\"),     GenomicRanges::resize(domains.gnr, 1,  \"end\" ) ) |> sort() domains_Border.gnr GenomicRanges::reduce(domains_Border.gnr) domains_Border_Bin.gnr <- GenomicTK::BinGRanges(   gRange.gnr  = domains_Border.gnr,   binSize.int = binSize.num,   verbose.bln = FALSE   ) domains_Border_Bin.gnr domains_Border_Bin.gnr$subname <- domains_Border_Bin.gnr$name domains_Border_Bin.gnr$name    <- domains_Border_Bin.gnr$bin domains_Border_Bin.gni <- InteractionSet::GInteractions(domains_Border_Bin.gnr,domains_Border_Bin.gnr)"},{"path":"/articles/Genomic2DTK.html","id":"ponctual-interactions-defined-with-granges","dir":"Articles","previous_headings":"Extractions > Ponctual interactions along diagonal.","what":"Ponctual interactions defined with GRanges","title":"Introduction to Genomic2DTK","text":"start end ranges bin.","code":"border_PFmatrix.lst <- ExtractSubmatrix(   feature.gn         = domains_Border_Bin.gnr,   hic.cmx_lst        = HiC_ctrl.cmx_lst,   referencePoint.chr = \"pf\",   matriceDim.num     = 101,   verbose.bln        = FALSE )"},{"path":"/articles/Genomic2DTK.html","id":"ponctual-interactions-defined-with-ginteractions","dir":"Articles","previous_headings":"Extractions > Ponctual interactions along diagonal.","what":"Ponctual interactions defined with GInteractions","title":"Introduction to Genomic2DTK","text":"first element (blue scheme) bin second (red scheme).","code":"border_PFmatrix.lst <- ExtractSubmatrix(   feature.gn         = domains_Border_Bin.gni,   hic.cmx_lst        = HiC_ctrl.cmx_lst,   referencePoint.chr = \"pf\",   matriceDim.num     = 101,   verbose.bln        = FALSE )"},{"path":"/articles/Genomic2DTK.html","id":"filtrations","dir":"Articles","previous_headings":"","what":"Filtrations","title":"Introduction to Genomic2DTK","text":"section see select interactions GInteraction object matrices extracted Matrices list.","code":""},{"path":"/articles/Genomic2DTK.html","id":"tips-3","dir":"Articles","previous_headings":"Filtrations","what":"Tips","title":"Introduction to Genomic2DTK","text":"Filter GInterction object allow cross selection indices want. Filter matrices list without selection better filter interaction attributes matrices list","code":""},{"path":"/articles/Genomic2DTK.html","id":"target-list","dir":"Articles","previous_headings":"Filtrations","what":"Target list","title":"Introduction to Genomic2DTK","text":"Target list must particular structure. First named list. name element must name column GInteraction want filter (attributes “interactions” matrices list want filter. element must character list match column function test row column return bolean. First, let’s look GInteractions columns names (metadata interactions attributes matrices list) look Now lets create target : “Beaf32_8” “Beaf32_15” anchor.Beaf.name “FBgn0031214” “FBgn0005278” bait.Tss.name “2L:74_2L:77” name distance exactly equal 14000 3000","code":"structureTarget.lst <- list(   first_colname_of_GInteraction  = c(\"value\"),   second_colname_of_GInteraction = function(eachElement){min_th<value && value<max_th}   ) names(S4Vectors::mcols(attributes(interactions_RFmatrix_ctrl.lst)$interactions)) attributes(interactions_RFmatrix_ctrl.lst)$interactions target.lst <- list(   anchor.Beaf.name = c(\"Beaf32_8\",\"Beaf32_15\"),   bait.Tss.name    = c(\"FBgn0031214\",\"FBgn0005278\"),   name             = c(\"2L:74_2L:77\"),   distance         = function(columnElement){     return(14000==columnElement || columnElement == 3000)     }   )"},{"path":"/articles/Genomic2DTK.html","id":"filtration-without-selection","dir":"Articles","previous_headings":"Filtrations","what":"Filtration without selection","title":"Introduction to Genomic2DTK","text":"don’t specify selection ways function return indices target list. allow cross indices select want want second step.","code":""},{"path":"/articles/Genomic2DTK.html","id":"ginteraction-filtration","dir":"Articles","previous_headings":"Filtrations > Filtration without selection","what":"GInteraction filtration","title":"Introduction to Genomic2DTK","text":"","code":"FilterInteractions(   interarctions.gni = attributes(interactions_RFmatrix_ctrl.lst)$interactions,   target.lst        = target.lst,   selection.fun     = NULL   ) |> str() #> List of 4 #>  $ anchor.Beaf.name: int [1:3] 1 3 4 #>  $ bait.Tss.name   : int [1:3] 1 2 3 #>  $ name            : int 1 #>  $ distance        : int [1:25] 1 3 8 24 38 49 63 65 80 102 ..."},{"path":"/articles/Genomic2DTK.html","id":"matrices-list-filtration","dir":"Articles","previous_headings":"Filtrations > Filtration without selection","what":"Matrices list filtration","title":"Introduction to Genomic2DTK","text":"","code":"FilterInteractions(   matrices.lst      = interactions_RFmatrix_ctrl.lst,   target.lst        = target.lst,   selection.fun     = NULL   ) |> str() #> List of 4 #>  $ anchor.Beaf.name: int [1:3] 1 3 4 #>  $ bait.Tss.name   : int [1:3] 1 2 3 #>  $ name            : int 1 #>  $ distance        : int [1:25] 1 3 8 24 38 49 63 65 80 102 ..."},{"path":"/articles/Genomic2DTK.html","id":"selection-function","dir":"Articles","previous_headings":"Filtrations","what":"Selection Function","title":"Introduction to Genomic2DTK","text":"Now create function cross target indices select precisely want. order perform need set theory basis.","code":""},{"path":"/articles/Genomic2DTK.html","id":"set-theory-functions","dir":"Articles","previous_headings":"Filtrations > Selection Function","what":"Set theory functions","title":"Introduction to Genomic2DTK","text":"common , B C /B /C common B, C common B, plus present C common C elements present B Everything present B C present ","code":"a <- c(\"A\",\"B\",\"D\",\"G\") b <- c(\"E\",\"B\",\"C\",\"G\") c <- c(\"A\",\"F\",\"C\",\"G\") Reduce(intersect, list(a,b,c)) |> sort() #> [1] \"G\" intersect(a,b) |> intersect(c) |> sort() #> [1] \"G\" Reduce(union, list(a,b,c)) |> sort() #> [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" union(a,b) |> union(c) |> sort() #> [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" Reduce(setdiff,list(a,b,c)) |> sort() #> [1] \"D\" setdiff(a,b) |> setdiff(c) |> sort() #> [1] \"D\" intersect(a,b) |> setdiff(c) |> sort() #> [1] \"B\" intersect(a,b) |> union(c) |> sort() #> [1] \"A\" \"B\" \"C\" \"F\" \"G\" union(a,b) |> intersect(c) |> sort() #> [1] \"A\" \"C\" \"G\" union(a,b) |> setdiff(c) |> sort() #> [1] \"B\" \"D\" \"E\" d <- c(a,b,c) setdiff(d,d[duplicated(d)]) |> sort() #> [1] \"D\" \"E\" \"F\""},{"path":"/articles/Genomic2DTK.html","id":"exemple-according-to-the-above-target","dir":"Articles","previous_headings":"Filtrations > Selection Function","what":"Exemple according to the above target","title":"Introduction to Genomic2DTK","text":"select anchor.Beaf.name, bait.Tss.name distance, name","code":"selection.fun = function(){   Reduce(intersect, list(anchor.Beaf.name, bait.Tss.name ,distance) ) |>   setdiff(name)   }"},{"path":"/articles/Genomic2DTK.html","id":"filtration-with-selection","dir":"Articles","previous_headings":"Filtrations","what":"Filtration with selection","title":"Introduction to Genomic2DTK","text":"specify selection way function return: indices according selection select interarctions.gni (allow construct vector apply multiple matrices list interaction attributes). filtred matrices list select matrices list directly update attributes.","code":""},{"path":"/articles/Genomic2DTK.html","id":"ginteraction-filtration-1","dir":"Articles","previous_headings":"Filtrations > Filtration with selection","what":"GInteraction filtration","title":"Introduction to Genomic2DTK","text":"want select wich anchor.Beaf.name, bait.Tss.name distance criterion name. , indices common anchor.Beaf.name, bait.Tss.name distance criterions 1 4. indice 1 name criterion, select 4th element names 4th interaction :","code":"FilterInteractions(   interarctions.gni = attributes(interactions_RFmatrix_ctrl.lst)$interactions,   target.lst        = target.lst,   selection.fun     = selection.fun   ) |> str() #>  int 3 attributes(interactions_RFmatrix_ctrl.lst)$interactions$name[4] #> [1] \"2L:121_2L:117\""},{"path":"/articles/Genomic2DTK.html","id":"matrices-list-filtration-1","dir":"Articles","previous_headings":"Filtrations > Filtration with selection","what":"Matrices list filtration","title":"Introduction to Genomic2DTK","text":"names filtred matrice 4th interaction:","code":"filtred_interactions_RFmatrix_ctrl.lst <- FilterInteractions(   matrices.lst  = interactions_RFmatrix_ctrl.lst,   target.lst    = target.lst,   selection.fun = selection.fun   ) attributes(filtred_interactions_RFmatrix_ctrl.lst)$names #> [1] \"2L:107_2L:121\""},{"path":"/articles/Genomic2DTK.html","id":"particular-case-only-one-target-and-no-selection","dir":"Articles","previous_headings":"Filtrations","what":"Particular case: Only one target and no selection","title":"Introduction to Genomic2DTK","text":"exemple, want filter 100th first elements, target 100 first names","code":"first100_target.lst = list(   submatrix.name = names(interactions_RFmatrix_ctrl.lst)[1:100]   )"},{"path":"/articles/Genomic2DTK.html","id":"ginteraction-filtration-2","dir":"Articles","previous_headings":"Filtrations > Particular case: Only one target and no selection","what":"GInteraction filtration","title":"Introduction to Genomic2DTK","text":"","code":"FilterInteractions(   interarctions.gni = attributes(interactions_RFmatrix_ctrl.lst)$interactions,   target.lst        = first100_target.lst,   selection.fun     = NULL   ) |> str() #>  Named int [1:100] 1 2 3 4 5 6 7 8 9 10 ... #>  - attr(*, \"names\")= chr [1:100] \"submatrix.name1\" \"submatrix.name2\" \"submatrix.name3\" \"submatrix.name4\" ..."},{"path":"/articles/Genomic2DTK.html","id":"matrices-list-filtration-2","dir":"Articles","previous_headings":"Filtrations > Particular case: Only one target and no selection","what":"Matrices list filtration","title":"Introduction to Genomic2DTK","text":"selection matrices remove attributes.","code":"first100_interactions_RFmatrix_ctrl.lst <- FilterInteractions(   matrices.lst  = interactions_RFmatrix_ctrl.lst,   target.lst    = first100_target.lst,   selection.fun = NULL   ) attributes(first100_interactions_RFmatrix_ctrl.lst)$interactions #> GInteractions object with 100 interactions and 15 metadata columns: #>                     seqnames1           ranges1     seqnames2           ranges2 #>                         <Rle>         <IRanges>         <Rle>         <IRanges> #>         2L:74_2L:77        2L       73001-74000 ---        2L       76001-77000 #>       2L:115_2L:107        2L     114001-115000 ---        2L     106001-107000 #>       2L:121_2L:107        2L     120001-121000 ---        2L     106001-107000 #>       2L:121_2L:117        2L     120001-121000 ---        2L     116001-117000 #>       2L:274_2L:268        2L     273001-274000 ---        2L     267001-268000 #>                 ...       ...               ... ...       ...               ... #>   2L:12515_2L:12498        2L 12514001-12515000 ---        2L 12497001-12498000 #>   2L:12516_2L:12498        2L 12515001-12516000 ---        2L 12497001-12498000 #>   2L:12515_2L:12508        2L 12514001-12515000 ---        2L 12507001-12508000 #>   2L:12516_2L:12508        2L 12515001-12516000 ---        2L 12507001-12508000 #>   2L:12515_2L:12509        2L 12514001-12515000 ---        2L 12508001-12509000 #>                     |              name  constraint  distance orientation #>                     |       <character> <character> <integer>   <logical> #>         2L:74_2L:77 |       2L:74_2L:77       Tad_1      3000        TRUE #>       2L:115_2L:107 |     2L:115_2L:107       Tad_3      8000       FALSE #>       2L:121_2L:107 |     2L:121_2L:107       Tad_3     14000       FALSE #>       2L:121_2L:117 |     2L:121_2L:117       Tad_3      4000       FALSE #>       2L:274_2L:268 |     2L:274_2L:268      Tad_10      6000       FALSE #>                 ... .               ...         ...       ...         ... #>   2L:12515_2L:12498 | 2L:12515_2L:12498     Tad_310     17000       FALSE #>   2L:12516_2L:12498 | 2L:12516_2L:12498     Tad_310     18000       FALSE #>   2L:12515_2L:12508 | 2L:12515_2L:12508     Tad_310      7000       FALSE #>   2L:12516_2L:12508 | 2L:12516_2L:12508     Tad_310      8000       FALSE #>   2L:12515_2L:12509 | 2L:12515_2L:12509     Tad_310      6000       FALSE #>                        submatrix.name  anchor.bin      anchor.name    bait.bin #>                           <character> <character>      <character> <character> #>         2L:74_2L:77       2L:74_2L:77       2L:74      2L:74:Tad_1       2L:77 #>       2L:115_2L:107     2L:107_2L:115      2L:115     2L:115:Tad_3      2L:107 #>       2L:121_2L:107     2L:107_2L:121      2L:121     2L:121:Tad_3      2L:107 #>       2L:121_2L:117     2L:117_2L:121      2L:121     2L:121:Tad_3      2L:117 #>       2L:274_2L:268     2L:268_2L:274      2L:274    2L:274:Tad_10      2L:268 #>                 ...               ...         ...              ...         ... #>   2L:12515_2L:12498 2L:12498_2L:12515    2L:12515 2L:12515:Tad_310    2L:12498 #>   2L:12516_2L:12498 2L:12498_2L:12516    2L:12516 2L:12516:Tad_310    2L:12498 #>   2L:12515_2L:12508 2L:12508_2L:12515    2L:12515 2L:12515:Tad_310    2L:12508 #>   2L:12516_2L:12508 2L:12508_2L:12516    2L:12516 2L:12516:Tad_310    2L:12508 #>   2L:12515_2L:12509 2L:12509_2L:12515    2L:12515 2L:12515:Tad_310    2L:12509 #>                            bait.name anchor.Beaf.score anchor.Beaf.name #>                          <character>         <numeric>           <list> #>         2L:74_2L:77      2L:77:Tad_1               205         Beaf32_8 #>       2L:115_2L:107     2L:107:Tad_3              1707        Beaf32_14 #>       2L:121_2L:107     2L:107:Tad_3               484        Beaf32_15 #>       2L:121_2L:117     2L:117:Tad_3               484        Beaf32_15 #>       2L:274_2L:268    2L:268:Tad_10               210        Beaf32_39 #>                 ...              ...               ...              ... #>   2L:12515_2L:12498 2L:12498:Tad_310                44       Beaf32_900 #>   2L:12516_2L:12498 2L:12498:Tad_310                88       Beaf32_901 #>   2L:12515_2L:12508 2L:12508:Tad_310                44       Beaf32_900 #>   2L:12516_2L:12508 2L:12508:Tad_310                88       Beaf32_901 #>   2L:12515_2L:12509 2L:12509:Tad_310                44       Beaf32_900 #>                     anchor.Beaf.bln bait.Tss.class           bait.Tss.name #>                           <numeric>    <character>                  <list> #>         2L:74_2L:77               1       inactive             FBgn0031214 #>       2L:115_2L:107               1         active FBgn0026787,FBgn0005278 #>       2L:121_2L:107               1         active FBgn0026787,FBgn0005278 #>       2L:121_2L:117               1         active             FBgn0031219 #>       2L:274_2L:268               1       inactive             FBgn0031239 #>                 ...             ...            ...                     ... #>   2L:12515_2L:12498               1       inactive             FBgn0051858 #>   2L:12516_2L:12498               1       inactive             FBgn0051858 #>   2L:12515_2L:12508               1       inactive             FBgn0262353 #>   2L:12516_2L:12508               1       inactive             FBgn0262353 #>   2L:12515_2L:12509               1       inactive             FBgn0263458 #>                     bait.Tss.bln #>                        <numeric> #>         2L:74_2L:77            1 #>       2L:115_2L:107            1 #>       2L:121_2L:107            1 #>       2L:121_2L:117            1 #>       2L:274_2L:268            1 #>                 ...          ... #>   2L:12515_2L:12498            1 #>   2L:12516_2L:12498            1 #>   2L:12515_2L:12508            1 #>   2L:12516_2L:12508            1 #>   2L:12515_2L:12509            1 #>   ------- #>   regions: 429 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome attributes(interactions_RFmatrix_ctrl.lst[1:20])$interactions #> NULL"},{"path":"/articles/Genomic2DTK.html","id":"particular-case-sampling","dir":"Articles","previous_headings":"Filtrations","what":"Particular case: Sampling","title":"Introduction to Genomic2DTK","text":"","code":"nSample.num = 3 set.seed(123) target.lst = list(name=sample(attributes(interactions_RFmatrix_ctrl.lst)$interactions$name,nSample.num))"},{"path":"/articles/Genomic2DTK.html","id":"ginteraction-sampling","dir":"Articles","previous_headings":"Filtrations > Particular case: Sampling","what":"GInteraction sampling","title":"Introduction to Genomic2DTK","text":"","code":"FilterInteractions(   interarctions.gni = attributes(interactions_RFmatrix_ctrl.lst)$interactions,   target.lst        = target.lst,   selection.fun     = NULL   ) |> str() #>  Named int [1:3] 14 179 195 #>  - attr(*, \"names\")= chr [1:3] \"name1\" \"name2\" \"name3\""},{"path":"/articles/Genomic2DTK.html","id":"matrices-list-sampling","dir":"Articles","previous_headings":"Filtrations > Particular case: Sampling","what":"Matrices list sampling","title":"Introduction to Genomic2DTK","text":"","code":"sampled_interactions_RFmatrix_ctrl.lst <- FilterInteractions(   matrices.lst  = interactions_RFmatrix_ctrl.lst,   target.lst    = target.lst,   selection.fun = NULL   ) attributes(sampled_interactions_RFmatrix_ctrl.lst)$interactions #> GInteractions object with 3 interactions and 15 metadata columns: #>                     seqnames1           ranges1     seqnames2           ranges2 #>                         <Rle>         <IRanges>         <Rle>         <IRanges> #>     2L:1178_2L:1174        2L   1177001-1178000 ---        2L   1173001-1174000 #>   2L:21574_2L:21492        2L 21573001-21574000 ---        2L 21491001-21492000 #>     2R:5672_2R:5653        2R   5671001-5672000 ---        2R   5652001-5653000 #>                     |              name  constraint  distance orientation #>                     |       <character> <character> <integer>   <logical> #>     2L:1178_2L:1174 |   2L:1178_2L:1174      Tad_35      4000       FALSE #>   2L:21574_2L:21492 | 2L:21574_2L:21492     Tad_486     82000       FALSE #>     2R:5672_2R:5653 |   2R:5672_2R:5653     Tad_513     19000       FALSE #>                        submatrix.name  anchor.bin      anchor.name    bait.bin #>                           <character> <character>      <character> <character> #>     2L:1178_2L:1174   2L:1174_2L:1178     2L:1178   2L:1178:Tad_35     2L:1174 #>   2L:21574_2L:21492 2L:21492_2L:21574    2L:21574 2L:21574:Tad_486    2L:21492 #>     2R:5672_2R:5653   2R:5653_2R:5672     2R:5672  2R:5672:Tad_513     2R:5653 #>                            bait.name anchor.Beaf.score anchor.Beaf.name #>                          <character>         <numeric>           <list> #>     2L:1178_2L:1174   2L:1174:Tad_35               921       Beaf32_130 #>   2L:21574_2L:21492 2L:21492:Tad_486               529      Beaf32_1349 #>     2R:5672_2R:5653  2R:5653:Tad_513                99      Beaf32_1462 #>                     anchor.Beaf.bln bait.Tss.class bait.Tss.name bait.Tss.bln #>                           <numeric>    <character>        <list>    <numeric> #>     2L:1178_2L:1174               1         active   FBgn0031318            1 #>   2L:21574_2L:21492               1       inactive   FBgn0053837            1 #>     2R:5672_2R:5653               1         active   FBgn0033028            1 #>   ------- #>   regions: 429 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome"},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"tips-4","dir":"Articles","previous_headings":"Orientation","what":"Tips","title":"Introduction to Genomic2DTK","text":"Use function oriente matrices list one matrix. want force orientation matrix use orientation , list.","code":""},{"path":"/articles/Genomic2DTK.html","id":"understand-orientation","dir":"Articles","previous_headings":"Orientation","what":"Understand orientation","title":"Introduction to Genomic2DTK","text":"First, lets look two matrices oriented (column orientation metadata interactions attribute). can see first matrix correctly oriented (value TRUE) second one. matrix correctly oriented anchor bait (see SearchPairs anchor-bait order), matrix oriented anchor bait. mean : first matrice, anchor Beaf Y axis bait TSS X axis second matrice, bait TSS Y axis anchor Beaf X axis  oriente second matrix put anchor Y axis bait X axis see happens.","code":"attributes(first100_interactions_RFmatrix_ctrl.lst)$interactions$orientation[13:14]  #> [1]  TRUE FALSE"},{"path":"/articles/Genomic2DTK.html","id":"orientation-on-matrices-list","dir":"Articles","previous_headings":"Orientation","what":"Orientation on matrices list","title":"Introduction to Genomic2DTK","text":"expected values upper left corner (green scheme) end lower right corner orientation, let’s oriente matrices list according orientation metadata.","code":"oriented_first100_interactions_RFmatrix_ctrl.lst <- OrienteMatrix(first100_interactions_RFmatrix_ctrl.lst)"},{"path":"/articles/Genomic2DTK.html","id":"first-matrice-dont-need-orientation","dir":"Articles","previous_headings":"Orientation > Orientation on matrices list","what":"First matrice (don’t need orientation)","title":"Introduction to Genomic2DTK","text":"upper left corner orientation. upper left corner orientation change.","code":"first100_interactions_RFmatrix_ctrl.lst[[13]][1:5,1:5] oriented_first100_interactions_RFmatrix_ctrl.lst[[13]][1:5,1:5]"},{"path":"/articles/Genomic2DTK.html","id":"second-matrice-need-orientation","dir":"Articles","previous_headings":"Orientation > Orientation on matrices list","what":"Second matrice (need orientation)","title":"Introduction to Genomic2DTK","text":"upper left corner orientation transposed lower right corner orientation correspond upper left corner orientation","code":"first100_interactions_RFmatrix_ctrl.lst[[14]][1:5,1:5] oriented_first100_interactions_RFmatrix_ctrl.lst[[14]][97:101,97:101]"},{"path":"/articles/Genomic2DTK.html","id":"orientation-on-only-one-matrice-","dir":"Articles","previous_headings":"Orientation","what":"Orientation on only one matrice.","title":"Introduction to Genomic2DTK","text":"function also oriente one matrix case attribute verification can oriente matrix don’t need orentation.","code":""},{"path":"/articles/Genomic2DTK.html","id":"first-matrix","dir":"Articles","previous_headings":"Orientation > Orientation on only one matrice.","what":"First matrix","title":"Introduction to Genomic2DTK","text":"Transposed lower right corner orientation correspond upper left corner orientation.","code":"OrienteMatrix(first100_interactions_RFmatrix_ctrl.lst[[13]])[97:101,97:101]"},{"path":"/articles/Genomic2DTK.html","id":"second-matrix","dir":"Articles","previous_headings":"Orientation > Orientation on only one matrice.","what":"Second matrix","title":"Introduction to Genomic2DTK","text":"find orientation second matrix.","code":"OrienteMatrix(first100_interactions_RFmatrix_ctrl.lst[[14]])[97:101,97:101]"},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"tips-5","dir":"Articles","previous_headings":"Quantifications","what":"Tips","title":"Introduction to Genomic2DTK","text":"print quantifications use c function avoid attributes printing. select area null operation.fun return values selected area without NA.","code":""},{"path":"/articles/Genomic2DTK.html","id":"preregistred-area-and-functions","dir":"Articles","previous_headings":"Quantifications","what":"Preregistred area and functions","title":"Introduction to Genomic2DTK","text":"GetQuantif function preregistred area function (see Genomic2DTK::GetQuantif). extract centrals values. interactions values square 3x3 centred interactions anchor bait. extracted value perform average removing zeros. can see values attributes numerical vector value matrices. attributes matrices list two news: area function extract area values matrices. operation correspond numerical operatiion perform values selected area. order print quantifications use c function avoid attributes printing. reduce printing use unlist function.","code":"center.num <- GetQuantif(   matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,   area.fun      = \"center\",   operation.fun = \"mean\"   ) head(center.num) #> $`2L:74_2L:77` #> [1] 0.002752447 #>  #> $`2L:115_2L:107` #> [1] 0.004792452 #>  #> $`2L:121_2L:107` #> [1] 1.01102 #>  #> $`2L:121_2L:117` #> [1] 0.03643152 #>  #> $`2L:274_2L:268` #> [1] 1.69169 #>  #> $`2L:278_2L:268` #> [1] 1.483054 head(c(center.num)) #> $`2L:74_2L:77` #> [1] 0.002752447 #>  #> $`2L:115_2L:107` #> [1] 0.004792452 #>  #> $`2L:121_2L:107` #> [1] 1.01102 #>  #> $`2L:121_2L:117` #> [1] 0.03643152 #>  #> $`2L:274_2L:268` #> [1] 1.69169 #>  #> $`2L:278_2L:268` #> [1] 1.483054 head(unlist(c(center.num))) #>   2L:74_2L:77 2L:115_2L:107 2L:121_2L:107 2L:121_2L:117 2L:274_2L:268  #>   0.002752447   0.004792452   1.011020060   0.036431519   1.691689943  #> 2L:278_2L:268  #>   1.483054107"},{"path":"/articles/Genomic2DTK.html","id":"values-naming","dir":"Articles","previous_headings":"Quantifications","what":"Values naming","title":"Introduction to Genomic2DTK","text":"function also named values according metadata interactions attributes. exemple take quantification now want use “anchor.Beaf.name” metadata name. value center.num repeted namedCenter.num attributes add know wich values duplicate. second value","code":"namedCenter.num <- GetQuantif(   matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,   area.fun      = \"center\",   operation.fun = \"mean\",   name.chr      = \"anchor.Beaf.name\"   ) unlist(c(center.num))[45:50] #> 2L:5909_2L:5941 2L:5944_2L:5968 2L:5945_2L:5968 2L:6051_2L:6069 2L:6066_2L:6069  #>       0.1871565       0.0000000       0.0000000       0.5279512       2.1392992  #> 2L:6084_2L:6071  #>       0.1096642 unlist(c(namedCenter.num))[45:51] #> Beaf32_415 Beaf32_417 Beaf32_418 Beaf32_418 Beaf32_430 Beaf32_432 Beaf32_435  #>  0.1871565  0.0000000  0.0000000  0.0000000  0.5279512  2.1392992  0.1096642 attributes(center.num)$duplicated #> NULL attributes(namedCenter.num)$duplicated #> [1] 47"},{"path":"/articles/Genomic2DTK.html","id":"custom-functions","dir":"Articles","previous_headings":"Quantifications","what":"Custom functions","title":"Introduction to Genomic2DTK","text":"GetQuantif function also take custom area selection operation parameter. exemple use functions see attributes area operation center.num vector. obtain result custom function parameter.","code":"GetQuantif(   matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,   area.fun      = function(matrice.mtx){matrice.mtx[33:35,67:69]},   operation.fun = function(area.mtx){     area.mtx[which(area.mtx==0)]<-NA;     return(mean(area.mtx,na.rm=TRUE))     }   ) |> c() |> unlist() |> head() #>   2L:74_2L:77 2L:115_2L:107 2L:121_2L:107 2L:121_2L:117 2L:274_2L:268  #>    0.01238601    0.04313207    1.01102006    0.03643152    1.69168994  #> 2L:278_2L:268  #>    1.48305411"},{"path":"/articles/Genomic2DTK.html","id":"particular-cases-extraction-of-values","dir":"Articles","previous_headings":"Quantifications","what":"Particular cases: Extraction of values","title":"Introduction to Genomic2DTK","text":"Operation.fun parameter custom function just return area selected. allow extract values matrices. ### One value extraction","code":"GetQuantif(   matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,   area.fun      = function(matrice.mtx){matrice.mtx[5,5]},   operation.fun = function(area.mtx){area.mtx}   ) |> c() |> unlist() |> head() #>   2L:74_2L:77 2L:115_2L:107 2L:121_2L:107 2L:121_2L:117 2L:274_2L:268  #>     0.0000000     0.0000000     0.3403983     0.4351463     0.0000000  #> 2L:278_2L:268  #>     0.1806280"},{"path":"/articles/Genomic2DTK.html","id":"area-extraction","dir":"Articles","previous_headings":"Quantifications > Particular cases: Extraction of values","what":"Area extraction","title":"Introduction to Genomic2DTK","text":"Operation.fun parameter custom function just return area selected. allow extract values matrices. null operation.fun return values selected area without NA.","code":"GetQuantif(   matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,   area.fun      = function(matrice.mtx){matrice.mtx[4:6,4:6]},   operation.fun = function(area){area}   ) |> c() |> head() #> $`2L:74_2L:77` #>      [,1] [,2] [,3] #> [1,]    0    0    0 #> [2,]   NA    0    0 #> [3,]   NA   NA    0 #>  #> $`2L:115_2L:107` #>      [,1] [,2]      [,3] #> [1,]    0    0 0.1671591 #> [2,]   NA    0 0.2228788 #> [3,]   NA   NA 0.1857323 #>  #> $`2L:121_2L:107` #>           [,1]      [,2]      [,3] #> [1,] 0.3009771 0.7871710 1.2376943 #> [2,]        NA 0.3403983 0.5352191 #> [3,]        NA        NA 0.0000000 #>  #> $`2L:121_2L:117` #>           [,1]      [,2]      [,3] #> [1,] 0.6591566 0.5355647 0.4119729 #> [2,]        NA 0.4351463 0.3347280 #> [3,]        NA        NA 0.2574830 #>  #> $`2L:274_2L:268` #>      [,1] [,2] [,3] #> [1,]    0    0    0 #> [2,]   NA    0    0 #> [3,]   NA   NA    0 #>  #> $`2L:278_2L:268` #>      [,1]      [,2]      [,3] #> [1,]    0 0.2032066 0.5080164 #> [2,]   NA 0.1806280 0.4515701 #> [3,]   NA        NA 0.2822313 GetQuantif(   matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,   area.fun      = function(matrice.mtx){matrice.mtx[4:6,4:6]},   operation.fun = NULL   ) |> c() |> head() #> $`2L:74_2L:77` #> [1] 0 0 0 0 0 0 #>  #> $`2L:115_2L:107` #> [1] 0.0000000 0.0000000 0.0000000 0.1671591 0.2228788 0.1857323 #>  #> $`2L:121_2L:107` #> [1] 0.3009771 0.7871710 0.3403983 1.2376943 0.5352191 0.0000000 #>  #> $`2L:121_2L:117` #> [1] 0.6591566 0.5355647 0.4351463 0.4119729 0.3347280 0.2574830 #>  #> $`2L:274_2L:268` #> [1] 0 0 0 0 0 0 #>  #> $`2L:278_2L:268` #> [1] 0.0000000 0.2032066 0.1806280 0.5080164 0.4515701 0.2822313"},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"tips-6","dir":"Articles","previous_headings":"Aggregations","what":"Tips","title":"Introduction to Genomic2DTK","text":"perform classical aggregation, use matrices.lst ctrlMatrices.lst parameters rm0.bln TRUE zeros matrices list replace NA. Function keep attributes matrices list add news: totalMatrixNumber: total number matrices. filteredMatrixNumber: number matrices use aggregate (distance filtering). minimalDistance: minimal distance anchor bait need keep matrix aggregation. maximalDistance: maximal distance anchor bait need keep matrix aggregation. aggregationMethod: function apply pixel obtain aggregation. zeroRemoved: Boolean indicate zeros replaced NA. perfomr differential aggregation supplementary attributes. correctedFact: value add condition delete noise. ’s compute median difference condition control background area (e.g upper right corner matrices). agg: Aggregation condition. aggCtrl: Aggregation control. aggCorrected: Aggregation condition corrected correctedFact. aggDelta: difference aggregated matrix condition aggregated matrix control. aggCorrectedDelta: difference aggregated matrix condition corrected correctedFact aggregated matrix control.","code":""},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"preregistered-function","dir":"Articles","previous_headings":"Aggregations > Classic Aggregations","what":"Preregistered function","title":"Introduction to Genomic2DTK","text":"Like GetQuantif function, aggregation preregistred function like sum, mean median. See Genomic2DTK::Aggregation details. Verification extraction one value","code":"agg_sum.mtx <- Aggregation(   matrices.lst = oriented_first100_interactions_RFmatrix_ctrl.lst,    agg.fun      = \"sum\",   rm0.bln      = FALSE   ) agg_sum.mtx[5,5] #> [1] 21.63697 GetQuantif(   matrices.lst = oriented_first100_interactions_RFmatrix_ctrl.lst,   area.fun     = function(matrice.mtx){matrice.mtx[5,5]},   operation.fun = function(area.num){area.num}   ) |> unlist() |> sum(na.rm=TRUE) #> [1] 21.63697"},{"path":"/articles/Genomic2DTK.html","id":"custom-function","dir":"Articles","previous_headings":"Aggregations > Classic Aggregations","what":"Custom function","title":"Introduction to Genomic2DTK","text":"used custom function. function must return unique value pixels_ij matrices. Verification extraction one value","code":"agg_mean.mtx <- Aggregation(   matrices.lst = oriented_first100_interactions_RFmatrix_ctrl.lst,   agg.fun      = function(x){mean(x,na.rm=TRUE)}   ) agg_mean.mtx[5,5] #> [1] 0.2163697 GetQuantif(   matrices.lst = oriented_first100_interactions_RFmatrix_ctrl.lst,   area.fun     = function(matrice.mtx){matrice.mtx[5,5]},   operation.fun = function(area.num){area.num}   ) |> unlist() |> mean(na.rm=TRUE) #> [1] 0.2163697"},{"path":"/articles/Genomic2DTK.html","id":"distance-constraint","dir":"Articles","previous_headings":"Aggregations > Classic Aggregations","what":"Distance constraint","title":"Introduction to Genomic2DTK","text":"add distance constraint, case function agregate matrices distance anchor bait superior equal minDist parameter inferior equal maxDist parameter Verification extraction one value","code":"agg_dist.mtx <- Aggregation(   matrices.lst = oriented_first100_interactions_RFmatrix_ctrl.lst,   minDist      = 9000,   maxDist      = 11000,   agg.fun      = \"sum\"   ) agg_dist.mtx[5,5] #>      V97  #> 2.674181 quantif.num <- GetQuantif(   matrices.lst = oriented_first100_interactions_RFmatrix_ctrl.lst,   area.fun     = function(matrice.mtx){matrice.mtx[5,5] },   operation.fun = function(area.num){area.num}   ) ndx <- which(   attributes(quantif.num)$interactions$distance >= 9000 &   attributes(quantif.num)$interactions$distance <= 11000   ) sum(unlist(quantif.num)[ndx],na.rm=TRUE) #> [1] 2.674181"},{"path":"/articles/Genomic2DTK.html","id":"differential-aggregation","dir":"Articles","previous_headings":"Aggregations","what":"Differential Aggregation","title":"Introduction to Genomic2DTK","text":"Aggregation function also perform differential aggregation. two kind differential function perform: canonical differences difference perform matrix level, .e function perform difference matrices name two list aggregate differential matrices list. second kind differential aggregated level, .e function perform aggregation two condition step ’s possible perform correction avoid noise aggregated matrix adding correction factor calculated background area (e.g upper right corner matrices). function perform difference two aggregated possibly corrected matrices. second kind store attributes called DeltaAggregated. number matrices high (hundreds) may want perform statistical test (Warning ’s memmory conssuming).","code":""},{"path":"/articles/Genomic2DTK.html","id":"preparation-of-matrices-list","dir":"Articles","previous_headings":"Aggregations > Differential Aggregation","what":"Preparation of matrices list","title":"Introduction to Genomic2DTK","text":"Preparation Control matrices list conditionFiltration Orientation Quantifications Verification Preparation second matrices list Beaf depleted condition. Extraction Filtration Orientation Quantifications Verification","code":"first100_target.lst = list(   submatrix.name = names(interactions_RFmatrix_ctrl.lst)[1:100]   ) first100_interactions_RFmatrix_ctrl.lst <- FilterInteractions(   matrices.lst  = interactions_RFmatrix_ctrl.lst,   target.lst    = first100_target.lst,   selection.fun = NULL   ) oriented_first100_interactions_RFmatrix_ctrl.lst <- OrienteMatrix(first100_interactions_RFmatrix_ctrl.lst) quantif_ctrl.num <- GetQuantif(   matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,   area.fun      = function(matrice.mtx){matrice.mtx[5,5]},   operation.fun = function(area.num){area.num}   ) interactions_RFmatrix.lst  <- ExtractSubmatrix(   feature.gn         = interactions.gni,   hic.cmx_lst        = HiC.cmx_lst,   referencePoint.chr = \"rf\",   matriceDim.num     = 101,   verbose            = FALSE   ) first100_interactions_RFmatrix.lst <- FilterInteractions(   matrices.lst  = interactions_RFmatrix.lst,   target.lst    = first100_target.lst,   selection.fun = NULL   ) oriented_first100_interactions_RFmatrix.lst <- OrienteMatrix(first100_interactions_RFmatrix.lst) quantif.num <- GetQuantif(   matrices.lst  = oriented_first100_interactions_RFmatrix.lst,   area.fun      = function(matrice.mtx){matrice.mtx[5,5]},   operation.fun = function(area.num){area.num}   )"},{"path":"/articles/Genomic2DTK.html","id":"aggregate","dir":"Articles","previous_headings":"Aggregations > Differential Aggregation","what":"Aggregate","title":"Introduction to Genomic2DTK","text":"","code":"diffAggreg.mtx <- Aggregation(   ctrlMatrices.lst    = oriented_first100_interactions_RFmatrix_ctrl.lst,   matrices.lst        = oriented_first100_interactions_RFmatrix.lst,   minDist             = NULL,   maxDist             = NULL,   agg.fun             = \"mean\",   rm0.bln             = FALSE,   diff.fun            = \"substraction\",   scaleCorrection.bln = TRUE,   correctionArea.lst  =  list(     i = c(1:30),     j = c(72:101)     ),   statCompare.bln = TRUE)"},{"path":"/articles/Genomic2DTK.html","id":"display-aggregation","dir":"Articles","previous_headings":"Aggregations > Differential Aggregation","what":"Display Aggregation","title":"Introduction to Genomic2DTK","text":"Print attributes Print matrice Differential submatrix level Aggregation Control Aggregation Beaf depleted Condition Differential Aggregated level ScaleFactor Aggregation Classic Scaled Differential Aggregated level Aggregation Classic Scaled Control","code":"diffAggreg.mtx prmatrix(diffAggreg.mtx) diffAggreg.mtx[1:101,1:101] diffAggreg.mtx[5,5] #> [1] 0.03645583 mean(unlist(quantif.num) - unlist(quantif_ctrl.num)) #> [1] 0.03645583 attributes(diffAggreg.mtx)$matrices$aggCtrl[5,5] #> [1] 0.2163697 mean(unlist(quantif_ctrl.num)) #> [1] 0.2163697 attributes(diffAggreg.mtx)$matrices$agg[5,5] #> [1] 0.2528255 mean(unlist(quantif.num)) #> [1] 0.2528255 attributes(diffAggreg.mtx)$matrices$agg[5,5]-attributes(diffAggreg.mtx)$matrices$aggCtrl[5,5] #> [1] 0.03645583 attributes(diffAggreg.mtx)$matrices$aggDelta[5,5] #> [1] 0.03645583 mean(unlist(quantif.num)) - mean(unlist(quantif_ctrl.num)) #> [1] 0.03645583 correctedFact.num = median(attributes(diffAggreg.mtx)$matrices$aggCtrl[1:30,72:101]) - median(attributes(diffAggreg.mtx)$matrices$agg[1:30,72:101]) correctedFact.num #> [1] -0.002255729 attributes(diffAggreg.mtx)$correctedFact #> [1] -0.002255729 attributes(diffAggreg.mtx)$matrices$aggCorrected[5,5] #> [1] 0.2505698 attributes(diffAggreg.mtx)$matrices$agg[5,5] + correctedFact.num #> [1] 0.2505698 mean(unlist(quantif.num)) + correctedFact.num #> [1] 0.2505698 attributes(diffAggreg.mtx)$matrices$agg[5,5]-attributes(diffAggreg.mtx)$matrices$aggCtrl[5,5] + correctedFact.num #> [1] 0.0342001 attributes(diffAggreg.mtx)$matrices$aggCorrectedDelta[5,5] #> [1] 0.0342001 mean(unlist(quantif.num)) - mean(unlist(quantif_ctrl.num)) + correctedFact.num #> [1] 0.0342001"},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"preparation-of-aggregated-matrices","dir":"Articles","previous_headings":"Aggregations plots","what":"Preparation of aggregated matrices","title":"Introduction to Genomic2DTK","text":"Control aggregation Differential aggregation","code":"oriented_interactions_RFmatrix_ctrl.lst <- OrienteMatrix(interactions_RFmatrix_ctrl.lst) aggreg.mtx <- Aggregation(     ctrlMatrices.lst=oriented_interactions_RFmatrix_ctrl.lst,     agg.fun=\"mean\",     rm0.bln=FALSE ) row.names(aggreg.mtx) = c(rep(\"\",33),rep(\"*\",2),rep(\"\",31),rep(\"*\",2),rep(\"\",33)) colnames(aggreg.mtx) = c(rep(\"\",33),rep(\"*\",2),rep(\"\",31),rep(\"*\",2),rep(\"\",33)) oriented_interactions_RFmatrix.lst <- OrienteMatrix(interactions_RFmatrix.lst) diffAggreg.mtx <- Aggregation(     ctrlMatrices.lst    = oriented_interactions_RFmatrix_ctrl.lst,     matrices.lst        = oriented_interactions_RFmatrix.lst,     minDist             = NULL,     maxDist             = NULL,     agg.fun             = \"mean\",     rm0.bln             = FALSE,     diff.fun            = \"log2+1\",     scaleCorrection.bln = TRUE,     correctionArea.lst  = list( i=c(1:30) , j=c(72:101) ),     statCompare.bln     = TRUE ) row.names(diffAggreg.mtx) = c(rep(\"\",33),rep(\"*\",2),rep(\"\",31),rep(\"*\",2),rep(\"\",33)) colnames(diffAggreg.mtx) = c(rep(\"\",33),rep(\"*\",2),rep(\"\",31),rep(\"*\",2),rep(\"\",33))"},{"path":"/articles/Genomic2DTK.html","id":"plots","dir":"Articles","previous_headings":"Aggregations plots","what":"Plots","title":"Introduction to Genomic2DTK","text":"see ggAPA function create ggplot object (ggplot2::geom_raster)","code":"ggAPA(     apa.mtx   = aggreg.mtx,     title.chr = \"APA\" )"},{"path":"/articles/Genomic2DTK.html","id":"center","dir":"Articles","previous_headings":"Aggregations plots > Plots","what":"Center","title":"Introduction to Genomic2DTK","text":"center color scale.","code":"ggAPA(     apa.mtx    = aggreg.mtx,     title.chr  = \"APA center on 0.2\",     center.num = 0.2 )"},{"path":"/articles/Genomic2DTK.html","id":"trimming","dir":"Articles","previous_headings":"Aggregations plots > Plots","what":"Trimming","title":"Introduction to Genomic2DTK","text":"remove percentage value choose upper tail, lower tail tails distribution.","code":"ggAPA(     apa.mtx      = aggreg.mtx,     title.chr    = \"APA 30% trimmed on upper side\",     trimPrct.num = 30,     bounds.chr   = \"upper\" ) #> Warning in max(unlist(bounds.num_lst[1]), na.rm = TRUE): no non-missing #> arguments to max; returning -Inf ggAPA(     apa.mtx      = aggreg.mtx,     title.chr    = \"APA 30% trimmed on upper side\",     trimPrct.num = 30,     bounds.chr   = \"lower\" ) #> Warning in min(unlist(bounds.num_lst[2]), na.rm = TRUE): no non-missing #> arguments to min; returning Inf ggAPA(     apa.mtx      = aggreg.mtx,     title.chr    = \"APA 30% trimmed\",     trimPrct.num = 30,     bounds.chr   = \"both\" )"},{"path":"/articles/Genomic2DTK.html","id":"minmax","dir":"Articles","previous_headings":"Aggregations plots > Plots","what":"MinMax","title":"Introduction to Genomic2DTK","text":"also define minimal /maximal value color scale. use trimming options, function choose stringent options minimal maximal value.","code":"ggAPA(     apa.mtx         = aggreg.mtx,     title.chr       = \"APA [.15-.35]\",     minBoundary.num = 0.15,     maxBoundary.num = 0.35 )"},{"path":"/articles/Genomic2DTK.html","id":"colbreaks","dir":"Articles","previous_headings":"Aggregations plots > Plots","what":"ColBreaks","title":"Introduction to Genomic2DTK","text":"define color breaks","code":"ggAPA(     apa.mtx       = aggreg.mtx,     title.chr     = \"APA [.1, .2, .3, .4]\",     colBreaks.num = c(0.1,0.2,0.3,0.4) ) ggAPA(     apa.mtx       = aggreg.mtx,     title.chr     = \"APA [.10, .13, .16, .20, .30, .40]\",     colBreaks.num = c(0.1,0.13,0.16,0.2,0.3,0.4) ) ggAPA(     apa.mtx       = aggreg.mtx,     title.chr     = \"APA [.10, .20, .30, .33, .36, .40]\",     colBreaks.num = c(0.1,0.2,0.3,0.33,0.36,0.40) )"},{"path":"/articles/Genomic2DTK.html","id":"color-scale","dir":"Articles","previous_headings":"Aggregations plots > Plots","what":"Color Scale","title":"Introduction to Genomic2DTK","text":"show effect color scale biais.","code":"ggAPA(     apa.mtx    = aggreg.mtx,     title.chr  = \"APA\",     colorScale = \"density\" ) ggAPA(     apa.mtx     = aggreg.mtx,     title.chr   = \"APA\",     bias.num    = 2 ) ggAPA(     apa.mtx     = aggreg.mtx,     title.chr   = \"APA\",     bias.num    = 0.5 )"},{"path":"/articles/Genomic2DTK.html","id":"blurred","dir":"Articles","previous_headings":"Aggregations plots > Plots","what":"Blurred","title":"Introduction to Genomic2DTK","text":"option apply blurr heatmap remove noise.","code":"ggAPA(     apa.mtx           = aggreg.mtx,     title.chr         = \"APA\",     blurPass.num      = 1,     blurSd.num        = 0.5,     lowerTri.num = NA )"},{"path":"/articles/Genomic2DTK.html","id":"changed-color","dir":"Articles","previous_headings":"Aggregations plots > Plots","what":"Changed color","title":"Introduction to Genomic2DTK","text":"option change color heatmap color NA values.","code":"ggAPA(     apa.mtx     = aggreg.mtx,     title.chr   = \"APA\",     heatmap.col = SuperTK::viridis(6),     na.col      = \"black\" )"},{"path":"/articles/Genomic2DTK.html","id":"modifications","dir":"Articles","previous_headings":"Aggregations plots > Plots","what":"Modifications","title":"Introduction to Genomic2DTK","text":"function return ggplot object modify ggplot object ggplot2.","code":"ggAPA(     apa.mtx     = aggreg.mtx,     title.chr   = \"APA\", ) +  ggplot2::labs(     title    = \"New title\",     subtitle = \"and subtitle\" )"},{"path":"/articles/Genomic2DTK.html","id":"all-in-one-function","dir":"Articles","previous_headings":"Aggregations plots","what":"All in one function","title":"Introduction to Genomic2DTK","text":"one function plot matrix (matrices attributes ’s differential aggregation) different options put pdf.","code":"PlotAPA(     apa.mtx                  = diffAggreg.mtx,     trimPrct.num             = 20,     minBoundary.num          = -2,     center.num               = 0,     maxBoundary.num          = 2,     minConditionBoundary.num = 0,     maxConditionBoundary.num = 2 )"},{"path":[]},{"path":"/articles/Standard.html","id":"names","dir":"Articles","previous_headings":"Variables","what":"Names","title":"Standard","text":"Variable names must written according camelCase convention. .e. entirely lower case except first letters second subsequent words. name variable try put extension separated dot. extension informs object class variable. extension must written entirely lower case must abbreviation. variables several possible object classes, separate extensions underscore.","code":""},{"path":"/articles/Standard.html","id":"extensions","dir":"Articles","previous_headings":"Variables","what":"Extensions","title":"Standard","text":".chr <character> … .pth <character> File path .dir <character> Directory path .num <numeric> … .int <numeric> Integer .ndx <numeric> Position Number .tim <numeric> Time .fac <factor> Factor .idn <factor character numeric> Identifier (unique) .lgk <logical function> Logical expression .bln <logical> Boolean .fun <function> Function .<> .lst <list> … .nst <list> Nested List .{*}_vec <*> Vector specific class .{*}_lst <list> list specific class .dtf <data.frame> … .tbl <tibble> … .mtx <matrix> … .spm <dgCMatrix dgRMatrix Matrix format> Sparse matrix .gnr <GRanges> … .gnp <Pairs> GeNomic ranges Pairs .gni <GInteractions> GeNomic Interactions .cmx <ContactMatrix> Contact Matrix .ggp <gg ggplot> ggplot object .col <character numeric list> color format","code":""},{"path":"/articles/Standard.html","id":"functions","dir":"Articles","previous_headings":"","what":"Functions","title":"Standard","text":"Functions names must written according camelCase convention. .e. entirely lower case except first letters words. name function action, verb question.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Chanard \\. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"\\<ff> NC (2022). Genomic2DTK: Set genomic interaction analysis tools. https://nchanard.github.io/Genomic2DTK/, https://github.com/NChanard/Genomic2DTK.","code":"@Manual{,   title = {Genomic2DTK: Set of genomic interaction analysis tools},   author = {Nicolas Chanard \\},   year = {2022},   note = {https://nchanard.github.io/Genomic2DTK/, https://github.com/NChanard/Genomic2DTK}, }"},{"path":"/index.html","id":"genomic2dtk-","dir":"","previous_headings":"","what":"Set of genomic interaction analysis tools","title":"Set of genomic interaction analysis tools","text":"Genomic2DTK set genomic interaction analysis tools.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Set of genomic interaction analysis tools","text":"can install development version Genomic2DTK GitHub :","code":"devtools::install_github(\"NChanard/Genomic2DTK\")"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Set of genomic interaction analysis tools","text":"Genomic2DTK","code":""},{"path":"/reference/Aggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation — Aggregation","title":"Aggregation — Aggregation","text":"aggregated matrices list. apply differential paired matrices two list aggregation.","code":""},{"path":"/reference/Aggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation — Aggregation","text":"","code":"Aggregation(   ctrlMatrices.lst = NULL,   matrices.lst = NULL,   minDist.num = NULL,   maxDist.num = NULL,   agg.fun = \"mean\",   rm0.bln = FALSE,   diff.fun = \"substraction\",   scaleCorrection.bln = TRUE,   correctionArea.lst = NULL,   statCompare.bln = FALSE )"},{"path":"/reference/Aggregation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregation — Aggregation","text":"ctrlMatrices.lst <list[matrix]>: matrices list aggregate control. matrices.lst <list[matrix]>: matrices list aggregate. minDist.num <numeric>: minimal distance anchor bait. maxDist.num <numeric>: maximal distance anchor bait. agg.fun <chracter function>: function use aggregate pixel matrix. parameter character : \"50 \"+\" \"sum\" apply sum (Default) apply mean rm0.bln <logical>: TURE 0 replace NA. (Default FALSE) diff.fun <chracter function>: function use compute differential. parameter character : \"-\", \"substract\" \"substraction\" apply substraction \"/\" \"ratio\" apply ratio \"log2\",\"log2-\",\"log2/\" \"log2ratio\" apply log2 ratio (Default) apply log2 1+ratio scaleCorrection.bln <logical>: Whether correction done median value take ane noising area. (Default TRUE) correctionArea.lst <list>: Nested list indice define noising area fore correction. List muste contain first element \"\" (row indices) element called \"j\" (columns indices). NULL automatically take upper left part aggregated matrices. (Default NULL) statCompare.bln <logical>: Whether t.test must apply pxl differential aggregated matrix.","code":""},{"path":"/reference/Aggregation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregation — Aggregation","text":"matrix","code":""},{"path":"/reference/Aggregation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation — Aggregation","text":"","code":"library(GenomicED) data(\"submatrixRF_Ctrl.mtx_lst\") data(\"submatrixRF.mtx_lst\") aggreg.mtx <- Aggregation(   matrices.lst = submatrixRF_Ctrl.mtx_lst,    agg.fun      = \"sum\",   rm0.bln      = TRUE,   minDist      = 9000,   maxDist      = 11000 ) #> Loading required package: InteractionSet #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians diffAggreg.mtx <- Aggregation(   ctrlMatrices.lst    = submatrixRF_Ctrl.mtx_lst,   matrices.lst        = submatrixRF.mtx_lst,   minDist             = NULL,   maxDist             = NULL,   agg.fun             = \"mean\",   rm0.bln             = FALSE,   diff.fun            = \"substraction\",   scaleCorrection.bln = TRUE,   correctionArea.lst  =  list(     i = c(1:30),     j = c(72:101)     ),   statCompare.bln = TRUE )"},{"path":"/reference/ExtractSubmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"ExtractSubmatrix — ExtractSubmatrix","title":"ExtractSubmatrix — ExtractSubmatrix","text":"Extract matrices HiC maps list around genomic features.","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ExtractSubmatrix — ExtractSubmatrix","text":"","code":"ExtractSubmatrix(   feature.gn = NULL,   hic.cmx_lst = NULL,   referencePoint.chr = \"rf\",   res.num = NULL,   matriceDim.num = 21,   shiftFactor.num = 1,   cores.num = 1,   verbose.bln = TRUE )"},{"path":"/reference/ExtractSubmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ExtractSubmatrix — ExtractSubmatrix","text":"feature.gn <GRanges Pairs[GRanges] GInteractions>: genomic feature compute extraction HiC submatrix. hic.cmx_lst <List[contactMatrix]>: HiC maps list. referencePoint.chr <character>: character give kind extraction. \"rf\" extract regions \"pf\" extract points interactions. (Default \"rf\") res.num <numeric>: resoulution used hic.cmx_lst. NULL automatically find resolution attributes hic.cmx_lst. (Default NULL) matriceDim.num <numeric>: size matrices output. (Default 21). shiftFactor.num <numeric>: \"referencePoint.chr\" \"rf\". much distance anchor bait report region (Default 1). cores.num <integer> : integer specify number cores. (Default 1) verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE)","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ExtractSubmatrix — ExtractSubmatrix","text":"matrices list.","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ExtractSubmatrix — ExtractSubmatrix","text":"","code":"library(GenomicED) data(\"interactions.gni\") data(\"HiC_ctrl.cmx_lst\") interactions_RFmatrix_ctrl.lst  <- ExtractSubmatrix(   feature.gn         = interactions.gni,   hic.cmx_lst        = HiC_ctrl.cmx_lst,   res.num            = NULL,   referencePoint.chr = \"rf\",   matriceDim.num     = 101,   cores.num          = 1,   verbose.bln        = FALSE   )"},{"path":"/reference/FilterInteractions.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterInteractions — FilterInteractions","title":"FilterInteractions — FilterInteractions","text":"Search GInteraction object interactions correspond ti target list return list index filter matrices list according target selection function.","code":""},{"path":"/reference/FilterInteractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterInteractions — FilterInteractions","text":"","code":"FilterInteractions(   matrices.lst = NULL,   interarctions.gni = NULL,   target.lst = NULL,   selection.fun = function() {      Reduce(intersect, interarctions.ndx_lst)  } )"},{"path":"/reference/FilterInteractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterInteractions — FilterInteractions","text":"matrices.lst <List[matrix]>: matrices list filter. NULL, function return filtred matrices list, else return list index. interarctions.gni <GInteractions>: GInteraction object compute filter. target.lst <List>: nammed list describe target. selection.fun <function>: function described target must cross. (Defaul intersection targets)","code":""},{"path":"/reference/FilterInteractions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FilterInteractions — FilterInteractions","text":"list elements index filtred matrices list attributes updates.","code":""},{"path":"/reference/FilterInteractions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FilterInteractions — FilterInteractions","text":"","code":"library(GenomicED) data(\"submatrixPF_Ctrl.mtx_lst\") target.lst <- list(   anchor.Beaf.name = c(\"Beaf32_8\",\"Beaf32_15\"),   bait.Tss.name    = c(\"FBgn0031214\",\"FBgn0005278\"),   name             = c(\"2L:74_2L:77\"),   distance         = function(columnElement){     return(14000==columnElement || columnElement == 3000)     } ) # Extraction on InteractionSet FilterInteractions(   interarctions.gni = attributes(submatrixPF_Ctrl.mtx_lst)$interactions,   target.lst        = target.lst,   selection.fun     = NULL ) #> $anchor.Beaf.name #> [1] 1 3 4 #>  #> $bait.Tss.name #> [1] 1 2 3 #>  #> $name #> [1] 1 #>  #> $distance #> [1]  1  3  8 24 38 49 63 65 80 #>   selection.fun = function(){   Reduce(intersect, list(anchor.Beaf.name, bait.Tss.name ,distance) ) |>   setdiff(name) }  # Extraction on matrices list and with selection FilterInteractions(   matrices.lst = submatrixPF_Ctrl.mtx_lst,   target.lst        = target.lst,   selection.fun     = selection.fun ) #> $`2L:107_2L:121` #>           [,1]      [,2]      [,3]     [,4]     [,5]     [,6]     [,7]     [,8] #>  [1,] 0.000000 0.0000000 0.5297419 0.000000 1.108568 0.000000 0.000000 0.000000 #>  [2,] 0.000000 0.0000000 2.3123753 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [3,] 2.958131 0.0000000 0.0000000 2.139807 0.000000 1.286100 0.000000 0.000000 #>  [4,] 0.000000 0.0000000 0.0000000 1.466081 0.000000 0.000000 0.000000 0.000000 #>  [5,] 0.000000 0.0000000 0.0000000 0.000000 0.000000 0.000000 2.045658 0.000000 #>  [6,] 0.000000 0.0000000 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [7,] 2.156886 0.0000000 0.0000000 0.000000 0.000000 0.000000 1.693100 2.782898 #>  [8,] 2.437283 0.8341782 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [9,] 1.878906 0.0000000 3.0109010 0.000000 5.779325 0.000000 1.959226 0.000000 #> [10,] 1.951472 3.4909725 0.0000000 4.173593 0.000000 0.000000 0.000000 0.000000 #> [11,] 0.000000 1.5685319 3.6822057 0.000000 0.000000 0.000000 0.000000 0.000000 #> [12,] 2.674218 0.0000000 0.0000000 3.479809 0.000000 2.087023 0.000000 2.178157 #> [13,] 0.000000 0.0000000 0.0000000 3.897979 3.738908 0.000000 0.000000 0.000000 #> [14,] 0.000000 1.0805069 2.0427310 0.000000 0.000000 0.000000 0.000000 0.000000 #> [15,] 0.000000 0.9250376 0.0000000 0.000000 0.000000 2.211734 0.000000 0.000000 #> [16,]       NA 0.0000000 0.0000000 1.598032 0.000000 0.000000 0.000000 0.000000 #> [17,]       NA        NA 0.0000000 0.000000 0.000000 2.082856 2.135369 0.000000 #> [18,]       NA        NA        NA 0.000000 0.000000 0.000000 0.000000 3.563908 #> [19,]       NA        NA        NA       NA 0.000000 2.344870 0.000000 0.000000 #> [20,]       NA        NA        NA       NA       NA 0.000000 0.000000 0.000000 #> [21,]       NA        NA        NA       NA       NA       NA 2.276137 0.000000 #> [22,]       NA        NA        NA       NA       NA       NA       NA 0.000000 #> [23,]       NA        NA        NA       NA       NA       NA       NA       NA #> [24,]       NA        NA        NA       NA       NA       NA       NA       NA #> [25,]       NA        NA        NA       NA       NA       NA       NA       NA #> [26,]       NA        NA        NA       NA       NA       NA       NA       NA #> [27,]       NA        NA        NA       NA       NA       NA       NA       NA #> [28,]       NA        NA        NA       NA       NA       NA       NA       NA #> [29,]       NA        NA        NA       NA       NA       NA       NA       NA #> [30,]       NA        NA        NA       NA       NA       NA       NA       NA #> [31,]       NA        NA        NA       NA       NA       NA       NA       NA #> [32,]       NA        NA        NA       NA       NA       NA       NA       NA #> [33,]       NA        NA        NA       NA       NA       NA       NA       NA #> [34,]       NA        NA        NA       NA       NA       NA       NA       NA #> [35,]       NA        NA        NA       NA       NA       NA       NA       NA #> [36,]       NA        NA        NA       NA       NA       NA       NA       NA #> [37,]       NA        NA        NA       NA       NA       NA       NA       NA #> [38,]       NA        NA        NA       NA       NA       NA       NA       NA #> [39,]       NA        NA        NA       NA       NA       NA       NA       NA #> [40,]       NA        NA        NA       NA       NA       NA       NA       NA #> [41,]       NA        NA        NA       NA       NA       NA       NA       NA #>            [,9]     [,10]     [,11]    [,12]    [,13]     [,14]     [,15] #>  [1,] 0.0000000 0.6309677 0.0000000 0.000000 0.000000 0.0000000 0.8179082 #>  [2,] 0.0000000 0.0000000 0.0000000 0.000000 0.000000 0.0000000 0.0000000 #>  [3,] 0.0000000 0.0000000 2.2148798 0.000000 0.000000 0.0000000 0.0000000 #>  [4,] 1.0568750 0.0000000 0.0000000 0.000000 0.000000 1.2346566 0.0000000 #>  [5,] 0.0000000 0.0000000 0.0000000 0.000000 0.000000 0.0000000 0.0000000 #>  [6,] 2.1355312 0.0000000 0.0000000 1.562632 0.000000 0.0000000 0.0000000 #>  [7,] 0.0000000 0.0000000 2.1186442 0.000000 0.000000 0.0000000 0.8296640 #>  [8,] 0.0000000 0.0000000 0.0000000 0.000000 0.000000 0.4825633 0.0000000 #>  [9,] 0.0000000 0.0000000 0.0000000 0.000000 0.000000 0.0000000 0.0000000 #> [10,] 0.0000000 0.0000000 0.0000000 0.000000 2.077487 2.1412535 0.0000000 #> [11,] 0.0000000 0.0000000 0.9881868 0.000000 0.000000 0.0000000 3.5791350 #> [12,] 0.3306442 0.0000000 2.2194939 0.000000 0.000000 0.0000000 0.0000000 #> [13,] 0.0000000 1.9560894 0.0000000 0.000000 3.229433 0.0000000 0.0000000 #> [14,] 0.0000000 1.1215968 0.0000000 0.000000 0.000000 0.0000000 1.2940578 #> [15,] 0.0000000 0.0000000 0.0000000 0.000000 0.000000 0.0000000 0.0000000 #> [16,] 1.3219687 0.0000000 0.6505961 1.734163 0.000000 0.4416105 0.0000000 #> [17,] 0.0000000 0.0000000 0.7581898 0.000000 0.000000 0.0000000 1.2983716 #> [18,] 0.9246346 2.0556383 0.0000000 1.996511 0.000000 0.0000000 0.0000000 #> [19,] 0.0000000 3.2716222 0.0000000 2.209554 0.000000 0.0000000 0.0000000 #> [20,] 0.0000000 0.0000000 0.0000000 1.860589 0.000000 0.0000000 0.0000000 #> [21,] 0.0000000 0.0000000 0.0000000 0.000000 0.000000 0.0000000 0.0000000 #> [22,] 0.5777135 0.0000000 1.8463304 1.569322 3.020721 1.6848464 0.0000000 #> [23,] 1.5169718 0.0000000 0.0000000 0.000000 0.000000 0.0000000 0.0000000 #> [24,]        NA 1.6781235 0.0000000 0.000000 3.185435 0.0000000 1.3574467 #> [25,]        NA        NA 0.7214578 0.000000 3.329250 1.5573801 0.0000000 #> [26,]        NA        NA        NA 0.000000 0.000000 0.0000000 0.0000000 #> [27,]        NA        NA        NA       NA 0.000000 0.0000000 0.0000000 #> [28,]        NA        NA        NA       NA       NA 1.8871852 0.0000000 #> [29,]        NA        NA        NA       NA       NA        NA 0.0000000 #> [30,]        NA        NA        NA       NA       NA        NA        NA #> [31,]        NA        NA        NA       NA       NA        NA        NA #> [32,]        NA        NA        NA       NA       NA        NA        NA #> [33,]        NA        NA        NA       NA       NA        NA        NA #> [34,]        NA        NA        NA       NA       NA        NA        NA #> [35,]        NA        NA        NA       NA       NA        NA        NA #> [36,]        NA        NA        NA       NA       NA        NA        NA #> [37,]        NA        NA        NA       NA       NA        NA        NA #> [38,]        NA        NA        NA       NA       NA        NA        NA #> [39,]        NA        NA        NA       NA       NA        NA        NA #> [40,]        NA        NA        NA       NA       NA        NA        NA #> [41,]        NA        NA        NA       NA       NA        NA        NA #>          [,16]     [,17]     [,18]    [,19]     [,20]     [,21]     [,22] #>  [1,] 0.000000 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 #>  [2,] 0.000000 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 #>  [3,] 0.000000 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 #>  [4,] 0.000000 0.0000000 0.0000000 1.525332 0.0000000 0.0000000 0.0000000 #>  [5,] 0.000000 0.0000000 0.0000000 0.000000 0.0000000 0.6048788 0.0000000 #>  [6,] 0.000000 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 #>  [7,] 1.072001 0.0000000 2.5576630 0.000000 0.0000000 1.0404003 0.0000000 #>  [8,] 0.000000 1.1549203 0.0000000 1.208733 0.0000000 0.0000000 1.3595614 #>  [9,] 0.000000 0.0000000 0.5275351 0.000000 0.0000000 1.6110880 0.0000000 #> [10,] 0.000000 0.0000000 0.0000000 0.907349 0.0000000 1.2620573 0.0000000 #> [11,] 0.000000 0.0000000 0.0000000 0.000000 0.0000000 0.5119065 0.6231812 #> [12,] 1.516662 0.0000000 0.0000000 0.000000 0.4762146 0.0000000 0.6128533 #> [13,] 0.000000 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 #> [14,] 0.000000 1.7248671 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 #> [15,] 0.000000 0.0000000 0.0000000 0.000000 0.0000000 0.4618533 0.0000000 #> [16,] 0.000000 0.0000000 0.5317324 0.000000 0.0000000 0.0000000 0.0000000 #> [17,] 0.000000 0.4379424 0.0000000 1.878967 0.0000000 0.0000000 0.0000000 #> [18,] 0.000000 0.0000000 1.5877159 1.890131 0.0000000 0.0000000 0.0000000 #> [19,] 0.000000 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 #> [20,] 0.000000 1.2577319 0.0000000 0.000000 1.2296215 0.0000000 1.2168779 #> [21,] 0.000000 0.0000000 1.2413720 0.000000 0.0000000 2.0247781 0.0000000 #> [22,] 0.000000 0.0000000 0.0000000 1.845688 0.0000000 0.0000000 0.0000000 #> [23,] 0.000000 0.0000000 0.0000000 0.000000 2.3270350 1.4408004 0.0000000 #> [24,] 0.000000 2.1675289 1.4236422 1.978526 0.0000000 0.0000000 2.6371455 #> [25,] 0.000000 0.0000000 0.0000000 0.000000 1.2401872 0.0000000 0.0000000 #> [26,] 1.676673 3.0994139 0.0000000 0.000000 0.0000000 0.7546380 0.0000000 #> [27,] 0.000000 0.0000000 0.0000000 1.989344 0.0000000 0.0000000 1.1523938 #> [28,] 0.000000 0.0000000 1.0379076 0.000000 0.0000000 0.0000000 0.3076864 #> [29,] 0.000000 0.0000000 0.0000000 0.000000 0.0000000 2.1900650 0.5035289 #> [30,] 0.000000 1.4831592 0.0000000 0.000000 2.0331670 0.0000000 0.5802198 #> [31,]       NA 0.0000000 0.0000000 0.000000 1.0627156 0.0000000 0.0000000 #> [32,]       NA        NA 0.0000000 0.000000 1.5727552 0.0000000 1.9269785 #> [33,]       NA        NA        NA 0.000000 0.0000000 0.0000000 0.0000000 #> [34,]       NA        NA        NA       NA 0.0000000 0.0000000 2.2842069 #> [35,]       NA        NA        NA       NA        NA 0.0000000 1.1608269 #> [36,]       NA        NA        NA       NA        NA        NA 0.0000000 #> [37,]       NA        NA        NA       NA        NA        NA        NA #> [38,]       NA        NA        NA       NA        NA        NA        NA #> [39,]       NA        NA        NA       NA        NA        NA        NA #> [40,]       NA        NA        NA       NA        NA        NA        NA #> [41,]       NA        NA        NA       NA        NA        NA        NA #>          [,23]     [,24]     [,25]     [,26]     [,27]     [,28]    [,29] #>  [1,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #>  [2,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #>  [3,] 0.000000 0.0000000 1.2256362 0.8787679 0.0000000 0.0000000 1.804757 #>  [4,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.8191016 0.000000 #>  [5,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #>  [6,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #>  [7,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #>  [8,] 0.000000 0.0000000 0.5590918 0.0000000 0.0000000 0.0000000 0.000000 #>  [9,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [10,] 0.000000 0.0000000 0.0000000 1.2254941 0.0000000 0.0000000 0.000000 #> [11,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [12,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [13,] 0.000000 0.0000000 2.2442172 0.0000000 0.0000000 0.0000000 0.000000 #> [14,] 0.000000 0.0000000 0.0000000 0.6380129 0.0000000 1.6257743 0.000000 #> [15,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [16,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [17,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [18,] 0.000000 0.0000000 0.0000000 1.0325822 0.0000000 0.0000000 0.000000 #> [19,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [20,] 0.000000 0.3107510 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [21,] 0.000000 0.6393787 0.0000000 1.5915717 0.0000000 0.0000000 0.000000 #> [22,] 0.000000 0.0000000 2.2655265 0.0000000 0.0000000 0.0000000 0.000000 #> [23,] 0.409167 0.0000000 1.1775584 0.5781391 0.0000000 0.0000000 0.000000 #> [24,] 1.806444 0.0000000 0.0000000 0.0000000 0.8695775 0.0000000 0.000000 #> [25,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [26,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [27,] 1.596562 1.8188438 0.0000000 0.0000000 0.0000000 1.7012625 0.000000 #> [28,] 0.000000 0.0000000 2.8199500 0.0000000 0.0000000 0.0000000 0.000000 #> [29,] 0.000000 0.0000000 0.9319323 0.0000000 0.0000000 0.0000000 0.000000 #> [30,] 0.000000 0.0000000 0.0000000 0.0000000 0.4149599 0.0000000 0.000000 #> [31,] 0.000000 1.4643464 0.0000000 0.0000000 0.0000000 1.3108084 0.000000 #> [32,] 0.000000 0.0000000 1.8631420 0.0000000 0.0000000 0.0000000 0.000000 #> [33,] 2.871638 0.0000000 3.7914116 0.0000000 0.0000000 0.0000000 3.046521 #> [34,] 0.000000 2.5142388 3.1312966 1.1948836 0.0000000 2.6242402 0.000000 #> [35,] 0.000000 4.0079393 0.0000000 0.0000000 2.3407402 2.0661695 0.000000 #> [36,] 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000 #> [37,] 0.000000 0.0000000 0.0000000 2.0384512 2.1754227 0.0000000 0.000000 #> [38,]       NA 0.0000000 0.0000000 2.6198764 2.4293710 0.0000000 0.000000 #> [39,]       NA        NA 1.6092690 0.0000000 0.0000000 1.6432730 0.000000 #> [40,]       NA        NA        NA 1.3413332 0.0000000 0.0000000 0.000000 #> [41,]       NA        NA        NA        NA 1.1508969 0.0000000 3.145500 #>           [,30]     [,31]    [,32]     [,33]     [,34]     [,35]     [,36] #>  [1,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [2,] 0.0000000 0.0000000 0.000000 0.0000000 0.8444607 0.0000000 0.0000000 #>  [3,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [4,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [5,] 0.0000000 0.0000000 0.000000 0.0000000 0.7214374 0.0000000 0.0000000 #>  [6,] 0.0000000 0.0000000 0.000000 0.8221505 0.0000000 0.0000000 0.0000000 #>  [7,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [8,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [9,] 0.0000000 0.0000000 0.000000 0.6270656 0.0000000 0.8640737 0.0000000 #> [10,] 0.0000000 2.0652804 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [11,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [12,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [13,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [14,] 0.0000000 0.0000000 0.000000 1.5906304 1.1243157 0.0000000 0.0000000 #> [15,] 0.0000000 0.7863596 0.000000 0.5730752 0.6104273 0.0000000 0.0000000 #> [16,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [17,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [18,] 1.0003532 1.1919918 2.470700 0.0000000 0.0000000 0.0000000 0.0000000 #> [19,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.9471291 #> [20,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.6271501 0.0000000 #> [21,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [22,] 0.0000000 0.5616322 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [23,] 0.5795834 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [24,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.5467362 0.7333738 #> [25,] 0.4509796 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [26,] 0.0000000 0.0000000 0.000000 1.1636763 0.4146091 0.5497198 0.0000000 #> [27,] 0.0000000 0.0000000 0.000000 1.4493355 0.0000000 0.0000000 0.0000000 #> [28,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [29,] 0.0000000 0.0000000 0.000000 0.0000000 1.8003397 0.0000000 0.0000000 #> [30,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [31,] 0.0000000 1.4299700 0.000000 0.0000000 0.3932143 0.0000000 0.7144827 #> [32,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [33,] 0.0000000 0.0000000 0.000000 0.0000000 1.8313124 1.2278371 2.0976768 #> [34,] 2.6577427 0.0000000 1.381844 0.5037325 1.3745707 0.0000000 0.0000000 #> [35,] 1.0111939 0.6215990 0.000000 0.9690718 0.0000000 0.0000000 0.4868882 #> [36,] 0.0000000 0.0000000 0.000000 0.0000000 0.8752836 0.0000000 1.0825044 #> [37,] 2.6537063 0.0000000 0.000000 1.9416696 0.9462451 0.0000000 0.8803134 #> [38,] 3.1180763 2.8504060 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [39,] 0.0000000 1.6322149 0.000000 0.0000000 0.0000000 0.0000000 2.7088351 #> [40,] 0.0000000 0.5199251 0.000000 1.0539764 0.0000000 0.3198205 0.0000000 #> [41,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>           [,37]     [,38]     [,39]     [,40]     [,41] #>  [1,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [2,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [3,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [4,] 0.0000000 0.0000000 0.0000000 0.0000000 1.0033987 #>  [5,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [6,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [7,] 0.0000000 0.0000000 0.0000000 0.0000000 0.7754516 #>  [8,] 0.9557990 0.0000000 0.7792190 0.0000000 0.0000000 #>  [9,] 0.0000000 0.9762446 1.5238123 0.0000000 0.0000000 #> [10,] 0.0000000 0.0000000 0.0000000 0.8132008 0.0000000 #> [11,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [12,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [13,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [14,] 0.0000000 0.0000000 0.6589141 0.0000000 0.0000000 #> [15,] 0.0000000 0.0000000 0.0000000 0.9699457 0.0000000 #> [16,] 0.0000000 0.0000000 0.0000000 0.0000000 0.9695386 #> [17,] 0.0000000 0.9153376 0.0000000 0.0000000 0.0000000 #> [18,] 0.6649672 0.0000000 0.5589612 0.0000000 0.6073781 #> [19,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [20,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [21,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [22,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [23,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [24,] 0.5966734 1.2703551 0.0000000 0.0000000 0.0000000 #> [25,] 0.0000000 1.9950490 0.0000000 0.0000000 0.5872157 #> [26,] 0.0000000 0.0000000 1.0213538 0.0000000 0.0000000 #> [27,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [28,] 0.0000000 0.0000000 0.0000000 0.7258163 0.0000000 #> [29,] 0.0000000 1.1281071 0.0000000 1.8511341 0.0000000 #> [30,] 0.0000000 0.6754475 0.0000000 0.0000000 0.0000000 #> [31,] 0.0000000 0.6274130 0.0000000 0.0000000 0.0000000 #> [32,] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [33,] 0.0000000 1.4817022 0.0000000 0.0000000 0.0000000 #> [34,] 0.4166408 0.0000000 0.0000000 0.0000000 0.0000000 #> [35,] 0.0000000 0.0000000 0.0000000 1.4491924 0.0000000 #> [36,] 0.8951552 0.0000000 0.0000000 0.0000000 0.0000000 #> [37,] 0.0000000 0.0000000 0.0000000 0.0000000 0.7325187 #> [38,] 1.9368851 1.2019191 2.4395547 0.0000000 0.0000000 #> [39,] 0.0000000 0.0000000 2.5043068 0.0000000 0.0000000 #> [40,] 0.3705595 0.0000000 0.6578825 0.0000000 0.7607654 #> [41,] 0.6688894 0.0000000 0.0000000 0.0000000 0.0000000 #>  #> attr(,\"interactions\") #> GInteractions object with 1 interaction and 15 metadata columns: #>                 seqnames1       ranges1     seqnames2       ranges2 | #>                     <Rle>     <IRanges>         <Rle>     <IRanges> | #>   2L:121_2L:107        2L 120001-121000 ---        2L 106001-107000 | #>                          name  constraint  distance orientation submatrix.name #>                   <character> <character> <integer>   <logical>    <character> #>   2L:121_2L:107 2L:121_2L:107       Tad_3     14000       FALSE  2L:107_2L:121 #>                  anchor.bin  anchor.name    bait.bin    bait.name #>                 <character>  <character> <character>  <character> #>   2L:121_2L:107      2L:121 2L:121:Tad_3      2L:107 2L:107:Tad_3 #>                 anchor.Beaf.score anchor.Beaf.name anchor.Beaf.bln #>                         <numeric>           <list>       <numeric> #>   2L:121_2L:107               484        Beaf32_15               1 #>                 bait.Tss.class           bait.Tss.name bait.Tss.bln #>                    <character>                  <list>    <numeric> #>   2L:121_2L:107         active FBgn0026787,FBgn0005278            1 #>   ------- #>   regions: 429 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome #> attr(,\"target\") #> attr(,\"target\")$anchor.Beaf.name #> [1] \"Beaf32_8\"  \"Beaf32_15\" #>  #> attr(,\"target\")$bait.Tss.name #> [1] \"FBgn0031214\" \"FBgn0005278\" #>  #> attr(,\"target\")$name #> [1] \"2L:74_2L:77\" #>  #> attr(,\"target\")$distance #> function(columnElement){ #>     return(14000==columnElement || columnElement == 3000) #>     } #> <environment: 0x5652be20aa98> #>  #> attr(,\"selection\") #> function(){ #>   Reduce(intersect, list(anchor.Beaf.name, bait.Tss.name ,distance) ) |> #>   setdiff(name) #> } #> <environment: 0x5652be20aa98> #> attr(,\"resolution\") #> [1] 1000 #> attr(,\"referencePoint\") #> [1] \"pf\" #> attr(,\"matriceDim\") #> [1] 41  # Extraction on InteractionSet with InteractionsSet target.lst <- list(interactions = attributes(submatrixPF_Ctrl.mtx_lst)$interactions[1:2]) FilterInteractions(   interarctions.gni = attributes(submatrixPF_Ctrl.mtx_lst)$interactions,   target.lst        = target.lst,   selection.fun     = NULL ) #> interactions1 interactions2  #>             1             2   # Extraction on InteractionSet list and with GRanges gRangesTarget.gnr <- attributes(submatrixPF_Ctrl.mtx_lst)$interactions |>  InteractionSet::anchors() target.lst <- list(     first =        gRangesTarget.gnr[[\"first\"]][1:2] ) FilterInteractions(   interarctions.gni = attributes(submatrixPF_Ctrl.mtx_lst)$interactions,   target.lst        = target.lst,   selection.fun     = NULL ) #> first1 first2  #>      1      2"},{"path":"/reference/GetQuantif.html","id":null,"dir":"Reference","previous_headings":"","what":"GetQuantif — GetQuantif","title":"GetQuantif — GetQuantif","text":"Compute function matrix compose matrices list.","code":""},{"path":"/reference/GetQuantif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetQuantif — GetQuantif","text":"","code":"GetQuantif(   matrices.lst,   area.fun = \"center\",   operation.fun = \"mean_rm0\",   name.chr = NULL )"},{"path":"/reference/GetQuantif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetQuantif — GetQuantif","text":"matrices.lst <List[matrix]> : matrices list. area.fun <character function> : character function thaht alow extraction area matrix compose matrices lits (Default \"center\"). \"mean_rm0\" : apply mean replace 0 NA \"median_rm0\" : apply median replace 0 NA \"sum_rm0\" : apply sum replace 0 NA \"median\" : apply median \"sum\" : apply sum \"mean\" character :  apply mean operation.fun <character function> : character function applt  extracted area matrix compose matrices lits (Default \"mean_rm0\"). \"C\" \"CENTER\" : Take area interaction anchor bait. \"UL\" \"UPPER_LEFT\" : Take area interaction uppper left square \"UR\" \"UPPER_RIGHT\" : Take area interaction uppper right square \"BL\" \"BOTTOM_LEFT\" : Take area interaction bottom left square \"BR\" \"BOTTOM_RIGHT\" : Take area interaction bottom right square \"U\" \"UPPER\" : Take area interaction center area \"B\" \"BOTTOM\" : Take area interaction center area \"L\" \"LEFT\" : Take area interaction left center area \"R\" \"RIGHT\" : Take area interaction right center area \"D\" \"DONUT\" : Take area interaction surround center area name.chr <character> : name column GInteraction attributes matrices.lst used named output (Default NULL).","code":""},{"path":"/reference/GetQuantif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetQuantif — GetQuantif","text":"GRange object.","code":""},{"path":"/reference/GetQuantif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GetQuantif — GetQuantif","text":"","code":"library(GenomicED) data(\"submatrixRF_Ctrl.mtx_lst\") GetQuantif(   matrices.lst  = submatrixRF_Ctrl.mtx_lst,   area.fun      = \"center\",   operation.fun = \"mean\"   ) #> $`2L:74_2L:77` #> [1] 0.002752447 #>  #> $`2L:107_2L:115` #> [1] 0.004792452 #>  #> $`2L:107_2L:121` #> [1] 1.01102 #>  #> $`2L:117_2L:121` #> [1] 0.03643152 #>  #> $`2L:268_2L:274` #> [1] 1.69169 #>  #> $`2L:268_2L:278` #> [1] 1.483054 #>  #> $`2L:274_2L:279` #> [1] 1.699314 #>  #> $`2L:306_2L:320` #> [1] 0.6724637 #>  #> $`2L:422_2L:471` #> [1] 0.3981305 #>  #> $`2L:422_2L:472` #> [1] 0.2917365 #>  #> $`2L:454_2L:471` #> [1] 0.4176653 #>  #> $`2L:454_2L:472` #> [1] 0.07697316 #>  #> $`2L:1165_2L:1174` #> [1] 0.1933935 #>  #> $`2L:1174_2L:1178` #> [1] 1.97396 #>  #> $`2L:2493_2L:2534` #> [1] 0.1509465 #>  #> $`2L:2494_2L:2534` #> [1] 0.1147519 #>  #> $`2L:2654_2L:2678` #> [1] 0.03862693 #>  #> $`2L:2771_2L:2805` #> [1] 0.1995228 #>  #> $`2L:2771_2L:2806` #> [1] 0.1731242 #>  #> $`2L:2980_2L:2993` #> [1] 1.403238 #>  #> $`2L:2988_2L:2993` #> [1] 1.966797 #>  #> $`2L:2989_2L:2993` #> [1] 2.430412 #>  #> $`2L:3160_2L:3164` #> [1] 0 #>  #> $`2L:3333_2L:3347` #> [1] 0.04267804 #>  #> $`2L:3333_2L:3349` #> [1] 0.8697373 #>  #> $`2L:3333_2L:3355` #> [1] 0.1149894 #>  #> $`2L:3718_2L:3731` #> [1] 0.005324978 #>  #> $`2L:4404_2L:4434` #> [1] 0.706205 #>  #> $`2L:4466_2L:4477` #> [1] 0.8661045 #>  #> $`2L:4466_2L:4478` #> [1] 0.08887885 #>  #> $`2L:4980_2L:4999` #> [1] 0.5829616 #>  #> $`2L:5052_2L:5059` #> [1] 0.01361992 #>  #> $`2L:5059_2L:5071` #> [1] 0.07153248 #>  #> $`2L:5060_2L:5071` #> [1] 0 #>  #> $`2L:5071_2L:5094` #> [1] 0.2870154 #>  #> $`2L:5521_2L:5529` #> [1] 0.08567937 #>  #> $`2L:5521_2L:5533` #> [1] 0.07505932 #>  #> $`2L:5526_2L:5529` #> [1] 0.07977823 #>  #> $`2L:5526_2L:5533` #> [1] 0.03038824 #>  #> $`2L:5527_2L:5533` #> [1] 0.5756298 #>  #> $`2L:5566_2L:5725` #> [1] 0.6408698 #>  #> $`2L:5616_2L:5725` #> [1] 0.1162785 #>  #> $`2L:5633_2L:5725` #> [1] 0.3059426 #>  #> $`2L:5908_2L:5941` #> [1] 0.3542089 #>  #> $`2L:5909_2L:5941` #> [1] 0.1871565 #>  #> $`2L:5944_2L:5968` #> [1] 0 #>  #> $`2L:5945_2L:5968` #> [1] 0 #>  #> $`2L:6051_2L:6069` #> [1] 0.5279512 #>  #> $`2L:6066_2L:6069` #> [1] 2.139299 #>  #> $`2L:6071_2L:6084` #> [1] 0.1096642 #>  #> $`2L:6071_2L:6089` #> [1] 0.1007996 #>  #> $`2L:6499_2L:6509` #> [1] 1.630512 #>  #> $`2L:6724_2L:6743` #> [1] 0.1687783 #>  #> $`2L:6908_2L:6915` #> [1] 0.134238 #>  #> $`2L:6908_2L:6919` #> [1] 0.08672329 #>  #> $`2L:7033_2L:7038` #> [1] 1.703114 #>  #> $`2L:7033_2L:7039` #> [1] 1.601052 #>  #> $`2L:7066_2L:7085` #> [1] 0.4551538 #>  #> $`2L:7066_2L:7156` #> [1] 0.09590472 #>  #> $`2L:7085_2L:7179` #> [1] 0.9786903 #>  #> $`2L:7156_2L:7179` #> [1] 0.4174838 #>  #> $`2L:7812_2L:7828` #> [1] 0.8693823 #>  #> $`2L:8125_2L:8128` #> [1] 0.06835569 #>  #> $`2L:8242_2L:8279` #> [1] 0.6649474 #>  #> $`2L:8240_2L:8243` #> [1] 0.002060519 #>  #> $`2L:8243_2L:8279` #> [1] 0.8386224 #>  #> $`2L:8687_2L:8710` #> [1] 0.1404249 #>  #> $`2L:8694_2L:8710` #> [1] 0.04914559 #>  #> $`2L:9760_2L:9764` #> [1] 0.912675 #>  #> $`2L:9764_2L:9780` #> [1] 0.1105858 #>  #> $`2L:9764_2L:9783` #> [1] 0.1230102 #>  #> $`2L:9760_2L:9776` #> [1] 0.6786809 #>  #> $`2L:9776_2L:9780` #> [1] 0.008095992 #>  #> $`2L:9776_2L:9783` #> [1] 0.08259367 #>  #> $`2L:9985_2L:10003` #> [1] 0.2712008 #>  #> $`2L:10233_2L:10248` #> [1] 0.02951273 #>  #> $`2L:10387_2L:10394` #> [1] 0.1361494 #>  #> $`2L:10388_2L:10394` #> [1] 0.09456354 #>  #> $`2L:10389_2L:10394` #> [1] 0.009158009 #>  #> $`2L:10394_2L:10397` #> [1] 0.1372137 #>  #> $`2L:10696_2L:10729` #> [1] 0 #>  #> $`2L:10702_2L:10729` #> [1] 0.1690664 #>  #> $`2L:10729_2L:10738` #> [1] 0.02811435 #>  #> $`2L:10730_2L:10738` #> [1] 0 #>  #> $`2L:11949_2L:11989` #> [1] 0.07958475 #>  #> $`2L:11989_2L:12006` #> [1] 0.2831623 #>  #> $`2L:11949_2L:12000` #> [1] 0.004800573 #>  #> $`2L:11990_2L:12000` #> [1] 0.03047268 #>  #> $`2L:11991_2L:12000` #> [1] 0.3249912 #>  #> $`2L:12000_2L:12006` #> [1] 1.986563 #>  #> $`2L:11949_2L:12026` #> [1] 0 #>  #> $`2L:11990_2L:12026` #> [1] 0.05402907 #>  #> $`2L:11991_2L:12026` #> [1] 0.2037945 #>  #> $`2L:12006_2L:12026` #> [1] 0.3690407 #>  #> $`2L:12431_2L:12435` #> [1] 0.8919457 #>  #> $`2L:12498_2L:12515` #> [1] 0 #>  #> $`2L:12498_2L:12516` #> [1] 0 #>  #> $`2L:12508_2L:12515` #> [1] 0.4756325 #>  #> $`2L:12508_2L:12516` #> [1] 0.02889891 #>  #> $`2L:12509_2L:12515` #> [1] 0.1061493 #>  #> attr(,\"interactions\") #> GInteractions object with 100 interactions and 15 metadata columns: #>                     seqnames1           ranges1     seqnames2           ranges2 #>                         <Rle>         <IRanges>         <Rle>         <IRanges> #>         2L:74_2L:77        2L       73001-74000 ---        2L       76001-77000 #>       2L:115_2L:107        2L     114001-115000 ---        2L     106001-107000 #>       2L:121_2L:107        2L     120001-121000 ---        2L     106001-107000 #>       2L:121_2L:117        2L     120001-121000 ---        2L     116001-117000 #>       2L:274_2L:268        2L     273001-274000 ---        2L     267001-268000 #>                 ...       ...               ... ...       ...               ... #>   2L:12515_2L:12498        2L 12514001-12515000 ---        2L 12497001-12498000 #>   2L:12516_2L:12498        2L 12515001-12516000 ---        2L 12497001-12498000 #>   2L:12515_2L:12508        2L 12514001-12515000 ---        2L 12507001-12508000 #>   2L:12516_2L:12508        2L 12515001-12516000 ---        2L 12507001-12508000 #>   2L:12515_2L:12509        2L 12514001-12515000 ---        2L 12508001-12509000 #>                     |              name  constraint  distance orientation #>                     |       <character> <character> <integer>   <logical> #>         2L:74_2L:77 |       2L:74_2L:77       Tad_1      3000        TRUE #>       2L:115_2L:107 |     2L:115_2L:107       Tad_3      8000       FALSE #>       2L:121_2L:107 |     2L:121_2L:107       Tad_3     14000       FALSE #>       2L:121_2L:117 |     2L:121_2L:117       Tad_3      4000       FALSE #>       2L:274_2L:268 |     2L:274_2L:268      Tad_10      6000       FALSE #>                 ... .               ...         ...       ...         ... #>   2L:12515_2L:12498 | 2L:12515_2L:12498     Tad_310     17000       FALSE #>   2L:12516_2L:12498 | 2L:12516_2L:12498     Tad_310     18000       FALSE #>   2L:12515_2L:12508 | 2L:12515_2L:12508     Tad_310      7000       FALSE #>   2L:12516_2L:12508 | 2L:12516_2L:12508     Tad_310      8000       FALSE #>   2L:12515_2L:12509 | 2L:12515_2L:12509     Tad_310      6000       FALSE #>                        submatrix.name  anchor.bin      anchor.name    bait.bin #>                           <character> <character>      <character> <character> #>         2L:74_2L:77       2L:74_2L:77       2L:74      2L:74:Tad_1       2L:77 #>       2L:115_2L:107     2L:107_2L:115      2L:115     2L:115:Tad_3      2L:107 #>       2L:121_2L:107     2L:107_2L:121      2L:121     2L:121:Tad_3      2L:107 #>       2L:121_2L:117     2L:117_2L:121      2L:121     2L:121:Tad_3      2L:117 #>       2L:274_2L:268     2L:268_2L:274      2L:274    2L:274:Tad_10      2L:268 #>                 ...               ...         ...              ...         ... #>   2L:12515_2L:12498 2L:12498_2L:12515    2L:12515 2L:12515:Tad_310    2L:12498 #>   2L:12516_2L:12498 2L:12498_2L:12516    2L:12516 2L:12516:Tad_310    2L:12498 #>   2L:12515_2L:12508 2L:12508_2L:12515    2L:12515 2L:12515:Tad_310    2L:12508 #>   2L:12516_2L:12508 2L:12508_2L:12516    2L:12516 2L:12516:Tad_310    2L:12508 #>   2L:12515_2L:12509 2L:12509_2L:12515    2L:12515 2L:12515:Tad_310    2L:12509 #>                            bait.name anchor.Beaf.score anchor.Beaf.name #>                          <character>         <numeric>           <list> #>         2L:74_2L:77      2L:77:Tad_1               205         Beaf32_8 #>       2L:115_2L:107     2L:107:Tad_3              1707        Beaf32_14 #>       2L:121_2L:107     2L:107:Tad_3               484        Beaf32_15 #>       2L:121_2L:117     2L:117:Tad_3               484        Beaf32_15 #>       2L:274_2L:268    2L:268:Tad_10               210        Beaf32_39 #>                 ...              ...               ...              ... #>   2L:12515_2L:12498 2L:12498:Tad_310                44       Beaf32_900 #>   2L:12516_2L:12498 2L:12498:Tad_310                88       Beaf32_901 #>   2L:12515_2L:12508 2L:12508:Tad_310                44       Beaf32_900 #>   2L:12516_2L:12508 2L:12508:Tad_310                88       Beaf32_901 #>   2L:12515_2L:12509 2L:12509:Tad_310                44       Beaf32_900 #>                     anchor.Beaf.bln bait.Tss.class           bait.Tss.name #>                           <numeric>    <character>                  <list> #>         2L:74_2L:77               1       inactive             FBgn0031214 #>       2L:115_2L:107               1         active FBgn0026787,FBgn0005278 #>       2L:121_2L:107               1         active FBgn0026787,FBgn0005278 #>       2L:121_2L:117               1         active             FBgn0031219 #>       2L:274_2L:268               1       inactive             FBgn0031239 #>                 ...             ...            ...                     ... #>   2L:12515_2L:12498               1       inactive             FBgn0051858 #>   2L:12516_2L:12498               1       inactive             FBgn0051858 #>   2L:12515_2L:12508               1       inactive             FBgn0262353 #>   2L:12516_2L:12508               1       inactive             FBgn0262353 #>   2L:12515_2L:12509               1       inactive             FBgn0263458 #>                     bait.Tss.bln #>                        <numeric> #>         2L:74_2L:77            1 #>       2L:115_2L:107            1 #>       2L:121_2L:107            1 #>       2L:121_2L:117            1 #>       2L:274_2L:268            1 #>                 ...          ... #>   2L:12515_2L:12498            1 #>   2L:12516_2L:12498            1 #>   2L:12515_2L:12508            1 #>   2L:12516_2L:12508            1 #>   2L:12515_2L:12509            1 #>   ------- #>   regions: 429 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome #> attr(,\"target\") #> attr(,\"target\")$submatrix.name #>   [1] \"2L:74_2L:77\"       \"2L:107_2L:115\"     \"2L:107_2L:121\"     #>   [4] \"2L:117_2L:121\"     \"2L:268_2L:274\"     \"2L:268_2L:278\"     #>   [7] \"2L:274_2L:279\"     \"2L:306_2L:320\"     \"2L:422_2L:471\"     #>  [10] \"2L:422_2L:472\"     \"2L:454_2L:471\"     \"2L:454_2L:472\"     #>  [13] \"2L:1165_2L:1174\"   \"2L:1174_2L:1178\"   \"2L:2493_2L:2534\"   #>  [16] \"2L:2494_2L:2534\"   \"2L:2654_2L:2678\"   \"2L:2771_2L:2805\"   #>  [19] \"2L:2771_2L:2806\"   \"2L:2980_2L:2993\"   \"2L:2988_2L:2993\"   #>  [22] \"2L:2989_2L:2993\"   \"2L:3160_2L:3164\"   \"2L:3333_2L:3347\"   #>  [25] \"2L:3333_2L:3349\"   \"2L:3333_2L:3355\"   \"2L:3718_2L:3731\"   #>  [28] \"2L:4404_2L:4434\"   \"2L:4466_2L:4477\"   \"2L:4466_2L:4478\"   #>  [31] \"2L:4980_2L:4999\"   \"2L:5052_2L:5059\"   \"2L:5059_2L:5071\"   #>  [34] \"2L:5060_2L:5071\"   \"2L:5071_2L:5094\"   \"2L:5521_2L:5529\"   #>  [37] \"2L:5521_2L:5533\"   \"2L:5526_2L:5529\"   \"2L:5526_2L:5533\"   #>  [40] \"2L:5527_2L:5533\"   \"2L:5566_2L:5725\"   \"2L:5616_2L:5725\"   #>  [43] \"2L:5633_2L:5725\"   \"2L:5908_2L:5941\"   \"2L:5909_2L:5941\"   #>  [46] \"2L:5944_2L:5968\"   \"2L:5945_2L:5968\"   \"2L:6051_2L:6069\"   #>  [49] \"2L:6066_2L:6069\"   \"2L:6071_2L:6084\"   \"2L:6071_2L:6089\"   #>  [52] \"2L:6499_2L:6509\"   \"2L:6724_2L:6743\"   \"2L:6908_2L:6915\"   #>  [55] \"2L:6908_2L:6919\"   \"2L:7033_2L:7038\"   \"2L:7033_2L:7039\"   #>  [58] \"2L:7066_2L:7085\"   \"2L:7066_2L:7156\"   \"2L:7085_2L:7179\"   #>  [61] \"2L:7156_2L:7179\"   \"2L:7812_2L:7828\"   \"2L:8125_2L:8128\"   #>  [64] \"2L:8242_2L:8279\"   \"2L:8240_2L:8243\"   \"2L:8243_2L:8279\"   #>  [67] \"2L:8687_2L:8710\"   \"2L:8694_2L:8710\"   \"2L:9760_2L:9764\"   #>  [70] \"2L:9764_2L:9780\"   \"2L:9764_2L:9783\"   \"2L:9760_2L:9776\"   #>  [73] \"2L:9776_2L:9780\"   \"2L:9776_2L:9783\"   \"2L:9985_2L:10003\"  #>  [76] \"2L:10233_2L:10248\" \"2L:10387_2L:10394\" \"2L:10388_2L:10394\" #>  [79] \"2L:10389_2L:10394\" \"2L:10394_2L:10397\" \"2L:10696_2L:10729\" #>  [82] \"2L:10702_2L:10729\" \"2L:10729_2L:10738\" \"2L:10730_2L:10738\" #>  [85] \"2L:11949_2L:11989\" \"2L:11989_2L:12006\" \"2L:11949_2L:12000\" #>  [88] \"2L:11990_2L:12000\" \"2L:11991_2L:12000\" \"2L:12000_2L:12006\" #>  [91] \"2L:11949_2L:12026\" \"2L:11990_2L:12026\" \"2L:11991_2L:12026\" #>  [94] \"2L:12006_2L:12026\" \"2L:12431_2L:12435\" \"2L:12498_2L:12515\" #>  [97] \"2L:12498_2L:12516\" \"2L:12508_2L:12515\" \"2L:12508_2L:12516\" #> [100] \"2L:12509_2L:12515\" #>  #> attr(,\"resolution\") #> [1] 1000 #> attr(,\"referencePoint\") #> [1] \"rf\" #> attr(,\"matriceDim\") #> [1] 101 #> attr(,\"shiftFactor\") #> [1] 1 #> attr(,\"operation\") #> function (x)  #> { #>     mean(x, na.rm = TRUE) #> } #> <environment: 0x5652a9feb2b8> #> attr(,\"area\") #> function (matrice.mtx)  #> { #>     matrice.mtx[33:35, 67:69] #> } #> <environment: 0x5652bf167848>"},{"path":"/reference/GnpToCm.html","id":null,"dir":"Reference","previous_headings":"","what":"GnpToCm — GnpToCm","title":"GnpToCm — GnpToCm","text":"Convert Pairs GRanges list ContactMatrix (matricies stored sparseMatrix format).","code":""},{"path":"/reference/GnpToCm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GnpToCm — GnpToCm","text":"","code":"GnpToCm(   hic.gnp = NULL,   res.num = NULL,   chromSize.dtf = NULL,   verbose.bln = TRUE,   cores.num = 1 )"},{"path":"/reference/GnpToCm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GnpToCm — GnpToCm","text":"hic.gnp <Pairs[GRanges]>: GRanges list GRanges GRangesList res.num <integer>: number resolution HiC. chromSize.dtf <data.frame>: data.frame genome first colum correspond chromosomes names, second column correspond chromosomes lengths base pairs. verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE) cores.num <integer> : integer specify number cores. (Default 1)","code":""},{"path":"/reference/GnpToCm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GnpToCm — GnpToCm","text":"list ContactMatrix.","code":""},{"path":"/reference/IndexFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"IndexFeatures — IndexFeatures","title":"IndexFeatures — IndexFeatures","text":"Bin multiple GRanges summary one GRange. overlap ranges constraints regions","code":""},{"path":"/reference/IndexFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IndexFeatures — IndexFeatures","text":"","code":"IndexFeatures(   gRange.gnr_lst = NULL,   constraint.gnr = NULL,   chromSize.dtf = NULL,   binSize.int = NULL,   method.chr = \"mean\",   variablesName.chr_vec = NULL,   cores.num = 1,   verbose.bln = TRUE )"},{"path":"/reference/IndexFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IndexFeatures — IndexFeatures","text":"gRange.gnr_lst <GRanges GRangesList list[GRanges]>: GRanges list GRanges GRangesList constraint.gnr <GRanges>: GRange constraint regions. NULL chromosomes chromSize.dtf used (Default NULL) chromSize.dtf <data.frame>: data.frame genome first colum correspond chromosomes names, second column correspond chromosomes lengths base pairs. binSize.int <integer>: number specify width bins. method.chr <character>: string summary method name 'mean', 'median', 'sum', 'max, 'min'. (Default 'mean'') variablesName.chr_vec <character> : character vector specify metadata columns GRanges apply summary method. cores.num <integer> : integer specify number cores. (Default 1) verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE)","code":""},{"path":"/reference/IndexFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IndexFeatures — IndexFeatures","text":"GRange object.","code":""},{"path":"/reference/IndexFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"IndexFeatures — IndexFeatures","text":"","code":"library(GenomicED) data(\"anchors_Peaks.gnr\") seqlengths.num <- c('2L'=23513712, '2R'=25286936) chromSize.dtf  <- data.frame(   seqnames   = names(seqlengths.num ),    seqlengths = seqlengths.num   ) binSize.num <- 1000 anchors_Peaks.gnr #> GRanges object with 600 ranges and 2 metadata columns: #>         seqnames            ranges strand |     score        name #>            <Rle>         <IRanges>  <Rle> | <numeric> <character> #>     [1]       2L       35594-35725      * |        76    Beaf32_2 #>     [2]       2L       47296-47470      * |        44    Beaf32_3 #>     [3]       2L       65770-65971      * |       520    Beaf32_5 #>     [4]       2L       73858-74052      * |       205    Beaf32_8 #>     [5]       2L     102138-102684      * |      1830   Beaf32_11 #>     ...      ...               ...    ... .       ...         ... #>   [596]       2R 24687286-24687440      * |        37 Beaf32_2943 #>   [597]       2R 24874870-24875019      * |        82 Beaf32_2958 #>   [598]       2R 24944555-24944686      * |        48 Beaf32_2966 #>   [599]       2R 24969405-24969744      * |      1068 Beaf32_2971 #>   [600]       2R 25038610-25038711      * |        76 Beaf32_2975 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths anchors_Index.gnr <- IndexFeatures(   gRange.gnr_lst        = list(Beaf=anchors_Peaks.gnr),    constraint.gnr        = domains.gnr,   chromSize.dtf         = chromSize.dtf,   binSize.int           = binSize.num,   method.chr            = \"max\",   variablesName.chr_vec = \"score\",   cores.num             = 1,   verbose.bln           = FALSE   ) anchors_Index.gnr #> GRanges object with 635 ranges and 6 metadata columns: #>         seqnames            ranges strand |              name         bin #>            <Rle>         <IRanges>  <Rle> |       <character> <character> #>     [1]       2L       73001-74000      * |       2L:74:Tad_1       2L:74 #>     [2]       2L       74001-75000      * |       2L:75:Tad_1       2L:75 #>     [3]       2L     102001-103000      * |      2L:103:Tad_2      2L:103 #>     [4]       2L     114001-115000      * |      2L:115:Tad_3      2L:115 #>     [5]       2L     120001-121000      * |      2L:121:Tad_3      2L:121 #>     ...      ...               ...    ... .               ...         ... #>   [631]       2R 24687001-24688000      * | 2R:24688:Tad_1041    2R:24688 #>   [632]       2R 24874001-24875000      * | 2R:24875:Tad_1048    2R:24875 #>   [633]       2R 24875001-24876000      * | 2R:24876:Tad_1048    2R:24876 #>   [634]       2R 24944001-24945000      * | 2R:24945:Tad_1051    2R:24945 #>   [635]       2R 24969001-24970000      * | 2R:24970:Tad_1053    2R:24970 #>          constraint Beaf.score   Beaf.name  Beaf.bln #>         <character>  <numeric>      <list> <numeric> #>     [1]       Tad_1        205    Beaf32_8         1 #>     [2]       Tad_1        205    Beaf32_8         1 #>     [3]       Tad_2       1830   Beaf32_11         1 #>     [4]       Tad_3       1707   Beaf32_14         1 #>     [5]       Tad_3        484   Beaf32_15         1 #>     ...         ...        ...         ...       ... #>   [631]    Tad_1041         37 Beaf32_2943         1 #>   [632]    Tad_1048         82 Beaf32_2958         1 #>   [633]    Tad_1048         82 Beaf32_2958         1 #>   [634]    Tad_1051         48 Beaf32_2966         1 #>   [635]    Tad_1053       1068 Beaf32_2971         1 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome"},{"path":"/reference/OrienteMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"OrienteMatrix — OrienteMatrix","title":"OrienteMatrix — OrienteMatrix","text":"Apply 180° rotation follow transposation matrix matricies list according interactions attributes list.","code":""},{"path":"/reference/OrienteMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OrienteMatrix — OrienteMatrix","text":"","code":"OrienteMatrix(matrice.mtx)"},{"path":"/reference/OrienteMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OrienteMatrix — OrienteMatrix","text":"matrice.mtx <matrix List[matrix]>: matrix matricies list oriente","code":""},{"path":"/reference/OrienteMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OrienteMatrix — OrienteMatrix","text":"Oriented matrix matricies list","code":""},{"path":"/reference/OrienteMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OrienteMatrix — OrienteMatrix","text":"","code":"library(GenomicED) data(\"submatrixPF_Ctrl.mtx_lst\") submatrixPF_Ctrl_oriented.mtx_lst <- OrienteMatrix(submatrixPF_Ctrl.mtx_lst)"},{"path":"/reference/PlotAPA.html","id":null,"dir":"Reference","previous_headings":"","what":"DrawAPA — PlotAPA","title":"DrawAPA — PlotAPA","text":"Draw aggregation plot aggregation matrices.","code":""},{"path":"/reference/PlotAPA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DrawAPA — PlotAPA","text":"","code":"PlotAPA(   apa.mtx = NULL,   trimPrct.num = 0,   minBoundary.num = NULL,   center.num = NULL,   maxBoundary.num = NULL,   minConditionBoundary.num = NULL,   maxConditionBoundary.num = NULL )"},{"path":"/reference/PlotAPA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DrawAPA — PlotAPA","text":"apa.mtx <matrix>: aggregated matrix. trimPrct.num <numeric>: number 0 100 thaht give percentage triming matrices. minBoundary.num <matrix>: minimal value color scale. Null automaticaly find. center.num <matrix>: middle value color scale. Null automaticaly find. maxBoundary.num <matrix>: mximal value color scale. Null automaticaly find. minConditionBoundary.num <matrix>: Avalaible plotting differantial aggregation. minimal value color scale classsical aggregation plot. Null automaticaly find. maxConditionBoundary.num <matrix>: Avalaible plotting differantial aggregation. maxiaml value color scale classsical aggregation plot. Null automaticaly find.","code":""},{"path":"/reference/PlotAPA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DrawAPA — PlotAPA","text":"None","code":""},{"path":"/reference/PlotAPA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DrawAPA — PlotAPA","text":"","code":"library(GenomicED) data(aggreg.mtx) PlotAPA(     apa.mtx                  = aggreg.mtx,     trimPrct.num             = 20,     minBoundary.num          = -2,     center.num               = 0,     maxBoundary.num          = 2,     minConditionBoundary.num = 0,     maxConditionBoundary.num = 2 )"},{"path":"/reference/SearchPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"SearchPairs — SearchPairs","title":"SearchPairs — SearchPairs","text":"Compute pairs genomic features share range constraintes.","code":""},{"path":"/reference/SearchPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SearchPairs — SearchPairs","text":"","code":"SearchPairs(   indexAnchor.gnr = NULL,   indexBait.gnr = NULL,   minDist.num = NULL,   maxDist.num = NULL,   verbose.bln = TRUE,   cores.num = 1 )"},{"path":"/reference/SearchPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SearchPairs — SearchPairs","text":"indexAnchor.gnr <GRanges>: GRanges used first part pairs. indexBait.gnr <GRanges>: GRanges used second part pars. NULL replace indexAnchor.gnr (Default NULL) minDist.num <numeric>: minimal distance first second parts pairs. (Default NULL) maxDist.num <numeric>: maximal distance first second parts pairs. (Default NULL) verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE) cores.num <integer> : integer specify number cores. (Default 1)","code":""},{"path":"/reference/SearchPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SearchPairs — SearchPairs","text":"GInteractions object.","code":""},{"path":"/reference/SearchPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SearchPairs — SearchPairs","text":"","code":"library(GenomicED) data(anchors_Index.gnr) data(baits_Index.gnr) interactions.gni <- SearchPairs(     indexAnchor.gnr = anchors_Index.gnr,     indexBait.gnr   = baits_Index.gnr,     minDist.num     = NULL,      maxDist.num     = NULL,     cores.num       = 1,     verbose.bln     = FALSE     ) interactions.gni #> GInteractions object with 351 interactions and 15 metadata columns: #>                     seqnames1           ranges1     seqnames2           ranges2 #>                         <Rle>         <IRanges>         <Rle>         <IRanges> #>         2L:74_2L:77        2L       73001-74000 ---        2L       76001-77000 #>         2L:75_2L:77        2L       74001-75000 ---        2L       76001-77000 #>       2L:115_2L:107        2L     114001-115000 ---        2L     106001-107000 #>       2L:121_2L:107        2L     120001-121000 ---        2L     106001-107000 #>       2L:115_2L:117        2L     114001-115000 ---        2L     116001-117000 #>                 ...       ...               ... ...       ...               ... #>   2R:24023_2R:24018        2R 24022001-24023000 ---        2R 24017001-24018000 #>   2R:24875_2R:24882        2R 24874001-24875000 ---        2R 24881001-24882000 #>   2R:24876_2R:24882        2R 24875001-24876000 ---        2R 24881001-24882000 #>   2R:24970_2R:24974        2R 24969001-24970000 ---        2R 24973001-24974000 #>   2R:24970_2R:24976        2R 24969001-24970000 ---        2R 24975001-24976000 #>                     |              name  constraint  distance orientation #>                     |       <character> <character> <integer>   <logical> #>         2L:74_2L:77 |       2L:74_2L:77       Tad_1      3000        TRUE #>         2L:75_2L:77 |       2L:75_2L:77       Tad_1      2000        TRUE #>       2L:115_2L:107 |     2L:115_2L:107       Tad_3      8000       FALSE #>       2L:121_2L:107 |     2L:121_2L:107       Tad_3     14000       FALSE #>       2L:115_2L:117 |     2L:115_2L:117       Tad_3      2000        TRUE #>                 ... .               ...         ...       ...         ... #>   2R:24023_2R:24018 | 2R:24023_2R:24018    Tad_1017      5000       FALSE #>   2R:24875_2R:24882 | 2R:24875_2R:24882    Tad_1048      7000        TRUE #>   2R:24876_2R:24882 | 2R:24876_2R:24882    Tad_1048      6000        TRUE #>   2R:24970_2R:24974 | 2R:24970_2R:24974    Tad_1053      4000        TRUE #>   2R:24970_2R:24976 | 2R:24970_2R:24976    Tad_1053      6000        TRUE #>                        submatrix.name  anchor.bin       anchor.name    bait.bin #>                           <character> <character>       <character> <character> #>         2L:74_2L:77       2L:74_2L:77       2L:74       2L:74:Tad_1       2L:77 #>         2L:75_2L:77       2L:75_2L:77       2L:75       2L:75:Tad_1       2L:77 #>       2L:115_2L:107     2L:107_2L:115      2L:115      2L:115:Tad_3      2L:107 #>       2L:121_2L:107     2L:107_2L:121      2L:121      2L:121:Tad_3      2L:107 #>       2L:115_2L:117     2L:115_2L:117      2L:115      2L:115:Tad_3      2L:117 #>                 ...               ...         ...               ...         ... #>   2R:24023_2R:24018 2R:24018_2R:24023    2R:24023 2R:24023:Tad_1017    2R:24018 #>   2R:24875_2R:24882 2R:24875_2R:24882    2R:24875 2R:24875:Tad_1048    2R:24882 #>   2R:24876_2R:24882 2R:24876_2R:24882    2R:24876 2R:24876:Tad_1048    2R:24882 #>   2R:24970_2R:24974 2R:24970_2R:24974    2R:24970 2R:24970:Tad_1053    2R:24974 #>   2R:24970_2R:24976 2R:24970_2R:24976    2R:24970 2R:24970:Tad_1053    2R:24976 #>                             bait.name anchor.Beaf.score anchor.Beaf.name #>                           <character>         <numeric>           <list> #>         2L:74_2L:77       2L:77:Tad_1               205         Beaf32_8 #>         2L:75_2L:77       2L:77:Tad_1               205         Beaf32_8 #>       2L:115_2L:107      2L:107:Tad_3              1707        Beaf32_14 #>       2L:121_2L:107      2L:107:Tad_3               484        Beaf32_15 #>       2L:115_2L:117      2L:117:Tad_3              1707        Beaf32_14 #>                 ...               ...               ...              ... #>   2R:24023_2R:24018 2R:24018:Tad_1017               221      Beaf32_2870 #>   2R:24875_2R:24882 2R:24882:Tad_1048                82      Beaf32_2958 #>   2R:24876_2R:24882 2R:24882:Tad_1048                82      Beaf32_2958 #>   2R:24970_2R:24974 2R:24974:Tad_1053              1068      Beaf32_2971 #>   2R:24970_2R:24976 2R:24976:Tad_1053              1068      Beaf32_2971 #>                     anchor.Beaf.bln bait.Tss.class           bait.Tss.name #>                           <numeric>    <character>                  <list> #>         2L:74_2L:77               1       inactive             FBgn0031214 #>         2L:75_2L:77               1       inactive             FBgn0031214 #>       2L:115_2L:107               1         active FBgn0026787,FBgn0005278 #>       2L:121_2L:107               1         active FBgn0026787,FBgn0005278 #>       2L:115_2L:117               1         active             FBgn0031219 #>                 ...             ...            ...                     ... #>   2R:24023_2R:24018               1       inactive             FBgn0034956 #>   2R:24875_2R:24882               1       inactive             FBgn0263443 #>   2R:24876_2R:24882               1       inactive             FBgn0263443 #>   2R:24970_2R:24974               1       inactive             FBgn0035089 #>   2R:24970_2R:24976               1       inactive             FBgn0035090 #>                     bait.Tss.bln #>                        <numeric> #>         2L:74_2L:77            1 #>         2L:75_2L:77            1 #>       2L:115_2L:107            1 #>       2L:121_2L:107            1 #>       2L:115_2L:117            1 #>                 ...          ... #>   2R:24023_2R:24018            1 #>   2R:24875_2R:24882            1 #>   2R:24876_2R:24882            1 #>   2R:24970_2R:24974            1 #>   2R:24970_2R:24976            1 #>   ------- #>   regions: 429 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome"},{"path":"/reference/compound.html","id":null,"dir":"Reference","previous_headings":"","what":"Assignment pipe — %<>%","title":"Assignment pipe — %<>%","text":"See magrittr::%<>% details.","code":""},{"path":"/reference/compound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assignment pipe — %<>%","text":"","code":"lhs %<>% rhs"},{"path":"/reference/compound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assignment pipe — %<>%","text":"lhs object serves initial value target. rhs function call using magrittr semantics.","code":""},{"path":"/reference/compound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assignment pipe — %<>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/ggAPA.html","id":null,"dir":"Reference","previous_headings":"","what":"ggAPA — ggAPA","title":"ggAPA — ggAPA","text":"Create ggplot object used plot aggragation.","code":""},{"path":"/reference/ggAPA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggAPA — ggAPA","text":"","code":"ggAPA(   apa.mtx = NULL,   title.chr = NULL,   trimPrct.num = 0,   bounds.chr = \"both\",   minBoundary.num = NULL,   center.num = NULL,   maxBoundary.num = NULL,   colBreaks.num = NULL,   blurPass.num = 0,   blurBox.num = NULL,   blurSize.num = NULL,   blurSd.num = 0.5,   lowerTri.num = NULL,   heatmap.col = NULL,   na.col = \"#F2F2F2\",   colorScale.chr = \"linear\",   bias.num = 1,   paletteLength.num = 51 )"},{"path":"/reference/ggAPA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggAPA — ggAPA","text":"apa.mtx <matrix> : matrix plot. (Default NULL) title.chr <character> : title plot. (Default NULL) trimPrct.num <numeric> : number 0 100 give percentage trimming. (Default 0) bounds.chr <character> : boundary must trim, , trim half percentage inferior superior see SuperTK::QtlThreshold. (Default \"\") minBoundary.num <numeric> : Minimal value Heatmap, force color range. Null automaticaly find. (Default NULL) center.num <numeric> : Center value Heatmap, force color range. Null automaticaly find. (Default NULL) maxBoundary.num <numeric> : Maximal value Heatmap, force color range. Null automaticaly find. (Default NULL) colBreaks.num <numeric> : Repartition colors. Null automaticaly find. (Default NULL) blurPass.num <numeric> : Number blur pass. (Default 0) blurBox.num <numeric> : null automaticaly compute 3 Sd. (Default NULL) blurSize.num <numeric> : Size box applied blurr null automaticaly compute 3 Sd. (Default NULL) blurSd.num <numeric> : SD gaussian smooth. (Default 0.5) lowerTri.num <numeric> : value replace value lower triangle matrice (Usefull blur apply). (Default NULL) heatmap.col <character> : Heatmap color list. null automaticaly compute. (Default NULL) na.col <character> : color NA values. (Default \"#F2F2F2\") colorScale.chr <character> :  shape color scale \"linear\" \"density\" based. (Default \"linear\") bias.num <numeric> : positive number.  Higher values give widely spaced colors high end. See ?grDevices::colorRamp details. (Default 1) paletteLength.num <numeric> : number color palette. (Default 51)","code":""},{"path":"/reference/ggAPA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggAPA — ggAPA","text":"ggplot object.","code":""},{"path":"/reference/ggAPA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggAPA — ggAPA","text":"","code":"library(GenomicED) data(aggreg.mtx) ggAPA(     apa.mtx    = aggreg.mtx,     title.chr  = \"APA center on 0.2\",     center.num = 0,     trimPrct.num = 5,     bounds.chr   = \"both\",     blurPass.num      = 1,     blurSd.num        = 0.5,     heatmap.col = SuperTK::viridis(6) )"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""}]

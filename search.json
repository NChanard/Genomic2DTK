[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Genomic2DTK authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"installation","dir":"Articles","previous_headings":"Requirements","what":"Installation","title":"Genomic2DTK - Quick start","text":"","code":"remotes::install_github(\"NChanard/Genomic2DTK\")"},{"path":"/articles/Genomic2DTK.html","id":"load-library","dir":"Articles","previous_headings":"Requirements","what":"Load library","title":"Genomic2DTK - Quick start","text":"","code":"library(Genomic2DTK)"},{"path":[]},{"path":"/articles/Genomic2DTK.html","id":"description","dir":"Articles","previous_headings":"Test dataset","what":"Description","title":"Genomic2DTK - Quick start","text":"Data obtained Drosophila melanogaster S2 cells. HiC test dataset: Directly downloaded 4DN platform. Genomic coordinates: ChIPseq peaks Beaf-32 protein wild type cells (GSM1278639).","code":""},{"path":"/articles/Genomic2DTK.html","id":"genomic-3d-structure","dir":"Articles","previous_headings":"Test dataset","what":"Genomic 3D structure","title":"Genomic2DTK - Quick start","text":"test, download HiC data .hic format (Juicer).","code":"options(timeout = 3600)  temp.dir <- file.path(tempdir(), \"HIC_DATA\") dir.create(temp.dir)  Hic.url <- \"https://4dn-open-data-public.s3.amazonaws.com/fourfront-webprod/wfoutput/7386f953-8da9-47b0-acb2-931cba810544/4DNFIOTPSS3L.hic\" HicOutput.pth <- file.path(temp.dir, \"Control_HIC.hic\") download.file(Hic.url, HicOutput.pth, method = 'curl', extra = '-k')"},{"path":"/articles/Genomic2DTK.html","id":"genomic-location-and-annotation-data","dir":"Articles","previous_headings":"Test dataset","what":"Genomic location and annotation data","title":"Genomic2DTK - Quick start","text":"kind data can imported R rtracklayer package.","code":"data(\"Beaf32_Peaks.gnr\")"},{"path":"/articles/Genomic2DTK.html","id":"additional-genome-informations","dir":"Articles","previous_headings":"Test dataset","what":"Additional genome informations","title":"Genomic2DTK - Quick start","text":"Required genomic informations used functions entire pipeline data.frame containing chromosomes names sized binSize, corresponding HiC matrices resolution.","code":"seqlengths.num <- c('2L'=23513712, '2R'=25286936) chromSize.dtf  <- data.frame(     seqnames   = names(seqlengths.num ),      seqlengths = seqlengths.num     ) binSize.num <- 1000"},{"path":"/articles/Genomic2DTK.html","id":"import-hic","dir":"Articles","previous_headings":"","what":"1 Import HiC","title":"Genomic2DTK - Quick start","text":"package supports import normalization HiC data.","code":""},{"path":"/articles/Genomic2DTK.html","id":"import","dir":"Articles","previous_headings":"1 Import HiC","what":"Import","title":"Genomic2DTK - Quick start","text":"Genomic2DTK can import HiC data stored main formats: .hic, .cool, .mcool, .h5, .hdf5. pacakage imports raw counts R. Therefore necessary perform balancing observed/expected correction steps.","code":"hic.cmx_lst <- ImportHiC(     file.pth      = HicOutput.pth,     res.num       = binSize.num,     chrom_1.chr   = c(\"2L\", \"2R\")     )"},{"path":"/articles/Genomic2DTK.html","id":"balancing","dir":"Articles","previous_headings":"1 Import HiC","what":"Balancing","title":"Genomic2DTK - Quick start","text":"","code":"hic.cmx_lst <- BalanceHiC(hic.cmx_lst) #> No trans matrix, Normalisation won't be applied on trans matrices"},{"path":"/articles/Genomic2DTK.html","id":"observedexpected-correction","dir":"Articles","previous_headings":"1 Import HiC","what":"Observed/Expected Correction","title":"Genomic2DTK - Quick start","text":"","code":"hic.cmx_lst <- OverExpectedHiC(hic.cmx_lst)"},{"path":"/articles/Genomic2DTK.html","id":"import-genomic-coordinates","dir":"Articles","previous_headings":"","what":"2 Import genomic coordinates","title":"Genomic2DTK - Quick start","text":"Genomic coordinates data (ChIP seq peaks feature) need indexed using referenced genome HiC data. genomic coordinates paired GInteraction objects.","code":""},{"path":"/articles/Genomic2DTK.html","id":"features-indexing","dir":"Articles","previous_headings":"2 Import genomic coordinates","what":"Features Indexing","title":"Genomic2DTK - Quick start","text":"","code":"Beaf_Index.gnr <- IndexFeatures(     gRange.gnr_lst        = list(Beaf = Beaf32_Peaks.gnr),     chromSize.dtf         = chromSize.dtf,     binSize.num           = binSize.num     )"},{"path":"/articles/Genomic2DTK.html","id":"beaf32---beaf32-putatives","dir":"Articles","previous_headings":"2 Import genomic coordinates","what":"Beaf32 <-> Beaf32 putatives","title":"Genomic2DTK - Quick start","text":"Constraints distance interaction sites defined order limit number pairs.","code":"Beaf_Pairs.gni <- SearchPairs(     indexAnchor.gnr = Beaf_Index.gnr,     minDist.num     = \"25KB\",     maxDist.num     = \"100KB\"     )"},{"path":"/articles/Genomic2DTK.html","id":"submatrices-extractions","dir":"Articles","previous_headings":"","what":"3 Submatrices extractions","title":"Genomic2DTK - Quick start","text":"data imported, interactions extracted pairs genomic coordinates.","code":""},{"path":"/articles/Genomic2DTK.html","id":"extraction","dir":"Articles","previous_headings":"3 Submatrices extractions","what":"Extraction","title":"Genomic2DTK - Quick start","text":"","code":"Beaf.mtx_lst <- ExtractSubmatrix(     feature.gn  = Beaf_Pairs.gni,     hic.cmx_lst = hic.cmx_lst     )"},{"path":"/articles/Genomic2DTK.html","id":"plot-and-visualization","dir":"Articles","previous_headings":"","what":"4 Plot and visualization","title":"Genomic2DTK - Quick start","text":"Submatrices aggregated sum, average median. , aggregated matrix plotted heatmap contact frequencies (example, contacts surounding Beaf-32 sites).","code":""},{"path":"/articles/Genomic2DTK.html","id":"aggregation","dir":"Articles","previous_headings":"4 Plot and visualization","what":"Aggregation","title":"Genomic2DTK - Quick start","text":"","code":"aggreg.mtx <- Aggregation(Beaf.mtx_lst)"},{"path":"/articles/Genomic2DTK.html","id":"visulatisation","dir":"Articles","previous_headings":"4 Plot and visualization","what":"Visulatisation","title":"Genomic2DTK - Quick start","text":"","code":"ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA Beaf <-> Beaf\"     )"},{"path":"/articles/Genomic2DTK.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Genomic2DTK - Quick start","text":"","code":"sessionInfo() #> R version 4.2.2 (2022-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.1 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] Genomic2DTK_0.99.0          InteractionSet_1.24.0       #>  [3] SummarizedExperiment_1.26.1 Biobase_2.56.0              #>  [5] MatrixGenerics_1.8.1        matrixStats_0.63.0          #>  [7] GenomicRanges_1.48.0        GenomeInfoDb_1.32.4         #>  [9] IRanges_2.30.1              S4Vectors_0.34.0            #> [11] BiocGenerics_0.42.0         #>  #> loaded via a namespace (and not attached): #>  [1] Rcpp_1.0.9             lattice_0.20-45        tidyr_1.2.1            #>  [4] rprojroot_2.0.3        digest_0.6.30          utf8_1.2.2             #>  [7] R6_2.5.1               evaluate_0.18          ggplot2_3.4.0          #> [10] highr_0.9              pillar_1.8.1           zlibbioc_1.42.0        #> [13] rlang_1.0.6            jquerylib_0.1.4        Matrix_1.5-1           #> [16] rmarkdown_2.18         pkgdown_2.0.6          labeling_0.4.2         #> [19] textshaping_0.3.6      desc_1.4.2             BiocParallel_1.30.4    #> [22] stringr_1.5.0          munsell_0.5.0          RCurl_1.98-1.9         #> [25] DelayedArray_0.22.0    compiler_4.2.2         xfun_0.35              #> [28] pkgconfig_2.0.3        systemfonts_1.0.4      strawr_0.0.9           #> [31] htmltools_0.5.3        tidyselect_1.2.0       tibble_3.1.8           #> [34] GenomeInfoDbData_1.2.8 codetools_0.2-18       fansi_1.0.3            #> [37] dplyr_1.0.10           withr_2.5.0            bitops_1.0-7           #> [40] grid_4.2.2             gtable_0.3.1           jsonlite_1.8.3         #> [43] lifecycle_1.0.3        magrittr_2.0.3         scales_1.2.1           #> [46] cli_3.4.1              stringi_1.7.8          cachem_1.0.6           #> [49] farver_2.1.1           XVector_0.36.0         fs_1.5.2               #> [52] bslib_0.4.1            ellipsis_0.3.2         ragg_1.2.4             #> [55] generics_0.1.3         vctrs_0.5.1            tools_4.2.2            #> [58] glue_1.6.2             purrr_0.3.5            parallel_4.2.2         #> [61] fastmap_1.1.0          yaml_2.3.6             colorspace_2.0-3       #> [64] memoise_2.0.1          knitr_1.41             sass_0.4.4"},{"path":"/articles/InDepth.html","id":"library","dir":"Articles","previous_headings":"","what":"Library","title":"Genomic2DTK - In depth tutorial","text":"Genomic2DTK package allows perform aggregation analyses. first step, analyses consist extracting 3D conformation data specific genome loci. , second step, aggregate extracted signal loci visualize . tutorial see quickly perform type analysis. However, invite closer look documentation articles present depth possibilities Genomic2DTK allows example exploration quantification signal single locus performance differential analysis.","code":""},{"path":"/articles/InDepth.html","id":"install-libraries","dir":"Articles","previous_headings":"Library","what":"Install libraries","title":"Genomic2DTK - In depth tutorial","text":"","code":"remotes::install_github(\"NChanard/Genomic2DTK\")"},{"path":"/articles/InDepth.html","id":"load-libraries","dir":"Articles","previous_headings":"Library","what":"Load libraries","title":"Genomic2DTK - In depth tutorial","text":"","code":"library(Genomic2DTK) #> Loading required package: InteractionSet #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: 'BiocGenerics' #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from 'package:base': #>  #>     anyDuplicated, append, as.data.frame, basename, cbind, colnames, #>     dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, #>     grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget, #>     order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, #>     rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, #>     union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: 'S4Vectors' #> The following objects are masked from 'package:base': #>  #>     expand.grid, I, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: 'MatrixGenerics' #> The following objects are masked from 'package:matrixStats': #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: 'Biobase' #> The following object is masked from 'package:MatrixGenerics': #>  #>     rowMedians #> The following objects are masked from 'package:matrixStats': #>  #>     anyMissing, rowMedians"},{"path":"/articles/InDepth.html","id":"test-dataset","dir":"Articles","previous_headings":"","what":"Test dataset","title":"Genomic2DTK - In depth tutorial","text":"testing dataset obtained Drosophila melanogaster S2 cells. first part data provided directly package consist genomic location data (ChIP-seq annotations). part testing dataset downloaded directly 4DN platform consists 3D structure data genome (HiC maps two different conditions).","code":""},{"path":[]},{"path":"/articles/InDepth.html","id":"chip-seq-peaks","dir":"Articles","previous_headings":"Test dataset > Genomic location and annotation data","what":"ChIP-seq peaks","title":"Genomic2DTK - In depth tutorial","text":"Subset ChIP-seq peaks Beaf-32 protein wild type condition GRanges format (bed). kind data import R rtracklayer package.","code":"data(\"Beaf32_Peaks.gnr\")"},{"path":"/articles/InDepth.html","id":"reference-annontation","dir":"Articles","previous_headings":"Test dataset > Genomic location and annotation data","what":"Reference annontation","title":"Genomic2DTK - In depth tutorial","text":"Data UCSC data base.","code":"data(\"TSS_Peaks.gnr\")"},{"path":"/articles/InDepth.html","id":"domains-annotation","dir":"Articles","previous_headings":"Test dataset > Genomic location and annotation data","what":"Domains annotation","title":"Genomic2DTK - In depth tutorial","text":"Data TAD calling HIC data wild type (bed bedpe format) (F. Ramirez, 2018).","code":"data(\"TADs_Domains.gnr\")"},{"path":"/articles/InDepth.html","id":"genomic-3d-structure","dir":"Articles","previous_headings":"Test dataset","what":"Genomic 3D structure","title":"Genomic2DTK - In depth tutorial","text":"second part test data downloaded directly 4DN platform. consists data HiC experiments .hic .mcool format conditions (Control Heat shock)","code":""},{"path":"/articles/InDepth.html","id":"prepare-temp-directory","dir":"Articles","previous_headings":"Test dataset > Genomic 3D structure","what":"Prepare Temp Directory","title":"Genomic2DTK - In depth tutorial","text":"","code":"options(timeout = 3600) temp.dir <- file.path(tempdir(), \"HIC_DATA\") dir.create(temp.dir)"},{"path":"/articles/InDepth.html","id":"download-and-import-control-condition--hic-file","dir":"Articles","previous_headings":"Test dataset > Genomic 3D structure","what":"Download and Import control condition (.hic File)","title":"Genomic2DTK - In depth tutorial","text":"","code":"Hic.url <- \"https://4dn-open-data-public.s3.amazonaws.com/fourfront-webprod/wfoutput/7386f953-8da9-47b0-acb2-931cba810544/4DNFIOTPSS3L.hic\" HicOutput.pth <- file.path(temp.dir, \"Control_HIC.hic\") download.file(Hic.url, HicOutput.pth, method = 'curl', extra = '-k')  HiC_Ctrl.cmx_lst <- ImportHiC(         file.pth    = HicOutput.pth,         res.num     = 1000,         chrom_1.chr = c(\"2L\", \"2L\", \"2R\"),         chrom_2.chr = c(\"2L\", \"2R\", \"2R\") )"},{"path":"/articles/InDepth.html","id":"download-and-import-heat-shock-condition--mcool-file","dir":"Articles","previous_headings":"Test dataset > Genomic 3D structure","what":"Download and Import Heat shock condition (.mcool File)","title":"Genomic2DTK - In depth tutorial","text":"","code":"Mcool.url <- \"https://4dn-open-data-public.s3.amazonaws.com/fourfront-webprod/wfoutput/4f1479a2-4226-4163-ba99-837f2c8f4ac0/4DNFI8DRD739.mcool\" McoolOutput.pth <- file.path(temp.dir, \"HeatShock_HIC.mcool\") download.file(Mcool.url, McoolOutput.pth, method = \"curl\", extra = \"-k\")  HiC_HS.cmx_lst <- ImportHiC(         file.pth    = McoolOutput.pth,         res.num     = 1000,         chrom_1.chr = c(\"2L\", \"2L\", \"2R\"),         chrom_2.chr = c(\"2L\", \"2R\", \"2R\") )"},{"path":"/articles/InDepth.html","id":"hic-data-format-contactmatrix-list-cmx_lst-structure","dir":"Articles","previous_headings":"Test dataset > Genomic 3D structure","what":"HiC data format: ContactMatrix list (cmx_lst) structure","title":"Genomic2DTK - In depth tutorial","text":"element list corresponds ContactMatrix object (dgCMatrix object, sparse matrix format) storing contact frequencies one chromosomes (cis-interactions, ex: “2L_2L”) two chromosomes (trans-interactions, ex: “2L_2R”). HiC data format based InteractionSet package, details sparse matrices format, see Matrix. list object generals attributes. attributes accessed via: names : names list elements (ContactMatrix). resolution : resolution HiC map. chromSize : size chromosomes tibble format. - seqnames : sequence name (chromosome name). - seqlengths : sequence length base pairs. - dimension : sequence length base bins matricesKind : kind matrix composes list tibble format. - name : matrix name. - type : interaction type. “Cis” interactions chromosome “Trans” interactions different chromosomes. - kind : matrix kind. U upper triangle matrices, L lower triangle matrices, NA rectangular square matrices. - symmetric : boolean indicates whether matrix symmetric (lower triangle identical upper triangle). mtx : kind values matrix. exemple observed counts, normalized counts, observed/expected, etc. expected : attributes relatives OverExpectedHiC function give tiblle expected count function genomic distance contactmatrix list metadata. accessed via: name : name ContactMatrix. type : interaction type. “Cis” interactions chromosome “Trans” interactions different chromosomes. kind : matrix kind. U upper triangle matrices, L lower triangle matrices, NA rectangular square symmetric : boolean indicates whether matrix symmetric (lower triangle identical upper triangle). resolution : resolution HiC map. removedCounts : sparse matrix (dgCMatrix) counts removed beacause low count row low count columns. observed : raw observed counts sparse matrix. normalizer : balancer vector apply raw observed counts obtaine normalized counts. (observed * normalizer = normalized counts). mtx : kind values matrix. exemple observed counts, normalized counts, observed/expected, etc. expected : attributes relatives OverExpectedHiC function give expected vector apply normalized counts obtaine observed/expected counts. (normalized counts/expected = observed/expected).","code":"str(HiC_Ctrl.cmx_lst,max.level = 4) #> List of 3 #>  $ 2L_2L:Formal class 'ContactMatrix' [package \"InteractionSet\"] with 5 slots #>   .. ..@ matrix  :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ anchor1 : int [1:23514] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..@ anchor2 : int [1:23514] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..@ regions :Formal class 'GRanges' [package \"GenomicRanges\"] with 7 slots #>   .. ..@ metadata:List of 5 #>   .. .. ..$ name      : chr \"2L_2L\" #>   .. .. ..$ type      : chr \"cis\" #>   .. .. ..$ kind      : chr \"U\" #>   .. .. ..$ symmetric : logi TRUE #>   .. .. ..$ resolution: num 1000 #>  $ 2L_2R:Formal class 'ContactMatrix' [package \"InteractionSet\"] with 5 slots #>   .. ..@ matrix  :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ anchor1 : int [1:23514] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..@ anchor2 : int [1:25287] 23515 23516 23517 23518 23519 23520 23521 23522 23523 23524 ... #>   .. ..@ regions :Formal class 'GRanges' [package \"GenomicRanges\"] with 7 slots #>   .. ..@ metadata:List of 5 #>   .. .. ..$ name      : chr \"2L_2R\" #>   .. .. ..$ type      : chr \"trans\" #>   .. .. ..$ kind      : chr NA #>   .. .. ..$ symmetric : logi FALSE #>   .. .. ..$ resolution: num 1000 #>  $ 2R_2R:Formal class 'ContactMatrix' [package \"InteractionSet\"] with 5 slots #>   .. ..@ matrix  :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ anchor1 : int [1:25287] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..@ anchor2 : int [1:25287] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..@ regions :Formal class 'GRanges' [package \"GenomicRanges\"] with 7 slots #>   .. ..@ metadata:List of 5 #>   .. .. ..$ name      : chr \"2R_2R\" #>   .. .. ..$ type      : chr \"cis\" #>   .. .. ..$ kind      : chr \"U\" #>   .. .. ..$ symmetric : logi TRUE #>   .. .. ..$ resolution: num 1000 #>  - attr(*, \"resolution\")= num 1000 #>  - attr(*, \"chromSize\")= tibble [2 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ name     : chr [1:2] \"2L\" \"2R\" #>   ..$ length   : num [1:2] 23513712 25286936 #>   ..$ dimension: num [1:2] 23514 25287 #>  - attr(*, \"matricesKind\")= tibble [3 × 4] (S3: tbl_df/tbl/data.frame) #>   ..$ name     : chr [1:3] \"2L_2L\" \"2L_2R\" \"2R_2R\" #>   ..$ type     : chr [1:3] \"cis\" \"trans\" \"cis\" #>   ..$ kind     : chr [1:3] \"U\" NA \"U\" #>   ..$ symmetric: logi [1:3] TRUE FALSE TRUE #>  - attr(*, \"mtx\")= chr \"obs\" #> attributes(HiC_Ctrl.cmx_lst) #> $names #> [1] \"2L_2L\" \"2L_2R\" \"2R_2R\" #>  #> $resolution #> [1] 1000 #>  #> $chromSize #> # A tibble: 2 × 3 #>   name    length dimension #>   <chr>    <dbl>     <dbl> #> 1 2L    23513712     23514 #> 2 2R    25286936     25287 #>  #> $matricesKind #> # A tibble: 3 × 4 #>   name  type  kind  symmetric #>   <chr> <chr> <chr> <lgl>     #> 1 2L_2L cis   U     TRUE      #> 2 2L_2R trans NA    FALSE     #> 3 2R_2R cis   U     TRUE      #>  #> $mtx #> [1] \"obs\" #> S4Vectors::metadata(HiC_Ctrl.cmx_lst[[\"2L_2L\"]]) #> $name #> [1] \"2L_2L\" #>  #> $type #> [1] \"cis\" #>  #> $kind #> [1] \"U\" #>  #> $symmetric #> [1] TRUE #>  #> $resolution #> [1] 1000 #>"},{"path":"/articles/InDepth.html","id":"additional-genome-informations","dir":"Articles","previous_headings":"Test dataset","what":"Additional genome informations","title":"Genomic2DTK - In depth tutorial","text":"General genomic informations used functions along process data.frame containing chromosomes names sized binSize, corresponding HiC matrices resolution. complete data 2L 2R chromosome sizes HiC map resolution.","code":"seqlengths.num <- c('2L'=23513712, '2R'=25286936) chromSize.dtf  <- data.frame(     seqnames   = names(seqlengths.num ),      seqlengths = seqlengths.num     ) binSize.num <- 1000"},{"path":[]},{"path":"/articles/InDepth.html","id":"balancing","dir":"Articles","previous_headings":"HiC Preprocess","what":"Balancing","title":"Genomic2DTK - In depth tutorial","text":"Genomic2TK forces import R environment raw counts matrix, thus necessary perform balancing step (Defaut: Iterative Correction) makes possible correct biases inherent loci balancing sums line column make comparable.","code":"HiC_Ctrl.cmx_lst <- BalanceHiC(HiC_Ctrl.cmx_lst) HiC_HS.cmx_lst <- BalanceHiC(HiC_HS.cmx_lst)"},{"path":"/articles/InDepth.html","id":"tips","dir":"Articles","previous_headings":"HiC Preprocess > Balancing","what":"Tips","title":"Genomic2DTK - In depth tutorial","text":"interaction.type parameter paste “cis” “trans” function return kind chunks contact matrix list. kind removed result. interaction.type parameter paste c(“cis”,“trans”) function normalize separetly “cis” chunks “trans”. paste “” chunks normalized together.","code":""},{"path":"/articles/InDepth.html","id":"expected","dir":"Articles","previous_headings":"HiC Preprocess","what":"Expected","title":"Genomic2DTK - In depth tutorial","text":"bias inherent loci corrected, bias due genomic distance two loci must corrected. , matrix corrected expected values genomic distance.","code":"HiC_Ctrl.cmx_lst <- OverExpectedHiC(HiC_Ctrl.cmx_lst) HiC_HS.cmx_lst <- OverExpectedHiC(HiC_HS.cmx_lst)"},{"path":"/articles/InDepth.html","id":"indexing","dir":"Articles","previous_headings":"","what":"Indexing","title":"Genomic2DTK - In depth tutorial","text":"part data corresponds positioning data genome. integrate HiC data, represented 2D matrices, data processed way. first step indexing features genome. step allows features splitted grouped bins correspond resolution HiC matrix.","code":""},{"path":"/articles/InDepth.html","id":"indexing-example-1-anchors-from-beaf32-chip-seq-binding-sites-peak-calling-output-bed-file","dir":"Articles","previous_headings":"Indexing","what":"Indexing example 1: Anchors from Beaf32 ChIP-seq binding sites (peak calling output bed file)","title":"Genomic2DTK - In depth tutorial","text":"","code":"anchors_Index.gnr <- IndexFeatures(     gRange.gnr_lst        = list(Beaf=Beaf32_Peaks.gnr),      constraint.gnr        = TADs_Domains.gnr,     chromSize.dtf         = chromSize.dtf,     binSize.num           = binSize.num,     variablesName.chr_vec = \"score\",     method.chr            = \"max\"     )"},{"path":"/articles/InDepth.html","id":"indexing-example-2-baits-from-tss-transcription-start-sites-reference-annotation","dir":"Articles","previous_headings":"Indexing","what":"Indexing example 2: Baits from TSS (transcription start sites reference annotation)","title":"Genomic2DTK - In depth tutorial","text":"","code":"baits_Index.gnr <- IndexFeatures(     gRange.gnr_lst        = list(Tss=TSS_Peaks.gnr),     constraint.gnr        = TADs_Domains.gnr,     chromSize.dtf         = chromSize.dtf,     binSize.num           = binSize.num,     variablesName.chr_vec = \"score\",     method.chr            = \"max\"     )"},{"path":"/articles/InDepth.html","id":"filter-or-subset-indexed-features","dir":"Articles","previous_headings":"Indexing","what":"Filter or subset indexed features:","title":"Genomic2DTK - In depth tutorial","text":"using features names bin IDs, possible filter subset indexed features. Example: Subset indexed TSS bin indexed Beaf32 peak.","code":"non_Overlaps.ndx <- NotIn(baits_Index.gnr$bin,anchors_Index.gnr$bin) baits_Index.gnr <- baits_Index.gnr[non_Overlaps.ndx,]"},{"path":"/articles/InDepth.html","id":"tips-1","dir":"Articles","previous_headings":"Indexing","what":"Tips","title":"Genomic2DTK - In depth tutorial","text":"possible index multiple features time submitting named list GRanges. Names given list GRanges used filter indexed features pairs. contraint.gnr set, anchors baits paired located within region . contraint.gnr NULL, chromosomes used constraints. multiples ranges bin (ex: 3 ChIP-seq peaks 10kb bin), associated numeric variables metadata (variablesName.chr_vec) can summarized according defined method (method.chr), Example: Maximum peak score bin kept metadata column score.","code":""},{"path":[]},{"path":"/articles/InDepth.html","id":"pairing","dir":"Articles","previous_headings":"Search Pairs","what":"Pairing","title":"Genomic2DTK - In depth tutorial","text":"SearchPairs function takes input one two indexed features returns putative pairs within constraint (ex: wihtin TAD). one indexed features set indexAnchor.gnr, SearchPairs return symetrical homotypic pairs <->, indexAnchor.gnr indexBait.gnr set, return asymetrical heterotypic pairs <->B","code":"interactions.gni <- SearchPairs(         indexAnchor.gnr = anchors_Index.gnr,         indexBait.gnr   = baits_Index.gnr         )"},{"path":"/articles/InDepth.html","id":"tips-2","dir":"Articles","previous_headings":"Search Pairs","what":"Tips","title":"Genomic2DTK - In depth tutorial","text":"indexBait.gnr NULL, SearchPairs return homotypic pairs indexAnchor.gnr. Minimum maximum distances pairs’ anchors can set. Note also possible filter pairs within specific distance following steps.","code":""},{"path":[]},{"path":[]},{"path":"/articles/InDepth.html","id":"interactions-defined-with-ginteraction-or-pairs-granges-","dir":"Articles","previous_headings":"Extractions > Case 1: Long-range interactions between two distal anchors.","what":"Interactions defined with GInteraction or Pairs GRanges.","title":"Genomic2DTK - In depth tutorial","text":"extracted matrices, middle Y axis corresponds center first element interact center second element middle X axis.","code":"interactions_PFmatrix.lst <- ExtractSubmatrix(     feature.gn         = interactions.gni,     hic.cmx_lst        = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"pf\",     matriceDim.num     = 41     )"},{"path":"/articles/InDepth.html","id":"interactions-defined-with-granges-","dir":"Articles","previous_headings":"Extractions > Case 1: Long-range interactions between two distal anchors.","what":"Interactions defined with GRanges.","title":"Genomic2DTK - In depth tutorial","text":"middle Y axis corresponds start range interact middle X axis corresponds end ranges.","code":"domains_PFmatrix.lst <- ExtractSubmatrix(     feature.gn         = TADs_Domains.gnr,     hic.cmx_lst        = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"pf\",     matriceDim.num     = 41     )"},{"path":"/articles/InDepth.html","id":"case-2-interactions-around-genomic-regions-or-domains-","dir":"Articles","previous_headings":"Extractions","what":"Case 2: Interactions around genomic regions or domains.","title":"Genomic2DTK - In depth tutorial","text":"case, extracted matrices resized scaled order fit regions number bins.","code":""},{"path":"/articles/InDepth.html","id":"regions-defined-with-ginteraction-object-or-pairs-granges","dir":"Articles","previous_headings":"Extractions > Case 2: Interactions around genomic regions or domains.","what":"Regions defined with GInteraction object or Pairs GRanges","title":"Genomic2DTK - In depth tutorial","text":"region’s start defined center first element region’s end center second element.","code":"interactions_RFmatrix_ctrl.lst  <- ExtractSubmatrix(     feature.gn         = interactions.gni,     hic.cmx_lst        = HiC_Ctrl.cmx_lst,     res.num            = NULL,     referencePoint.chr = \"rf\",     matriceDim.num     = 101     )"},{"path":"/articles/InDepth.html","id":"regions-defined-with-granges","dir":"Articles","previous_headings":"Extractions > Case 2: Interactions around genomic regions or domains.","what":"Regions defined with GRanges","title":"Genomic2DTK - In depth tutorial","text":"regions directly defined ranges GRanges object.","code":"domains_RFmatrix.lst <- ExtractSubmatrix(     feature.gn         = TADs_Domains.gnr,     hic.cmx_lst        = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"rf\",     matriceDim.num     = 101,     cores.num          = 1,     verbose.bln        = FALSE     )"},{"path":[]},{"path":"/articles/InDepth.html","id":"example-with-tad","dir":"Articles","previous_headings":"Extractions > Case 3: Interactions along the diagonal.","what":"Example with TAD:","title":"Genomic2DTK - In depth tutorial","text":"Step 1: generate GRanges object TAD boundaries concatenating starts ends TADs. Step 2: Filter reduce TAD boundaries GRanges object according HiC resolution (binSize) + Store TAD names.    Now GRanges object. exemples need informations GInteraction object.","code":"domains_Border.gnr <- c(         GenomicRanges::resize(TADs_Domains.gnr, 1, \"start\"),         GenomicRanges::resize(TADs_Domains.gnr, 1,  \"end\" ) ) |> sort() domains_Border_Bin.gnr <- BinGRanges(     gRange.gnr  = domains_Border.gnr,     binSize.num = binSize.num,     verbose.bln = FALSE     ) domains_Border_Bin.gnr$subname <- domains_Border_Bin.gnr$name domains_Border_Bin.gnr$name    <- domains_Border_Bin.gnr$bin domains_Border_Bin.gnr domains_Border_Bin.gni <- InteractionSet::GInteractions(domains_Border_Bin.gnr,domains_Border_Bin.gnr)"},{"path":"/articles/InDepth.html","id":"ponctual-interactions-defined-with-granges","dir":"Articles","previous_headings":"Extractions > Case 3: Interactions along the diagonal.","what":"Ponctual interactions defined with GRanges","title":"Genomic2DTK - In depth tutorial","text":"start end ranges bin.","code":"border_PFmatrix.lst <- ExtractSubmatrix(     feature.gn         = domains_Border_Bin.gnr,     hic.cmx_lst        = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"pf\",     matriceDim.num     = 101 )"},{"path":"/articles/InDepth.html","id":"ponctual-interactions-defined-with-ginteractions","dir":"Articles","previous_headings":"Extractions > Case 3: Interactions along the diagonal.","what":"Ponctual interactions defined with GInteractions","title":"Genomic2DTK - In depth tutorial","text":"first element (blue scheme) bin second (red scheme).","code":"border_PFmatrix.lst <- ExtractSubmatrix(     feature.gn         = domains_Border_Bin.gni,     hic.cmx_lst        = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"pf\",     matriceDim.num     = 101 )"},{"path":"/articles/InDepth.html","id":"tips-3","dir":"Articles","previous_headings":"Extractions","what":"Tips","title":"Genomic2DTK - In depth tutorial","text":"res.num null, function heritates resolution hic.cmx_lst attributes. referencePoint.chr automatically set “pf” every anchors baits bin (Case Ex: Extraction submatrices around TAD boundaries).","code":""},{"path":"/articles/InDepth.html","id":"filtrations","dir":"Articles","previous_headings":"","what":"Filtrations","title":"Genomic2DTK - In depth tutorial","text":"modularity workflow allows user filter interactions, pairs extracted submatrices step analysis process. FilterInteractions() function takes input GInteraction object list submatrices, list defining targets filter selection function defining target elements filtered.","code":""},{"path":"/articles/InDepth.html","id":"target-list-definition","dir":"Articles","previous_headings":"Filtrations","what":"Target list definition:","title":"Genomic2DTK - In depth tutorial","text":"Target list must particular structure. First named list. name element must name column GInteraction want filter (attributes “interactions” matrices list want filter. element must character list match column function test row column return bolean. Interactions, pairs extracted submatrices filtered metadata elements inherited GRanges objects used SearchPairs(). metadata stored attributes submatrices list accessible follow:","code":"structureTarget.lst <- list(     first_colname_of_GInteraction  = c(\"value\"),     second_colname_of_GInteraction = function(eachElement){min_th<value && value<max_th}     ) attributes(interactions_RFmatrix_ctrl.lst)$interactions names(S4Vectors::mcols(attributes(interactions_RFmatrix_ctrl.lst)$interactions))"},{"path":"/articles/InDepth.html","id":"example-of-target-list","dir":"Articles","previous_headings":"Filtrations > Target list definition:","what":"Example of target list:","title":"Genomic2DTK - In depth tutorial","text":"example, Pairs filtered anchor.Beaf.name, bait.Tss.name, name (correpond submatrix IDs) distance. aim example filter Pairs submatrices : 1. “Beaf32_8” “Beaf32_15” anchor.Beaf.name 2. “FBgn0031214” “FBgn0005278” bait.Tss.name 3. distance exactly equal 14000 3000 exclude Pairs submatrices : 4. “2L:74_2L:77” name","code":"target.lst <- list(     anchor.Beaf.name = c(\"Beaf32_8\",\"Beaf32_15\"),     bait.Tss.name    = c(\"FBgn0031214\",\"FBgn0005278\"),     name             = c(\"2L:74_2L:77\"),     distance         = function(columnElement){         return(14000==columnElement || columnElement == 3000)         }     )"},{"path":"/articles/InDepth.html","id":"selection-function-definition","dir":"Articles","previous_headings":"Filtrations","what":"Selection Function definition:","title":"Genomic2DTK - In depth tutorial","text":"selection function defines operations (union(), intersect(), setdiff()…) done filter set Pairs target elements. operation examples, see Selection function tips examples section.","code":""},{"path":"/articles/InDepth.html","id":"example-of-selection-function-according-to-the-example-target","dir":"Articles","previous_headings":"Filtrations > Selection Function definition:","what":"Example of selection function according to the example target","title":"Genomic2DTK - In depth tutorial","text":"Following example case defined target.lst","code":"selection.fun = function(){     Reduce(intersect, list(anchor.Beaf.name, bait.Tss.name ,distance) ) |>     setdiff(name)     }"},{"path":[]},{"path":"/articles/InDepth.html","id":"example-of-ginteraction-object-filtration","dir":"Articles","previous_headings":"Filtrations > Filtration with selection","what":"Example of GInteraction object filtration","title":"Genomic2DTK - In depth tutorial","text":"GInteraction object input, FilterInteractions() return indices filtered elements. target.lst selection.fun defined :","code":"FilterInteractions(     interarctions.gni = attributes(interactions_RFmatrix_ctrl.lst)$interactions,     target.lst        = target.lst,     selection.fun     = selection.fun     ) #> [1] 3"},{"path":"/articles/InDepth.html","id":"example-of-matrices-list-filtration","dir":"Articles","previous_headings":"Filtrations > Filtration with selection","what":"Example of Matrices list filtration","title":"Genomic2DTK - In depth tutorial","text":"matrices list input, FilterInteractions() return filtered matrices list, updated attributes. target.lst selection.fun defined :","code":"filtred_interactions_RFmatrix_ctrl.lst <- FilterInteractions(     matrices.lst  = interactions_RFmatrix_ctrl.lst,     target.lst    = target.lst,     selection.fun = selection.fun     )"},{"path":"/articles/InDepth.html","id":"specific-case-1-only-one-target-and-no-selection","dir":"Articles","previous_headings":"Filtrations","what":"Specific case 1: Only one target and no selection","title":"Genomic2DTK - In depth tutorial","text":"example, want filter top 100 first elements, target 100 first names","code":"first100_target.lst = list(     submatrix.name = names(interactions_RFmatrix_ctrl.lst)[1:100]     )"},{"path":"/articles/InDepth.html","id":"ginteraction-filtration","dir":"Articles","previous_headings":"Filtrations > Specific case 1: Only one target and no selection","what":"GInteraction filtration","title":"Genomic2DTK - In depth tutorial","text":"","code":"FilterInteractions(     interarctions.gni = attributes(interactions_RFmatrix_ctrl.lst)$interactions,     target.lst        = first100_target.lst,     selection.fun     = NULL     ) |> head() #> submatrix.name1 submatrix.name2 submatrix.name3 submatrix.name4 submatrix.name5  #>               1               2               3               4               5  #> submatrix.name6  #>               6"},{"path":"/articles/InDepth.html","id":"matrices-list-filtration","dir":"Articles","previous_headings":"Filtrations > Specific case 1: Only one target and no selection","what":"Matrices list filtration","title":"Genomic2DTK - In depth tutorial","text":"Warning! selection matrices removes attributes.","code":"first100_interactions_RFmatrix_ctrl.lst <- FilterInteractions(     matrices.lst  = interactions_RFmatrix_ctrl.lst,     target.lst    = first100_target.lst,     selection.fun = NULL     ) attributes(first100_interactions_RFmatrix_ctrl.lst)$interactions #> GInteractions object with 100 interactions and 15 metadata columns: #>                     seqnames1           ranges1     seqnames2           ranges2 #>                         <Rle>         <IRanges>         <Rle>         <IRanges> #>         2L:74_2L:77        2L       73001-74000 ---        2L       76001-77000 #>       2L:115_2L:107        2L     114001-115000 ---        2L     106001-107000 #>       2L:121_2L:107        2L     120001-121000 ---        2L     106001-107000 #>       2L:121_2L:117        2L     120001-121000 ---        2L     116001-117000 #>       2L:274_2L:268        2L     273001-274000 ---        2L     267001-268000 #>                 ...       ...               ... ...       ...               ... #>   2L:12515_2L:12498        2L 12514001-12515000 ---        2L 12497001-12498000 #>   2L:12516_2L:12498        2L 12515001-12516000 ---        2L 12497001-12498000 #>   2L:12515_2L:12508        2L 12514001-12515000 ---        2L 12507001-12508000 #>   2L:12516_2L:12508        2L 12515001-12516000 ---        2L 12507001-12508000 #>   2L:12515_2L:12509        2L 12514001-12515000 ---        2L 12508001-12509000 #>                     |              name  constraint  distance orientation #>                     |       <character> <character> <integer>   <logical> #>         2L:74_2L:77 |       2L:74_2L:77       Tad_1      3000        TRUE #>       2L:115_2L:107 |     2L:115_2L:107       Tad_3      8000       FALSE #>       2L:121_2L:107 |     2L:121_2L:107       Tad_3     14000       FALSE #>       2L:121_2L:117 |     2L:121_2L:117       Tad_3      4000       FALSE #>       2L:274_2L:268 |     2L:274_2L:268      Tad_10      6000       FALSE #>                 ... .               ...         ...       ...         ... #>   2L:12515_2L:12498 | 2L:12515_2L:12498     Tad_310     17000       FALSE #>   2L:12516_2L:12498 | 2L:12516_2L:12498     Tad_310     18000       FALSE #>   2L:12515_2L:12508 | 2L:12515_2L:12508     Tad_310      7000       FALSE #>   2L:12516_2L:12508 | 2L:12516_2L:12508     Tad_310      8000       FALSE #>   2L:12515_2L:12509 | 2L:12515_2L:12509     Tad_310      6000       FALSE #>                        submatrix.name  anchor.bin      anchor.name    bait.bin #>                           <character> <character>      <character> <character> #>         2L:74_2L:77       2L:74_2L:77       2L:74      2L:74:Tad_1       2L:77 #>       2L:115_2L:107     2L:107_2L:115      2L:115     2L:115:Tad_3      2L:107 #>       2L:121_2L:107     2L:107_2L:121      2L:121     2L:121:Tad_3      2L:107 #>       2L:121_2L:117     2L:117_2L:121      2L:121     2L:121:Tad_3      2L:117 #>       2L:274_2L:268     2L:268_2L:274      2L:274    2L:274:Tad_10      2L:268 #>                 ...               ...         ...              ...         ... #>   2L:12515_2L:12498 2L:12498_2L:12515    2L:12515 2L:12515:Tad_310    2L:12498 #>   2L:12516_2L:12498 2L:12498_2L:12516    2L:12516 2L:12516:Tad_310    2L:12498 #>   2L:12515_2L:12508 2L:12508_2L:12515    2L:12515 2L:12515:Tad_310    2L:12508 #>   2L:12516_2L:12508 2L:12508_2L:12516    2L:12516 2L:12516:Tad_310    2L:12508 #>   2L:12515_2L:12509 2L:12509_2L:12515    2L:12515 2L:12515:Tad_310    2L:12509 #>                            bait.name anchor.Beaf.score anchor.Beaf.name #>                          <character>         <numeric>           <list> #>         2L:74_2L:77      2L:77:Tad_1               205         Beaf32_8 #>       2L:115_2L:107     2L:107:Tad_3              1707        Beaf32_14 #>       2L:121_2L:107     2L:107:Tad_3               484        Beaf32_15 #>       2L:121_2L:117     2L:117:Tad_3               484        Beaf32_15 #>       2L:274_2L:268    2L:268:Tad_10               210        Beaf32_39 #>                 ...              ...               ...              ... #>   2L:12515_2L:12498 2L:12498:Tad_310                44       Beaf32_900 #>   2L:12516_2L:12498 2L:12498:Tad_310                88       Beaf32_901 #>   2L:12515_2L:12508 2L:12508:Tad_310                44       Beaf32_900 #>   2L:12516_2L:12508 2L:12508:Tad_310                88       Beaf32_901 #>   2L:12515_2L:12509 2L:12509:Tad_310                44       Beaf32_900 #>                     anchor.Beaf.bln bait.Tss.class           bait.Tss.name #>                           <logical>         <list>                  <list> #>         2L:74_2L:77            TRUE       inactive             FBgn0031214 #>       2L:115_2L:107            TRUE         active FBgn0026787,FBgn0005278 #>       2L:121_2L:107            TRUE         active FBgn0026787,FBgn0005278 #>       2L:121_2L:117            TRUE         active             FBgn0031219 #>       2L:274_2L:268            TRUE       inactive             FBgn0031239 #>                 ...             ...            ...                     ... #>   2L:12515_2L:12498            TRUE       inactive             FBgn0051858 #>   2L:12516_2L:12498            TRUE       inactive             FBgn0051858 #>   2L:12515_2L:12508            TRUE       inactive             FBgn0262353 #>   2L:12516_2L:12508            TRUE       inactive             FBgn0262353 #>   2L:12515_2L:12509            TRUE       inactive             FBgn0263458 #>                     bait.Tss.bln #>                        <logical> #>         2L:74_2L:77         TRUE #>       2L:115_2L:107         TRUE #>       2L:121_2L:107         TRUE #>       2L:121_2L:117         TRUE #>       2L:274_2L:268         TRUE #>                 ...          ... #>   2L:12515_2L:12498         TRUE #>   2L:12516_2L:12498         TRUE #>   2L:12515_2L:12508         TRUE #>   2L:12516_2L:12508         TRUE #>   2L:12515_2L:12509         TRUE #>   ------- #>   regions: 429 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome attributes(interactions_RFmatrix_ctrl.lst[1:20])$interactions #> NULL"},{"path":"/articles/InDepth.html","id":"specific-case-2-sampling","dir":"Articles","previous_headings":"Filtrations","what":"Specific case 2: Sampling","title":"Genomic2DTK - In depth tutorial","text":"","code":"nSample.num = 3 set.seed(123) target.lst = list(name=sample(attributes(interactions_RFmatrix_ctrl.lst)$interactions$name,nSample.num))"},{"path":"/articles/InDepth.html","id":"ginteraction-sampling","dir":"Articles","previous_headings":"Filtrations > Specific case 2: Sampling","what":"GInteraction sampling","title":"Genomic2DTK - In depth tutorial","text":"","code":"FilterInteractions(     interarctions.gni = attributes(interactions_RFmatrix_ctrl.lst)$interactions,     target.lst        = target.lst,     selection.fun     = NULL     ) #> name1 name2 name3  #>    14   179   195"},{"path":"/articles/InDepth.html","id":"matrices-list-sampling","dir":"Articles","previous_headings":"Filtrations > Specific case 2: Sampling","what":"Matrices list sampling","title":"Genomic2DTK - In depth tutorial","text":"","code":"sampled_interactions_RFmatrix_ctrl.lst <- FilterInteractions(     matrices.lst  = interactions_RFmatrix_ctrl.lst,     target.lst    = target.lst,     selection.fun = NULL     ) attributes(sampled_interactions_RFmatrix_ctrl.lst)$interactions #> GInteractions object with 3 interactions and 15 metadata columns: #>                     seqnames1           ranges1     seqnames2           ranges2 #>                         <Rle>         <IRanges>         <Rle>         <IRanges> #>     2L:1178_2L:1174        2L   1177001-1178000 ---        2L   1173001-1174000 #>   2L:21574_2L:21492        2L 21573001-21574000 ---        2L 21491001-21492000 #>     2R:5672_2R:5653        2R   5671001-5672000 ---        2R   5652001-5653000 #>                     |              name  constraint  distance orientation #>                     |       <character> <character> <integer>   <logical> #>     2L:1178_2L:1174 |   2L:1178_2L:1174      Tad_35      4000       FALSE #>   2L:21574_2L:21492 | 2L:21574_2L:21492     Tad_486     82000       FALSE #>     2R:5672_2R:5653 |   2R:5672_2R:5653     Tad_513     19000       FALSE #>                        submatrix.name  anchor.bin      anchor.name    bait.bin #>                           <character> <character>      <character> <character> #>     2L:1178_2L:1174   2L:1174_2L:1178     2L:1178   2L:1178:Tad_35     2L:1174 #>   2L:21574_2L:21492 2L:21492_2L:21574    2L:21574 2L:21574:Tad_486    2L:21492 #>     2R:5672_2R:5653   2R:5653_2R:5672     2R:5672  2R:5672:Tad_513     2R:5653 #>                            bait.name anchor.Beaf.score anchor.Beaf.name #>                          <character>         <numeric>           <list> #>     2L:1178_2L:1174   2L:1174:Tad_35               921       Beaf32_130 #>   2L:21574_2L:21492 2L:21492:Tad_486               529      Beaf32_1349 #>     2R:5672_2R:5653  2R:5653:Tad_513                99      Beaf32_1462 #>                     anchor.Beaf.bln bait.Tss.class bait.Tss.name bait.Tss.bln #>                           <logical>         <list>        <list>    <logical> #>     2L:1178_2L:1174            TRUE         active   FBgn0031318         TRUE #>   2L:21574_2L:21492            TRUE       inactive   FBgn0053837         TRUE #>     2R:5672_2R:5653            TRUE         active   FBgn0033028         TRUE #>   ------- #>   regions: 429 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome"},{"path":"/articles/InDepth.html","id":"specific-case-3-filterinteractions-without-selection-function","dir":"Articles","previous_headings":"Filtrations","what":"Specific case 3: FilterInteractions() without selection function","title":"Genomic2DTK - In depth tutorial","text":"Without selection function, FilterInteractions() return indices corresponding target list. , indices interest can selected second step. examples take folowing targets:","code":"target.lst <- list(     anchor.Beaf.name = c(\"Beaf32_8\",\"Beaf32_15\"),     bait.Tss.name    = c(\"FBgn0031214\",\"FBgn0005278\"),     name             = c(\"2L:74_2L:77\"),     distance         = function(columnElement){         return(14000==columnElement || columnElement == 3000)         }     )"},{"path":"/articles/InDepth.html","id":"ginteraction-filtration-1","dir":"Articles","previous_headings":"Filtrations > Specific case 3: FilterInteractions() without selection function","what":"GInteraction filtration","title":"Genomic2DTK - In depth tutorial","text":"","code":"FilterInteractions(     interarctions.gni = attributes(interactions_RFmatrix_ctrl.lst)$interactions,     target.lst        = target.lst,     selection.fun     = NULL     ) |> str() #> List of 4 #>  $ anchor.Beaf.name: int [1:3] 1 3 4 #>  $ bait.Tss.name   : int [1:3] 1 2 3 #>  $ name            : int 1 #>  $ distance        : int [1:25] 1 3 8 24 38 49 63 65 80 102 ..."},{"path":"/articles/InDepth.html","id":"matrices-list-filtration-1","dir":"Articles","previous_headings":"Filtrations > Specific case 3: FilterInteractions() without selection function","what":"Matrices list filtration","title":"Genomic2DTK - In depth tutorial","text":"","code":"FilterInteractions(     matrices.lst      = interactions_RFmatrix_ctrl.lst,     target.lst        = target.lst,     selection.fun     = NULL     ) |> str() #> List of 4 #>  $ anchor.Beaf.name: int [1:3] 1 3 4 #>  $ bait.Tss.name   : int [1:3] 1 2 3 #>  $ name            : int 1 #>  $ distance        : int [1:25] 1 3 8 24 38 49 63 65 80 102 ..."},{"path":"/articles/InDepth.html","id":"tips-4","dir":"Articles","previous_headings":"Filtrations","what":"Tips","title":"Genomic2DTK - In depth tutorial","text":"Filter GInteraction object allows cross selected index. Filter matrices list without selection better filter interaction attributes matrices list","code":""},{"path":"/articles/InDepth.html","id":"selection-function-tips-and-examples","dir":"Articles","previous_headings":"Filtrations > Tips","what":"Selection function tips and examples:","title":"Genomic2DTK - In depth tutorial","text":"common , B C /B /C common B, C common B, plus present C common C elements present B Everything present B C present ","code":"a <- c(\"A\",\"B\",\"D\",\"G\") b <- c(\"E\",\"B\",\"C\",\"G\") c <- c(\"A\",\"F\",\"C\",\"G\") Reduce(intersect, list(a,b,c)) |> sort() #> [1] \"G\" intersect(a,b) |> intersect(c) |> sort() #> [1] \"G\" Reduce(union, list(a,b,c)) |> sort() #> [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" union(a,b) |> union(c) |> sort() #> [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" Reduce(setdiff,list(a,b,c)) |> sort() #> [1] \"D\" setdiff(a,b) |> setdiff(c) |> sort() #> [1] \"D\" intersect(a,b) |> setdiff(c) |> sort() #> [1] \"B\" intersect(a,b) |> union(c) |> sort() #> [1] \"A\" \"B\" \"C\" \"F\" \"G\" union(a,b) |> intersect(c) |> sort() #> [1] \"A\" \"C\" \"G\" union(a,b) |> setdiff(c) |> sort() #> [1] \"B\" \"D\" \"E\" d <- c(a,b,c) setdiff(d,d[duplicated(d)]) |> sort() #> [1] \"D\" \"E\" \"F\""},{"path":"/articles/InDepth.html","id":"orientation","dir":"Articles","previous_headings":"","what":"Orientation","title":"Genomic2DTK - In depth tutorial","text":"ExtractSubmatrix() returns submatrices orientated according 5’->3’ orientation chromosome. case heterotypic asymetric pairs (anchor != bait), anchors baits thus mixed Y X axis matrices.  OrienteMatrix() function allows force matrices orientated way anchors systematically Y axis baits X axis.","code":""},{"path":"/articles/InDepth.html","id":"acces-orientation-information","dir":"Articles","previous_headings":"Orientation","what":"Acces orientation information","title":"Genomic2DTK - In depth tutorial","text":"First, lets look two matrices oriented (column orientation metadata interactions attribute). can see first matrix correctly oriented (value TRUE) second one. 13th matrice well oriented, .e. anchor Beaf Y axis bait TSS X axis 14th matrice well oriented, .e. bait TSS Y axis anchor Beaf X axis","code":"attributes(first100_interactions_RFmatrix_ctrl.lst)$interactions$orientation #>   [1]  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE #>  [13]  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE #>  [25] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE #>  [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE #>  [49]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE #>  [61]  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE #>  [73] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE #>  [85]  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE #>  [97] FALSE FALSE FALSE FALSE"},{"path":"/articles/InDepth.html","id":"orientation-on-matrices-list","dir":"Articles","previous_headings":"Orientation","what":"Orientation on matrices list","title":"Genomic2DTK - In depth tutorial","text":"","code":"oriented_first100_interactions_RFmatrix_ctrl.lst <- OrienteMatrix(first100_interactions_RFmatrix_ctrl.lst) #> 58 matrices are oriented"},{"path":"/articles/InDepth.html","id":"orientation-on-only-one-matrice-","dir":"Articles","previous_headings":"Orientation","what":"Orientation on only one matrice.","title":"Genomic2DTK - In depth tutorial","text":"function also oriente one matrix case attribute verification can oriente matrix don’t need orentation.","code":"orientedMatrix.mtx <- OrienteMatrix(first100_interactions_RFmatrix_ctrl.lst[[1]])"},{"path":"/articles/InDepth.html","id":"quantifications","dir":"Articles","previous_headings":"","what":"Quantifications","title":"Genomic2DTK - In depth tutorial","text":"GetQuantif() function takes input list submatrices returns vector contact frequencies given area, compute given function:","code":""},{"path":"/articles/InDepth.html","id":"basic-quantifications","dir":"Articles","previous_headings":"Quantifications","what":"Basic quantifications","title":"Genomic2DTK - In depth tutorial","text":"GetQuantif function default area function (see Genomic2DTK::GetQuantif). area: Key word defining area values extracted matrices. operation Key word defining operation done extracted values matrices. Example: Interactions values centered 3x3 square centred, averaged removing zeros.","code":"center.num <- GetQuantif(     matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,     area.fun      = \"center\",     operation.fun = \"mean\"     )"},{"path":"/articles/InDepth.html","id":"custom-functions","dir":"Articles","previous_headings":"Quantifications","what":"Custom functions","title":"Genomic2DTK - In depth tutorial","text":"GetQuantif function also takes custom area operation parameter. area: function defining submatrix coordinates values extracted matrices. operation function defining operation done extracted values matrices. Example: Interactions values matrice.mtx[33:35,67:69] area, averaged removing zeros.","code":"GetQuantif(     matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,     area.fun      = function(matrice.mtx){matrice.mtx[33:35,67:69]},     operation.fun = function(area.mtx){         area.mtx[which(area.mtx==0)]<-NA;         return(mean(area.mtx,na.rm=TRUE))         }     ) |> c() |> unlist() |> head() #>   2L:74_2L:77 2L:115_2L:107 2L:121_2L:107 2L:121_2L:117 2L:274_2L:268  #>     1.1964916     0.7079941     0.3850699     0.5802793     0.1114877  #> 2L:278_2L:268  #>     0.1286555"},{"path":[]},{"path":"/articles/InDepth.html","id":"values-naming","dir":"Articles","previous_headings":"Quantifications > Particular cases:","what":"Values naming","title":"Genomic2DTK - In depth tutorial","text":"default, returned values named submatrix ID. name.chr set element metadata column name GInteraction attributes, values returned values named according element. Example: Named quantifications anchor.Beaf.name Note changing submatrix ID names can create names duplicates: consequence, value center.num duplicated namedCenter.num Duplicated value index stored attributes.","code":"namedCenter.num <- GetQuantif(     matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,     area.fun      = \"center\",     operation.fun = \"mean\",     name.chr      = \"anchor.Beaf.name\"     ) unlist(c(center.num))[45:50] #> 2L:5909_2L:5941 2L:5944_2L:5968 2L:5945_2L:5968 2L:6051_2L:6069 2L:6066_2L:6069  #>       0.6376167       0.6754207       0.6832946       0.6930854       1.2542497  #> 2L:6084_2L:6071  #>       0.8629411 unlist(c(namedCenter.num))[45:51] #> Beaf32_415 Beaf32_417 Beaf32_418 Beaf32_418 Beaf32_430 Beaf32_432 Beaf32_435  #>  0.6376167  0.6754207  0.6754207  0.6832946  0.6930854  1.2542497  0.8629411 attributes(center.num)$duplicated #> NULL attributes(namedCenter.num)$duplicated #> [1] 47"},{"path":"/articles/InDepth.html","id":"one-value-extraction","dir":"Articles","previous_headings":"Quantifications > Particular cases:","what":"One value extraction","title":"Genomic2DTK - In depth tutorial","text":"","code":"GetQuantif(     matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,     area.fun      = function(matrice.mtx){matrice.mtx[5,5]},     operation.fun = function(area.mtx){area.mtx}     ) |> head() #>   2L:74_2L:77 2L:115_2L:107 2L:121_2L:107 2L:121_2L:117 2L:274_2L:268  #>     0.5192703     0.3471995     0.7177761     0.5917856     0.5535116  #> 2L:278_2L:268  #>     0.6732039"},{"path":"/articles/InDepth.html","id":"area-extraction","dir":"Articles","previous_headings":"Quantifications > Particular cases:","what":"Area extraction","title":"Genomic2DTK - In depth tutorial","text":"null operation.fun return values selected area without NA.","code":"GetQuantif(     matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,     area.fun      = function(matrice.mtx){matrice.mtx[4:6,4:6]},     operation.fun = function(area){area}     ) |> head() #>   2L:74_2L:77 2L:115_2L:107 2L:121_2L:107 2L:121_2L:117 2L:274_2L:268  #>     0.5401282            NA            NA     0.5621180     0.5192703  #> 2L:278_2L:268  #>            NA GetQuantif(     matrices.lst  = oriented_first100_interactions_RFmatrix_ctrl.lst,     area.fun      = function(matrice.mtx){matrice.mtx[4:6,4:6]},     operation.fun = NULL     ) |> head() #>   2L:74_2L:77 2L:115_2L:107 2L:121_2L:107 2L:121_2L:117 2L:274_2L:268  #>     0.5401282     0.5621180     0.5192703     0.5841077     0.5451626  #> 2L:278_2L:268  #>     0.5062174"},{"path":"/articles/InDepth.html","id":"tips-5","dir":"Articles","previous_headings":"Quantifications","what":"Tips","title":"Genomic2DTK - In depth tutorial","text":"print quantifications use c function avoid attributes printing. select area null operation.fun returns values selected area without NA.","code":""},{"path":"/articles/InDepth.html","id":"aggregations","dir":"Articles","previous_headings":"","what":"Aggregations","title":"Genomic2DTK - In depth tutorial","text":"Aggregation() function takes input list submatrices returns aggregated matrix using user defined aggregation function.","code":""},{"path":[]},{"path":"/articles/InDepth.html","id":"basic-aggregation","dir":"Articles","previous_headings":"Aggregations > One sample aggregation","what":"Basic aggregation","title":"Genomic2DTK - In depth tutorial","text":"Aggregation() function default aggregation functions like sum, mean median (see Genomic2DTK::Aggregation)","code":"agg_sum.mtx <- Aggregation(     matrices.lst = oriented_first100_interactions_RFmatrix_ctrl.lst,      agg.fun      = \"sum\",     rm0.bln      = FALSE     )"},{"path":"/articles/InDepth.html","id":"custom-aggregation","dir":"Articles","previous_headings":"Aggregations > One sample aggregation","what":"Custom aggregation","title":"Genomic2DTK - In depth tutorial","text":"Defining custom aggregation function, example mean function removing NA:","code":"agg_mean.mtx <- Aggregation(     matrices.lst = oriented_first100_interactions_RFmatrix_ctrl.lst,     agg.fun      = function(x){mean(x,na.rm=TRUE)}     )"},{"path":"/articles/InDepth.html","id":"two-samples-differential-aggregation","dir":"Articles","previous_headings":"Aggregations","what":"Two samples differential aggregation","title":"Genomic2DTK - In depth tutorial","text":"Aggregation() function can take input two list submatrices two samples conditions returns differential aggregated matrix. Two ways obtain differential aggregation applied, first assessing differences individual pairs matrices aggregate differences; second aggregating matrices assess differences aggregated matrices.","code":""},{"path":"/articles/InDepth.html","id":"preparation-of-matrices-list","dir":"Articles","previous_headings":"Aggregations > Two samples differential aggregation","what":"Preparation of matrices list","title":"Genomic2DTK - In depth tutorial","text":"Preparation Control matrices list conditionFiltration Orientation Preparation second matrices list Beaf depleted condition. Extraction Filtration Orientation","code":"first100_target.lst = list(     submatrix.name = names(interactions_RFmatrix_ctrl.lst)[1:100]     ) first100_interactions_RFmatrix_ctrl.lst <- FilterInteractions(     matrices.lst  = interactions_RFmatrix_ctrl.lst,     target.lst    = first100_target.lst,     selection.fun = NULL     ) oriented_first100_interactions_RFmatrix_ctrl.lst <- OrienteMatrix(first100_interactions_RFmatrix_ctrl.lst) interactions_RFmatrix.lst  <- ExtractSubmatrix(     feature.gn         = interactions.gni,     hic.cmx_lst        = HiC_HS.cmx_lst,     referencePoint.chr = \"rf\",     matriceDim.num     = 101     ) first100_interactions_RFmatrix.lst <- FilterInteractions(     matrices.lst  = interactions_RFmatrix.lst,     target.lst    = first100_target.lst,     selection.fun = NULL     ) oriented_first100_interactions_RFmatrix.lst <- OrienteMatrix(first100_interactions_RFmatrix.lst) #> 58 matrices are oriented"},{"path":"/articles/InDepth.html","id":"aggregate","dir":"Articles","previous_headings":"Aggregations > Two samples differential aggregation","what":"Aggregate","title":"Genomic2DTK - In depth tutorial","text":"","code":"diffAggreg.mtx <- Aggregation(     ctrlMatrices.lst    = oriented_first100_interactions_RFmatrix_ctrl.lst,     matrices.lst        = oriented_first100_interactions_RFmatrix.lst,     minDist             = NULL,     maxDist             = NULL,     agg.fun             = \"mean\",     rm0.bln             = FALSE,     diff.fun            = \"substraction\",     scaleCorrection.bln = TRUE,     correctionArea.lst  =  list(         i = c(1:30),         j = c(72:101)         ),     statCompare.bln = TRUE)"},{"path":"/articles/InDepth.html","id":"tips-6","dir":"Articles","previous_headings":"Aggregations","what":"Tips","title":"Genomic2DTK - In depth tutorial","text":"perform one sample aggregation, use matrices.lst ctrlMatrices.lst parameters rm0.bln TRUE zeros matrices list replace NA. possible filter submatrices list minimal maximal distance aggregation function. Since statistical test highly memory consumming, recommended apply time. totalMatrixNumber: total number matrices. filteredMatrixNumber: number matrices distance filtering. minimalDistance: minimal distance anchor bait. maximalDistance: maximal distance anchor bait. aggregationMethod: function apply obtain aggregation. zeroRemoved: Boolean indicate zeros replaced NA. correctedFact: value add condition delete noise. ’s compute median difference condition control background area (e.g upper right corner matrices). agg: Aggregation condition. aggCtrl: Aggregation control. aggCorrected: Aggregation condition corrected correctedFact. aggDelta: difference aggregated matrix condition aggregated matrix control. aggCorrectedDelta: difference aggregated matrix condition corrected correctedFact aggregated matrix control.","code":""},{"path":[]},{"path":"/articles/InDepth.html","id":"preparation-of-aggregated-matrices","dir":"Articles","previous_headings":"Aggregations plots","what":"Preparation of aggregated matrices","title":"Genomic2DTK - In depth tutorial","text":"Control aggregation orientation Control aggregation orientation Differential aggregation","code":"aggreg.mtx <- Aggregation(         ctrlMatrices.lst=interactions_RFmatrix_ctrl.lst,         agg.fun=\"mean\",         rm0.bln=FALSE ) oriented_interactions_RFmatrix_ctrl.lst <- OrienteMatrix(interactions_RFmatrix_ctrl.lst) #> 168 matrices are oriented orientedAggreg.mtx <- Aggregation(         ctrlMatrices.lst=oriented_interactions_RFmatrix_ctrl.lst,         agg.fun=\"mean\",         rm0.bln=FALSE ) oriented_interactions_RFmatrix.lst <- OrienteMatrix(interactions_RFmatrix.lst) #> 168 matrices are oriented diffAggreg.mtx <- Aggregation(         ctrlMatrices.lst    = oriented_interactions_RFmatrix_ctrl.lst,         matrices.lst        = oriented_interactions_RFmatrix.lst,         minDist             = NULL,         maxDist             = NULL,         agg.fun             = \"mean\",         rm0.bln             = FALSE,         diff.fun            = \"log2+1\",         scaleCorrection.bln = TRUE,         correctionArea.lst  = list( i=c(1:30) , j=c(72:101) ),         statCompare.bln     = TRUE )"},{"path":[]},{"path":[]},{"path":"/articles/InDepth.html","id":"with-no-orientation","dir":"Articles","previous_headings":"Aggregations plots > Plots > Simple aggregation plot:","what":"With no orientation","title":"Genomic2DTK - In depth tutorial","text":"ggAPA() function creates ggplot object (ggplot2::geom_raster) #### Orientation ### visualisation parameters:","code":"ggAPA(         apa.mtx   = aggreg.mtx,         title.chr = \"APA\" ) ggAPA(         apa.mtx   = orientedAggreg.mtx,         title.chr = \"APA\" )"},{"path":"/articles/InDepth.html","id":"trimming-aggregated-values-for-visualisation","dir":"Articles","previous_headings":"Aggregations plots > Plots > Simple aggregation plot:","what":"Trimming aggregated values for visualisation:","title":"Genomic2DTK - In depth tutorial","text":"remove percentage value choose upper tail, lower tail tails distribution.","code":"ggAPA(         apa.mtx      = aggreg.mtx,         title.chr    = \"APA 30% trimmed on upper side\",         trimPrct.num = 30,         bounds.chr   = \"upper\" ) #> Warning in max(unlist(bounds.num_lst[1]), na.rm = TRUE): no non-missing #> arguments to max; returning -Inf ggAPA(         apa.mtx      = aggreg.mtx,         title.chr    = \"APA 30% trimmed on upper side\",         trimPrct.num = 30,         bounds.chr   = \"lower\" ) #> Warning in min(unlist(bounds.num_lst[2]), na.rm = TRUE): no non-missing #> arguments to min; returning Inf ggAPA(         apa.mtx      = aggreg.mtx,         title.chr    = \"APA 30% trimmed\",         trimPrct.num = 30,         bounds.chr   = \"both\" )"},{"path":[]},{"path":"/articles/InDepth.html","id":"min-and-max-color-scale","dir":"Articles","previous_headings":"","what":"Genomic2DTK - In depth tutorial","title":"Genomic2DTK - In depth tutorial","text":"Example user-defined min max color scale","code":"ggAPA(         apa.mtx         = aggreg.mtx,         title.chr       = \"APA [0-1]\",         colMin.num = 0,         colMax.num = 1 )"},{"path":"/articles/InDepth.html","id":"center-color-scale","dir":"Articles","previous_headings":"","what":"Genomic2DTK - In depth tutorial","title":"Genomic2DTK - In depth tutorial","text":"Example user-define color scale center","code":"ggAPA(         apa.mtx    = aggreg.mtx,         title.chr  = \"APA center on 0.2\",         colMid.num = 0.5 )"},{"path":"/articles/InDepth.html","id":"change-color-breaks","dir":"Articles","previous_headings":"","what":"Genomic2DTK - In depth tutorial","title":"Genomic2DTK - In depth tutorial","text":"Exmaples user-defined color breaks","code":"ggAPA(         apa.mtx       = aggreg.mtx,         title.chr     = \"APA [0, .25, .50, .30, .75, 1]\",         colBreaks.num = c(0,0.25,0.5,0.75,1) ) ggAPA(         apa.mtx       = aggreg.mtx,         title.chr     = \"APA [0, .15, .20, .25, 1]\",         colBreaks.num = c(0,0.15,0.20,0.25,1) ) ggAPA(         apa.mtx       = aggreg.mtx,         title.chr     = \"APA [0, .5, .6, .8, 1]\",         colBreaks.num = c(0,0.4,0.5,0.7,1) )"},{"path":"/articles/InDepth.html","id":"change-color-scale-bias","dir":"Articles","previous_headings":"","what":"Genomic2DTK - In depth tutorial","title":"Genomic2DTK - In depth tutorial","text":"Examples different color scale biais.","code":"ggAPA(         apa.mtx    = aggreg.mtx,         title.chr  = \"APA\",         colorScale = \"density\" ) ggAPA(         apa.mtx     = aggreg.mtx,         title.chr   = \"APA\",         bias.num    = 2 ) ggAPA(         apa.mtx     = aggreg.mtx,         title.chr   = \"APA\",         bias.num    = 0.5 )"},{"path":"/articles/InDepth.html","id":"changed-color","dir":"Articles","previous_headings":"","what":"Genomic2DTK - In depth tutorial","title":"Genomic2DTK - In depth tutorial","text":"option change color heatmap color NA values.","code":"ggAPA(         apa.mtx     = aggreg.mtx,         title.chr   = \"APA\",         heatmap.col = viridis(6),         na.col      = \"black\" )"},{"path":"/articles/InDepth.html","id":"blurred-visualisation","dir":"Articles","previous_headings":"Aggregations plots > Plots > Simple aggregation plot:","what":"Blurred visualisation","title":"Genomic2DTK - In depth tutorial","text":"option apply blurr heatmap remove noise.","code":"ggAPA(         apa.mtx           = aggreg.mtx,         title.chr         = \"APA\",         blurPass.num      = 1,         blurSd.num        = 0.5,         lowerTri.num      = NA )"},{"path":"/articles/InDepth.html","id":"ggplot-object-modifications","dir":"Articles","previous_headings":"Aggregations plots > Plots > Simple aggregation plot:","what":"ggplot object modifications","title":"Genomic2DTK - In depth tutorial","text":"Since ggAPA() returns ggplot object, possible modify following ggplot2 grammar ___ # SessionInfo","code":"ggAPA(         apa.mtx     = aggreg.mtx,         title.chr   = \"APA\", ) +  ggplot2::labs(         title    = \"New title\",         subtitle = \"and subtitle\" ) sessionInfo() #> R version 4.2.2 (2022-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.1 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] Genomic2DTK_0.99.0          InteractionSet_1.24.0       #>  [3] SummarizedExperiment_1.26.1 Biobase_2.56.0              #>  [5] MatrixGenerics_1.8.1        matrixStats_0.63.0          #>  [7] GenomicRanges_1.48.0        GenomeInfoDb_1.32.4         #>  [9] IRanges_2.30.1              S4Vectors_0.34.0            #> [11] BiocGenerics_0.42.0         #>  #> loaded via a namespace (and not attached): #>  [1] httr_1.4.4             sass_0.4.4             tidyr_1.2.1            #>  [4] viridisLite_0.4.1      jsonlite_1.8.3         bslib_0.4.1            #>  [7] highr_0.9              GenomeInfoDbData_1.2.8 yaml_2.3.6             #> [10] pillar_1.8.1           lattice_0.20-45        glue_1.6.2             #> [13] digest_0.6.30          XVector_0.36.0         rvest_1.0.3            #> [16] colorspace_2.0-3       htmltools_0.5.3        Matrix_1.5-1           #> [19] strawr_0.0.9           pkgconfig_2.0.3        zlibbioc_1.42.0        #> [22] purrr_0.3.5            webshot_0.5.4          scales_1.2.1           #> [25] svglite_2.1.0          BiocParallel_1.30.4    tibble_3.1.8           #> [28] farver_2.1.1           ggplot2_3.4.0          generics_0.1.3         #> [31] ellipsis_0.3.2         cachem_1.0.6           withr_2.5.0            #> [34] cli_3.4.1              magrittr_2.0.3         memoise_2.0.1          #> [37] evaluate_0.18          fs_1.5.2               fansi_1.0.3            #> [40] xml2_1.3.3             textshaping_0.3.6      tools_4.2.2            #> [43] lifecycle_1.0.3        stringr_1.5.0          Rhdf5lib_1.18.2        #> [46] munsell_0.5.0          DelayedArray_0.22.0    kableExtra_1.3.4       #> [49] compiler_4.2.2         pkgdown_2.0.6          jquerylib_0.1.4        #> [52] systemfonts_1.0.4      rlang_1.0.6            rhdf5_2.40.0           #> [55] grid_4.2.2             RCurl_1.98-1.9         rhdf5filters_1.8.0     #> [58] rstudioapi_0.14        labeling_0.4.2         bitops_1.0-7           #> [61] rmarkdown_2.18         gtable_0.3.1           codetools_0.2-18       #> [64] R6_2.5.1               knitr_1.41             dplyr_1.0.10           #> [67] fastmap_1.1.0          utf8_1.2.2             rprojroot_2.0.3        #> [70] ragg_1.2.4             desc_1.4.2             stringi_1.7.8          #> [73] parallel_4.2.2         Rcpp_1.0.9             vctrs_0.5.1            #> [76] tidyselect_1.2.0       xfun_0.35"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Chanard \\. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"\\<ff> NC (2022). Genomic2DTK: Set genomic interaction analysis tools. https://nchanard.github.io/Genomic2DTK/, https://github.com/NChanard/Genomic2DTK.","code":"@Manual{,   title = {Genomic2DTK: Set of genomic interaction analysis tools},   author = {Nicolas Chanard \\},   year = {2022},   note = {https://nchanard.github.io/Genomic2DTK/, https://github.com/NChanard/Genomic2DTK}, }"},{"path":"/index.html","id":"genomic2dtk-","dir":"","previous_headings":"","what":"Set of genomic interaction analysis tools","title":"Set of genomic interaction analysis tools","text":"package provides set functions useful analysis 3D genomic interactions. includes import standard HiC data formats R HiC normalisation procedures. main objective package improve visualization quantification analysis HiC contacts aggreagtion.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Set of genomic interaction analysis tools","text":"Development version avalaible GitHub:","code":"remotes::install_github(\"NChanard/Genomic2DTK\")"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Set of genomic interaction analysis tools","text":"Genomic2DTK","code":""},{"path":"/reference/AddAttr.html","id":null,"dir":"Reference","previous_headings":"","what":"Add list as attributes. — AddAttr","title":"Add list as attributes. — AddAttr","text":"Add list attributes object without overwrite.","code":""},{"path":"/reference/AddAttr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add list as attributes. — AddAttr","text":"","code":"AddAttr(var.any = NULL, attribute.lst = NULL, overwrite.bln = FALSE)"},{"path":"/reference/AddAttr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add list as attributes. — AddAttr","text":"var.<>: object attributes added. attribute.lst <list>: named list new attributes. overwrite.bln <logical>: whether overwrite required attributes name.(Default FALSE)","code":""},{"path":"/reference/AddAttr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add list as attributes. — AddAttr","text":"object new attributes.","code":""},{"path":"/reference/AddAttr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add list as attributes. — AddAttr","text":"AddAttr","code":""},{"path":"/reference/AddAttr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add list as attributes. — AddAttr","text":"","code":"x <- seq_len(10) x <- AddAttr(x, list(dim = c(2, 5))) x #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    3    5    7    9 #> [2,]    2    4    6    8   10 x <- AddAttr(x, list(dim = c(5, 2))) x #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    3    5    7    9 #> [2,]    2    4    6    8   10 x <- AddAttr(x, list(dim = c(5, 2)), overwrite.bln = TRUE) x #>      [,1] [,2] #> [1,]    1    6 #> [2,]    2    7 #> [3,]    3    8 #> [4,]    4    9 #> [5,]    5   10"},{"path":"/reference/Aggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation of matrices list. — Aggregation","title":"Aggregation of matrices list. — Aggregation","text":"Aggregates matrices list (two lists case differential aggregation) single matrix. function allows apply different aggregation (average, sum, ...), transformation (rank, percentage, ...) differential (subtraction, ratio, ...) functions.","code":""},{"path":"/reference/Aggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation of matrices list. — Aggregation","text":"","code":"Aggregation(   ctrlMatrices.lst = NULL,   matrices.lst = NULL,   minDist.num = NULL,   maxDist.num = NULL,   trans.fun = NULL,   agg.fun = \"mean\",   rm0.bln = FALSE,   diff.fun = \"substraction\",   scaleCorrection.bln = FALSE,   correctionArea.lst = NULL,   statCompare.bln = FALSE )"},{"path":"/reference/Aggregation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregation of matrices list. — Aggregation","text":"ctrlMatrices.lst <list[matrix]>: matrices list aggregate control. matrices.lst <list[matrix]>: matrices list aggregate. minDist.num <numeric>: minimal distance anchor bait. maxDist.num <numeric>: maximal distance anchor bait. trans.fun <function chracter>: function use transforme scale values submatrix aggregation. parameter character : \"quantile\" \"qtl\" apply function dplyr::ntile(x,500) \"percentile\" \"prct\" apply percentile. \"rank\" apply ranking. \"zscore\" apply scaling. \"minmax\" apply Genomic2DTK::MinMaxScale. \"mu\" apply Genomic2DTK::MeanScale. NULL apply transformation (Default). agg.fun <function chracter>: function use aggregate pixel matrix. parameter character : \"50 \"+\" \"sum\" apply sum (Default) apply mean rm0.bln <logical>: TURE 0 replace NA. (Default FALSE) diff.fun <function chracter>: function use compute differential. parameter character : \"-\", \"substract\" \"substraction\" apply substraction \"/\" \"ratio\" apply ratio \"log2\",\"log2-\",\"log2/\" \"log2ratio\" apply log2 ratio (Default) apply log2 1+ratio scaleCorrection.bln <logical>: Whether correction done median value take ane noising area. (Default TRUE) correctionArea.lst <list>: Nested list indice define noising area fore correction. List muste contain first element \"\" (row indices) element called \"j\" (columns indices). NULL automatically take upper left part aggregated matrices. (Default NULL) statCompare.bln <logical>: Whether t.test must apply pxl differential aggregated matrix.","code":""},{"path":"/reference/Aggregation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregation of matrices list. — Aggregation","text":"matrix","code":""},{"path":"/reference/Aggregation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregation of matrices list. — Aggregation","text":"Aggregation","code":""},{"path":"/reference/Aggregation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation of matrices list. — Aggregation","text":"","code":"# Data data(Beaf32_Peaks.gnr) data(HiC_Ctrl.cmx_lst) data(HiC_HS.cmx_lst)  # Index Beaf32 Beaf32_Index.gnr <- IndexFeatures(     gRange.gnr_lst = list(Beaf = Beaf32_Peaks.gnr),     chromSize.dtf = data.frame(seqnames = c(\"2L\", \"2R\"), seqlengths = c(23513712, 25286936)),     binSize.num = 100000 )  # Beaf32 <-> Beaf32 Pairing Beaf_Beaf.gni <- SearchPairs(indexAnchor.gnr = Beaf32_Index.gnr) Beaf_Beaf.gni <- Beaf_Beaf.gni[seq_len(2000)] # subset 2000 first for exemple  # Matrices extractions center on Beaf32 <-> Beaf32 point interaction interactions_Ctrl.mtx_lst <- ExtractSubmatrix(     feature.gn = Beaf_Beaf.gni,     hic.cmx_lst = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"pf\" ) interactions_HS.mtx_lst <- ExtractSubmatrix(     feature.gn = Beaf_Beaf.gni,     hic.cmx_lst = HiC_HS.cmx_lst,     referencePoint.chr = \"pf\" )  # Aggregate matrices in one matrix aggreg.mtx <- Aggregation(interactions_Ctrl.mtx_lst)  # Differential Aggregation aggregDiff.mtx <- Aggregation(     ctrlMatrices.lst = interactions_Ctrl.mtx_lst,     matrices.lst = interactions_HS.mtx_lst )"},{"path":"/reference/BalanceHiC.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute HiC matrix-balancing. — BalanceHiC","title":"Compute HiC matrix-balancing. — BalanceHiC","text":"Apply matrix-balancing normalization method list contacts matrix.","code":""},{"path":"/reference/BalanceHiC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute HiC matrix-balancing. — BalanceHiC","text":"","code":"BalanceHiC(   hic.cmx_lst,   method.chr = \"ICE\",   interaction.type = NULL,   maxIter.num = 50,   qtlTh.num = 0.15,   cores.num = 1,   verbose.bln = FALSE )"},{"path":"/reference/BalanceHiC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute HiC matrix-balancing. — BalanceHiC","text":"hic.cmx_lst <List[contactMatrix]>: HiC maps list. method.chr <character> : kind normalization method. One \"ICE\", \"VC\" \"VC_SQRT\" (Default \"ICE\") interaction.type <character> : \"cis\", \"trans\", c(\"cis\", \"trans\"), \"\". NULL normalization apply cis chunks trans chunks (equivalent c(\"cis\", \"trans\")). \"\", normalization apply chuncks . (Default NULL) maxIter.num <numerical>: maximum iteration number. qtlTh.num <numerical>: threshold quantile bins ignored. (Default 0.15) cores.num <numerical> : Number cores used. (Default 1) verbose.bln <logical>: TRUE show progression console. (Default FALSE)","code":""},{"path":"/reference/BalanceHiC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute HiC matrix-balancing. — BalanceHiC","text":"matrices list.","code":""},{"path":"/reference/BalanceHiC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute HiC matrix-balancing. — BalanceHiC","text":"BalanceHiC","code":""},{"path":"/reference/BalanceHiC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute HiC matrix-balancing. — BalanceHiC","text":"","code":"data(HiC_Ctrl.cmx_lst)  HiC_Ctrl_ICE.cmx_lst <- BalanceHiC(HiC_Ctrl.cmx_lst,     interaction.type = \"cis\",     method.chr = \"ICE\" ) #> 2L_2R remove from output.  HiC_Ctrl_VC.cmx_lst <- BalanceHiC(HiC_Ctrl.cmx_lst,     interaction.type = c(\"cis\", \"trans\"),     method.chr = \"VC\" )  HiC_Ctrl_VC_SQRT.cmx_lst <- BalanceHiC(HiC_Ctrl.cmx_lst,     interaction.type = \"all\",     method.chr = \"VC_SQRT\" )"},{"path":"/reference/Beaf32_Peaks.gnr.html","id":null,"dir":"Reference","previous_headings":"","what":"D.melanogaster Beaf-32 ChIP-seq. — Beaf32_Peaks.gnr","title":"D.melanogaster Beaf-32 ChIP-seq. — Beaf32_Peaks.gnr","text":"Drosophila Melanogaster Beaf32 peaks 2L 2R chromosomes.","code":""},{"path":"/reference/Beaf32_Peaks.gnr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"D.melanogaster Beaf-32 ChIP-seq. — Beaf32_Peaks.gnr","text":"","code":"data(Beaf32_Peaks.gnr)"},{"path":"/reference/Beaf32_Peaks.gnr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"D.melanogaster Beaf-32 ChIP-seq. — Beaf32_Peaks.gnr","text":"object class GRanges.","code":""},{"path":"/reference/Beaf32_Peaks.gnr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"D.melanogaster Beaf-32 ChIP-seq. — Beaf32_Peaks.gnr","text":"","code":"data(Beaf32_Peaks.gnr) Beaf32_Peaks.gnr #> GRanges object with 600 ranges and 2 metadata columns: #>         seqnames            ranges strand |     score        name #>            <Rle>         <IRanges>  <Rle> | <numeric> <character> #>     [1]       2L       35594-35725      * |        76    Beaf32_2 #>     [2]       2L       47296-47470      * |        44    Beaf32_3 #>     [3]       2L       65770-65971      * |       520    Beaf32_5 #>     [4]       2L       73858-74052      * |       205    Beaf32_8 #>     [5]       2L     102138-102684      * |      1830   Beaf32_11 #>     ...      ...               ...    ... .       ...         ... #>   [596]       2R 24687286-24687440      * |        37 Beaf32_2943 #>   [597]       2R 24874870-24875019      * |        82 Beaf32_2958 #>   [598]       2R 24944555-24944686      * |        48 Beaf32_2966 #>   [599]       2R 24969405-24969744      * |      1068 Beaf32_2971 #>   [600]       2R 25038610-25038711      * |        76 Beaf32_2975 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"/reference/BinGRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin a GRanges. — BinGRanges","title":"Bin a GRanges. — BinGRanges","text":"Bin GRanges allow apply summary method (e.g: 'mean', 'median', 'sum', 'max, 'min' ...) chossen numericals variables ranges bin.","code":""},{"path":"/reference/BinGRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin a GRanges. — BinGRanges","text":"","code":"BinGRanges(   gRange.gnr = NULL,   chromSize.dtf = NULL,   binSize.num = NULL,   method.chr = \"mean\",   variablesName.chr_vec = NULL,   na.rm = TRUE,   cores.num = 1,   reduce.bln = TRUE,   verbose.bln = FALSE )"},{"path":"/reference/BinGRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin a GRanges. — BinGRanges","text":"gRange.gnr <GRanges>: GRanges bin. chromSize.dtf <data.frame>: data.frame first colum correspond chromosomes names, second column correspond chromosomes lengths base pairs. binSize.num <numerical>: width bins. method.chr <character>: name summary method 'mean', 'median', 'sum', 'max, 'min'. (Default 'mean') variablesName.chr_vec <character> : character vector specify metadata columns GRanges apply summary method. na.rm <logical> : logical value indicating whether 'NA' values stripped computation proceeds. (Default TRUE) cores.num <numerical> : number cores. (Default 1) reduce.bln <logical> : whether duplicated Bin must reduced de summary method. (Default TRUE) verbose.bln <logical>: TRUE show progression console. (Default FALSE)","code":""},{"path":"/reference/BinGRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin a GRanges. — BinGRanges","text":"binned GRanges.","code":""},{"path":"/reference/BinGRanges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bin a GRanges. — BinGRanges","text":"BinGRanges","code":""},{"path":"/reference/BinGRanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin a GRanges. — BinGRanges","text":"","code":"GRange.gnr <- GenomicRanges::GRanges(     seqnames = S4Vectors::Rle(c(\"chr1\", \"chr2\"), c(3, 1)),     ranges = IRanges::IRanges(c(1, 201, 251, 1), end = c(200, 250, 330, 100), names = letters[seq_len(4)]),     strand = S4Vectors::Rle(BiocGenerics::strand(c(\"*\")), 4),     score = c(50, NA, 100, 30) ) GRange.gnr #> GRanges object with 4 ranges and 1 metadata column: #>     seqnames    ranges strand |     score #>        <Rle> <IRanges>  <Rle> | <numeric> #>   a     chr1     1-200      * |        50 #>   b     chr1   201-250      * |        NA #>   c     chr1   251-330      * |       100 #>   d     chr2     1-100      * |        30 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths BinGRanges(     gRange.gnr = GRange.gnr,     chromSize.dtf = data.frame(c(\"chr1\", \"chr2\"), c(350, 100)),     binSize.num = 100,     method.chr = \"mean\",     variablesName.chr_vec = \"score\",     na.rm = TRUE ) #> GRanges object with 5 ranges and 2 metadata columns: #>       seqnames    ranges strand |     score         bin #>          <Rle> <IRanges>  <Rle> | <numeric> <character> #>   [1]     chr1     1-100      * |        50      chr1:1 #>   [2]     chr1   101-200      * |        50      chr1:2 #>   [3]     chr1   201-300      * |       100      chr1:3 #>   [4]     chr1   301-350      * |       100      chr1:4 #>   [5]     chr2     1-100      * |        30      chr2:1 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome"},{"path":"/reference/BindFillRows.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frames row binding. — BindFillRows","title":"Data frames row binding. — BindFillRows","text":"Bind data frames rows filling missing columns NA.","code":""},{"path":"/reference/BindFillRows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frames row binding. — BindFillRows","text":"","code":"BindFillRows(data.lst_df, ...)"},{"path":"/reference/BindFillRows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data frames row binding. — BindFillRows","text":"data.lst_df <data.frames list[data.frame]>: data frames bind list data.frames. data.frame create list arguments `data.lst_df` `...`, else `...` ignored. ... <data.frames list[data.frame]>: data frames bind list data.frames.","code":""},{"path":"/reference/BindFillRows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data frames row binding. — BindFillRows","text":"binded data frame","code":""},{"path":"/reference/BindFillRows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data frames row binding. — BindFillRows","text":"BindFillRows","code":""},{"path":"/reference/BindFillRows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data frames row binding. — BindFillRows","text":"","code":"df1 <- data.frame(a = seq_len(5), b = c(6:10)) df2 <- data.frame(a = c(11:15), b = c(16:20), c = LETTERS[seq_len(5)]) BindFillRows(df1, df2) #>     a  b    c #> 1   1  6 <NA> #> 2   2  7 <NA> #> 3   3  8 <NA> #> 4   4  9 <NA> #> 5   5 10 <NA> #> 6  11 16    A #> 7  12 17    B #> 8  13 18    C #> 9  14 19    D #> 10 15 20    E BindFillRows(list(df1, df2)) #>     a  b    c #> 1   1  6 <NA> #> 2   2  7 <NA> #> 3   3  8 <NA> #> 4   4  9 <NA> #> 5   5 10 <NA> #> 6  11 16    A #> 7  12 17    B #> 8  13 18    C #> 9  14 19    D #> 10 15 20    E"},{"path":"/reference/BoxBlur.html","id":null,"dir":"Reference","previous_headings":"","what":"Blur a matrix. — BoxBlur","title":"Blur a matrix. — BoxBlur","text":"Blur matrix one dimensional kernel.","code":""},{"path":"/reference/BoxBlur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blur a matrix. — BoxBlur","text":"","code":"BoxBlur(mat.mtx, box.num = NULL, boxSize.num = NULL, sd.num = 1)"},{"path":"/reference/BoxBlur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blur a matrix. — BoxBlur","text":"mat.mtx <matrix>: numerical matrix. box.num <numeric>: numerical vector kernel. NULL apply GaussBox (see 'GaussBox' function) (Default NULL) boxSize.num <numeric>: box.num NULL, size kernel 'GaussBox' function. (Default NULL) sd.num <numeric>: box.num NULL, standard deviation parameter 'GaussBox' function. (Default NULL)","code":""},{"path":"/reference/BoxBlur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blur a matrix. — BoxBlur","text":"Blurred matrix.","code":""},{"path":"/reference/BoxBlur.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Blur a matrix. — BoxBlur","text":"BoxBlur","code":""},{"path":"/reference/BoxBlur.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blur a matrix. — BoxBlur","text":"","code":"set.seed(981643) mat.mtx <- rnorm(10000, 50, 10)**3 |> matrix(100, 100) heatmap(mat.mtx, Rowv = NA, Colv = NA)  heatmap(BoxBlur(mat.mtx), Rowv = NA, Colv = NA)"},{"path":"/reference/BreakVector.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut a vector. — BreakVector","title":"Cut a vector. — BreakVector","text":"Compute n+1 breaks vector linear density based way possibility fix minimal, center maximal values.","code":""},{"path":"/reference/BreakVector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut a vector. — BreakVector","text":"","code":"BreakVector(   x.num = NULL,   min.num = NULL,   center.num = NULL,   max.num = NULL,   n.num = 10,   method.chr = \"linear\" )"},{"path":"/reference/BreakVector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut a vector. — BreakVector","text":"x.num <numeric>: numerical vector. min.num <numeric>: minimal fixed value. center.num <numeric>: center fixed value. max.num <numeric>: maximal fixed value. n.num <numeric>: number tile (return n.num+1 breaks). method.chr <character>: kind breaking. \"linear\" \"density\". (Default \"linear\")","code":""},{"path":"/reference/BreakVector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut a vector. — BreakVector","text":"Numerical vector breaks.","code":""},{"path":"/reference/BreakVector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cut a vector. — BreakVector","text":"BreakVector","code":""},{"path":"/reference/BreakVector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut a vector. — BreakVector","text":"","code":"set.seed(31415) BreakVector(x.num = rnorm(100, 50, 200), n.num = 9) #>  [1] -388.951506 -289.464576 -189.977646  -90.490716    8.996213  108.483143 #>  [7]  207.970073  307.457002  406.943932  506.430862"},{"path":"/reference/CutHiC.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut HiC map in chunks. — CutHiC","title":"Cut HiC map in chunks. — CutHiC","text":"Cut mega contactMatrix (join multiple chromosomic maps) inq list contactMatrix.","code":""},{"path":"/reference/CutHiC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut HiC map in chunks. — CutHiC","text":"","code":"CutHiC(megaHic.cmx, verbose.bln = FALSE)"},{"path":"/reference/CutHiC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut HiC map in chunks. — CutHiC","text":"megaHic.cmx <contactMatrix>: HiC megamap. verbose.bln <logical>: TRUE show progression console. (Default FALSE)","code":""},{"path":"/reference/CutHiC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut HiC map in chunks. — CutHiC","text":"matrices list.","code":""},{"path":"/reference/CutHiC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cut HiC map in chunks. — CutHiC","text":"CutHiC","code":""},{"path":"/reference/CutHiC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut HiC map in chunks. — CutHiC","text":"","code":"data(HiC_Ctrl.cmx_lst) Mega_Ctrl.cmx <- JoinHiC(HiC_Ctrl.cmx_lst) CutHiC(Mega_Ctrl.cmx) #> $`2L_2L` #> class: ContactMatrix  #> dim: 236 236  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 236 #>  #> $`2L_2R` #> class: ContactMatrix  #> dim: 236 253  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 489 #>  #> $`2R_2R` #> class: ContactMatrix  #> dim: 253 253  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 253 #>  #> attr(,\"resolution\") #> [1] 1e+05 #> attr(,\"mtx\") #> [1] \"obs\" #> attr(,\"chromSize\") #> # A tibble: 2 × 3 #>   name    length dimension #>   <chr>    <dbl>     <dbl> #> 1 2L    23513712       236 #> 2 2R    25286936       253 #> attr(,\"matricesKind\") #> # A tibble: 3 × 4 #>   name  type  kind  symmetric #>   <chr> <chr> <chr> <lgl>     #> 1 2L_2L cis   U     TRUE      #> 2 2L_2R trans NA    FALSE     #> 3 2R_2R cis   U     TRUE"},{"path":"/reference/ExtractSubmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Submatrix extraction. — ExtractSubmatrix","title":"Submatrix extraction. — ExtractSubmatrix","text":"Extract matrices HiC maps list around genomic features.","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submatrix extraction. — ExtractSubmatrix","text":"","code":"ExtractSubmatrix(   feature.gn = NULL,   hic.cmx_lst = NULL,   referencePoint.chr = \"pf\",   res.num = NULL,   matriceDim.num = 21,   shiftFactor.num = 1,   cores.num = 1,   verbose.bln = FALSE )"},{"path":"/reference/ExtractSubmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submatrix extraction. — ExtractSubmatrix","text":"feature.gn <GRanges Pairs[GRanges] GInteractions>: genomic coordinates compute extraction HiC submatrix. hic.cmx_lst <List[contactMatrix]>: HiC maps list. referencePoint.chr <character>: Type extracted submatrices. \"rf\" \"region feature\" extract triangle-shaped matrices around regions \"pf\" \"point feature\" extract square-shaped matrices around points. (Default \"rf\") res.num <numeric>: resoulution used hic.cmx_lst. NULL automatically find resolution attributes hic.cmx_lst. (Default NULL) matriceDim.num <numeric>: size matrices output. (Default 21). shiftFactor.num <numeric>: Onlt \"referencePoint.chr\" \"rf\". Factor defining much distance anchor bait extracted region (Default 1). Ex: shiftFactor.num=2, extracted matrices 2*regionSize+regionSize+2*regionSize. cores.num <integer> : integer specify number cores. (Default 1) verbose.bln <logical>: TRUE show progression console. (Default FALSE)","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submatrix extraction. — ExtractSubmatrix","text":"matrices list.","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Submatrix extraction. — ExtractSubmatrix","text":"ExtractSubmatrix","code":""},{"path":"/reference/ExtractSubmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Submatrix extraction. — ExtractSubmatrix","text":"","code":"# Data data(Beaf32_Peaks.gnr) data(HiC_Ctrl.cmx_lst)  # Index Beaf32 Beaf32_Index.gnr <- IndexFeatures(     gRange.gnr_lst = list(Beaf = Beaf32_Peaks.gnr),     chromSize.dtf = data.frame(seqnames = c(\"2L\", \"2R\"), seqlengths = c(23513712, 25286936)),     binSize.num = 100000 )  # Beaf32 <-> Beaf32 Pairing Beaf_Beaf.gni <- SearchPairs(indexAnchor.gnr = Beaf32_Index.gnr) Beaf_Beaf.gni <- Beaf_Beaf.gni[seq_len(2000)] # subset 2000 first for exemple  # Matrices extractions of regions defined between Beaf32 <-> Beaf32 interactions interactions_RF.mtx_lst <- ExtractSubmatrix(     feature.gn = Beaf_Beaf.gni,     hic.cmx_lst = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"rf\" ) #> Warning: GRanges object contains 1847 out-of-bound ranges located on sequence #>   2L. Note that ranges located on a sequence whose length is unknown (NA) #>   or on a circular sequence are not considered out-of-bound (use #>   seqlengths() and isCircular() to get the lengths and circularity flags #>   of the underlying sequences). You can use trim() to trim these ranges. #>   See ?`trim,GenomicRanges-method` for more information. #> Warning: GRanges object contains 3694 out-of-bound ranges located on sequence #>   2L. Note that ranges located on a sequence whose length is unknown (NA) #>   or on a circular sequence are not considered out-of-bound (use #>   seqlengths() and isCircular() to get the lengths and circularity flags #>   of the underlying sequences). You can use trim() to trim these ranges. #>   See ?`trim,GenomicRanges-method` for more information.  # Matrices extractions center on Beaf32 <-> Beaf32 pointinteraction interactions_PF.mtx_lst <- ExtractSubmatrix(     feature.gn = Beaf_Beaf.gni,     hic.cmx_lst = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"pf\" )"},{"path":"/reference/FilterInteractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Submatrix or Interactions filtering. — FilterInteractions","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"Search GInteraction object interactions correspond ti target list return list index filter matrices list according target selection function.","code":""},{"path":"/reference/FilterInteractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"","code":"FilterInteractions(   matrices.lst = NULL,   interarctions.gni = NULL,   target.lst = NULL,   selection.fun = function() {      Reduce(intersect, interarctions.ndx_lst)  } )"},{"path":"/reference/FilterInteractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"matrices.lst <List[matrix]>: matrices list filter. NULL, function return filtred matrices list, else return list index. interarctions.gni <GInteractions>: GInteraction object compute filter. target.lst <List>: nammed list describe target. selection.fun <function>: function described target must cross. (Defaul intersection targets)","code":""},{"path":"/reference/FilterInteractions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"list elements index filtred matrices list attributes updates.","code":""},{"path":"/reference/FilterInteractions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"FilterInteractions","code":""},{"path":"/reference/FilterInteractions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Submatrix or Interactions filtering. — FilterInteractions","text":"","code":"# Data data(Beaf32_Peaks.gnr) data(HiC_Ctrl.cmx_lst)  # Index Beaf32 Beaf32_Index.gnr <- IndexFeatures(     gRange.gnr_lst = list(Beaf = Beaf32_Peaks.gnr),     chromSize.dtf  = data.frame(seqnames = c(\"2L\", \"2R\"), seqlengths = c(23513712, 25286936)),     binSize.num    = 100000 )  # Beaf32 <-> Beaf32 Pairing Beaf_Beaf.gni <- SearchPairs(indexAnchor.gnr = Beaf32_Index.gnr) Beaf_Beaf.gni <- Beaf_Beaf.gni[seq_len(2000)] # subset 2000 first for exemple  # Matrices extractions center on Beaf32 <-> Beaf32 point interaction interactions_PF.mtx_lst  <- ExtractSubmatrix(     feature.gn         = Beaf_Beaf.gni,     hic.cmx_lst        = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"pf\" )  # Create a target target.lst <- list(     anchor.Beaf.name = c(\"Beaf32_108\", \"Beaf32_814\"),     distance         = function(dist) {         dist < 300000     } ) # We target the Beaf32<->Beaf32 interactions that are less than 300Kb away # and have peak Beaf32_2 and Beaf32_191 as anchors (i.e. left).  # Create a selection selection.fun <- function() {     intersect(anchor.Beaf.name, distance) } # We select the Beaf32<->Beaf32 interactions that satisfy both targeting # criteria (intersection).  # Filtration on InteractionSet (Beaf32 <-> Beaf32 Pairs) FilterInteractions(     interarctions.gni = Beaf_Beaf.gni,     target.lst        = target.lst,     selection.fun     = NULL ) |> str(max.level = 1) #> List of 2 #>  $ anchor.Beaf.name: int [1:30] 10 78 147 215 284 352 421 489 558 626 ... #>  $ distance        : int [1:56] 1 2 3 138 139 140 141 275 276 277 ... # Returns a named list (the names match the targeting criteria). # Each element is an index vector of Beaf32<->Beaf32 interactions # that satisfy the given criteria.  # Filtration on Matrices List (Beaf32 <-> Beaf32 Extracted matrices) FilterInteractions(     matrices.lst      = interactions_PF.mtx_lst,     target.lst        = target.lst,     selection.fun     = NULL ) |> str(max.level = 1) #> List of 2 #>  $ anchor.Beaf.name: int [1:12] 1 69 126 194 251 319 376 444 501 569 ... #>  $ distance        : int [1:15] 1 2 126 127 253 379 380 504 505 506 ... # Return the same kind of result.  # Add the selection on InteractionSet Filtration FilterInteractions(     interarctions.gni = Beaf_Beaf.gni,     target.lst = target.lst,     selection.fun = selection.fun ) |> str(max.level = 1) #>  int [1:3] 1106 1243 1380 # This return the intersection of the index vector that satisfy both # targeting criteria.  # Add the selection on Matrices List Filtration FilterInteractions(     matrices.lst = interactions_PF.mtx_lst,     target.lst = target.lst,     selection.fun = selection.fun ) |> str(max.level = 1) #> List of 2 #>  $ 2L:11_2L:11: num [1:21, 1:21] 93476 NA NA NA NA ... #>  $ 2L:11_2L:12: num [1:21, 1:21] 29913 135797 NA NA NA ... #>  - attr(*, \"interactions\")=Formal class 'GInteractions' [package \"InteractionSet\"] with 6 slots #>  - attr(*, \"resolution\")= num 1e+05 #>  - attr(*, \"referencePoint\")= chr \"pf\" #>  - attr(*, \"matriceDim\")= num 21 #>  - attr(*, \"target\")=List of 2 #>  - attr(*, \"selection\")=function ()   #>   ..- attr(*, \"srcref\")= 'srcref' int [1:8] 34 18 36 1 18 1 34 36 #>   .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55d308356da8>  # This return the filtred matrices.lst, i.e the matrices.lst for which # the Beaf32<->Beaf32 interactions satisfy both targeting criteria.  # Filtration with InteractionsSet as filtration criteria target.lst <- list(interactions = Beaf_Beaf.gni[seq_len(2)]) FilterInteractions(     interarctions.gni = Beaf_Beaf.gni,     target.lst = target.lst,     selection.fun = NULL ) |> str(max.level = 1) #>  Named int [1:3] 1 2 138 #>  - attr(*, \"names\")= chr [1:3] \"interactions1\" \"interactions2\" \"interactions3\"   # Filtration with GRanges as filtration criteria target.lst <- list(first = InteractionSet::anchors(Beaf_Beaf.gni)[[\"first\"]][seq_len(2)]) FilterInteractions(     interarctions.gni = Beaf_Beaf.gni,     target.lst = target.lst,     selection.fun = NULL ) |> str(max.level = 1) #>  Named int [1:30] 1 2 138 139 275 276 412 413 549 550 ... #>  - attr(*, \"names\")= chr [1:30] \"first1\" \"first2\" \"first3\" \"first4\" ..."},{"path":"/reference/Gauss.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian formula. — Gauss","title":"Gaussian formula. — Gauss","text":"Gaussian formula 1 2 dimension.","code":""},{"path":"/reference/Gauss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian formula. — Gauss","text":"","code":"Gauss(x = NULL, y = NULL, sd.num = 1, mu = 0)"},{"path":"/reference/Gauss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian formula. — Gauss","text":"x <numeric>: x value. y <numeric>: y value 2 dimensional gaussian. sd.num <numeric>: standard deviation parameter gaussian. (Default 1) mu <numeric>: mean deviation parameter gaussian. (Default 0)","code":""},{"path":"/reference/Gauss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian formula. — Gauss","text":"Result Gaussian formula","code":""},{"path":"/reference/Gauss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gaussian formula. — Gauss","text":"Gauss","code":""},{"path":"/reference/Gauss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gaussian formula. — Gauss","text":"","code":"Gauss(x = 1) #> [1] 0.2419707 Gauss(x = 1, y = 2) #> [1] 0.01306423"},{"path":"/reference/GaussBox.html","id":null,"dir":"Reference","previous_headings":"","what":"One dimension Gaussian kernel. — GaussBox","title":"One dimension Gaussian kernel. — GaussBox","text":"One dimension Gaussian kernel.","code":""},{"path":"/reference/GaussBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One dimension Gaussian kernel. — GaussBox","text":"","code":"GaussBox(sd.num = 1, boxSize.num = NULL, scale.chr = \"1\")"},{"path":"/reference/GaussBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One dimension Gaussian kernel. — GaussBox","text":"sd.num <numeric>: standard deviation parameter gaussian. (Default 1) boxSize.num <numeric>: size kernel. NULL size 1+4*sd.num (Default NULL) scale.chr <character>: scaling kind box. \"1\" sum kernel equal 1. \"int\" Minimal value kernel 1 entry integer. \"none\", kernel scale. (Default \"1\")","code":""},{"path":"/reference/GaussBox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One dimension Gaussian kernel. — GaussBox","text":"numerical vector.","code":""},{"path":"/reference/GaussBox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"One dimension Gaussian kernel. — GaussBox","text":"GaussBox","code":""},{"path":"/reference/GaussBox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One dimension Gaussian kernel. — GaussBox","text":"","code":"GaussBox(sd.num = 5, scale.chr = \"none\") #>  [1] 0.01085322 0.01585008 0.02224289 0.02999424 0.03886614 0.04839406 #>  [7] 0.05790283 0.06657247 0.07354898 0.07808109 0.07965302 0.07808109 #> [13] 0.07354898 0.06657247 0.05790283 0.04839406 0.03886614 0.02999424 #> [19] 0.02224289 0.01585008 0.01085322 GaussBox(scale.chr = \"1\") #> [1] 0.06149471 0.24477773 0.38745511 0.24477773 0.06149471 GaussBox(scale.chr = \"int\") #> [1] 1 4 7 4 1"},{"path":"/reference/GenomicSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Base pairs convertion. — GenomicSystem","title":"Base pairs convertion. — GenomicSystem","text":"Convert numbers base string order magnitude (Kbp, Mbp, Gbp) vice versa.","code":""},{"path":"/reference/GenomicSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base pairs convertion. — GenomicSystem","text":"","code":"GenomicSystem(x, digits.num = 3)"},{"path":"/reference/GenomicSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base pairs convertion. — GenomicSystem","text":"x <character numeric>: number convert string convert. digits.num <integer>: number significant digits used. See signif() informations. (Default 3)","code":""},{"path":"/reference/GenomicSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Base pairs convertion. — GenomicSystem","text":"converted number string.","code":""},{"path":"/reference/GenomicSystem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Base pairs convertion. — GenomicSystem","text":"GenomicSystem","code":""},{"path":"/reference/GenomicSystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Base pairs convertion. — GenomicSystem","text":"","code":"GenomicSystem(1540, 3) #> [1] \"1.54Kbp\" GenomicSystem(1540, 2) #> [1] \"1.5Kbp\" GenomicSystem(\"1Mbp\") #> [1] 1e+06 GenomicSystem(\"1Kbp\") #> [1] 1000 GenomicSystem(\"1k\") #> [1] 1000"},{"path":"/reference/GetFileExtension.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file extension — GetFileExtension","title":"Get file extension — GetFileExtension","text":"Give extension file path.","code":""},{"path":"/reference/GetFileExtension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file extension — GetFileExtension","text":"","code":"GetFileExtension(path.pth = NULL)"},{"path":"/reference/GetFileExtension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file extension — GetFileExtension","text":"path.pth <character>: path file.","code":""},{"path":"/reference/GetFileExtension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file extension — GetFileExtension","text":"character string","code":""},{"path":"/reference/GetFileExtension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get file extension — GetFileExtension","text":"GetFileExtension","code":""},{"path":"/reference/GetFileExtension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file extension — GetFileExtension","text":"","code":"filePath.pth =\"my/path/to/my/file.txt\" GetFileExtension(path.pth=filePath.pth) #> [1] \"txt\""},{"path":"/reference/GetFileName.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file name. — GetFileName","title":"Get file name. — GetFileName","text":"Function `basename()` option return file extension.","code":""},{"path":"/reference/GetFileName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file name. — GetFileName","text":"","code":"GetFileName(path.pth = NULL, ext.bln = FALSE)"},{"path":"/reference/GetFileName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file name. — GetFileName","text":"path.pth <character>: path file. ext.bln <logical>: whether file extension returned file name. (Default FALSE)","code":""},{"path":"/reference/GetFileName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file name. — GetFileName","text":"character string.","code":""},{"path":"/reference/GetFileName.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get file name. — GetFileName","text":"GetFileName","code":""},{"path":"/reference/GetFileName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file name. — GetFileName","text":"","code":"filePath.pth =\"my/path/to/my/file.txt\" GetFileName(path.pth=filePath.pth, ext.bln=FALSE) #> [1] \"file\" GetFileName(path.pth=filePath.pth, ext.bln=TRUE) #> [1] \"file.txt\""},{"path":"/reference/GetQuantif.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute quantification on extracted submatrices. — GetQuantif","title":"Compute quantification on extracted submatrices. — GetQuantif","text":"Function computes quantification contact frequencies given area returns named vector.","code":""},{"path":"/reference/GetQuantif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute quantification on extracted submatrices. — GetQuantif","text":"","code":"GetQuantif(   matrices.lst,   area.fun = \"center\",   operation.fun = \"mean_rm0\",   name.chr = NULL )"},{"path":"/reference/GetQuantif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute quantification on extracted submatrices. — GetQuantif","text":"matrices.lst <List[matrix]>: matrices list. area.fun <character function>: character function allow extraction area matrix compose matrices list (Default \"center\"). \"C\" \"CENTER\": pixel intersection anchor bait. \"UL\" \"UPPER_LEFT\": pixels uppper left square \"UR\" \"UPPER_RIGHT\": pixels uppper right square \"BL\" \"BOTTOM_LEFT\": pixels bottom left square \"BR\" \"BOTTOM_RIGHT\": pixels bottom right square \"U\" \"UPPER\": pixels center area \"B\" \"BOTTOM\": pixels center area \"L\" \"LEFT\": pixels left center area \"R\" \"RIGHT\": pixels right center area \"D\" \"DONUT\": pixels surrounds center area operation.fun <character function>: character function specifying operation used get quantification (Default \"mean_rm0\"). \"mean_rm0\": apply mean replace 0 NA \"median_rm0\": apply median replace 0 NA \"sum_rm0\": apply sum replace 0 NA \"median\": apply median \"sum\": apply sum \"mean\" character: apply mean name.chr <character>: name column GInteraction attributes matrices.lst used named output vector (Default NULL). default, sub-matrices IDs used.","code":""},{"path":"/reference/GetQuantif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute quantification on extracted submatrices. — GetQuantif","text":"GRange object.","code":""},{"path":"/reference/GetQuantif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute quantification on extracted submatrices. — GetQuantif","text":"GetQuantif","code":""},{"path":"/reference/GetQuantif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute quantification on extracted submatrices. — GetQuantif","text":"","code":"# Data data(Beaf32_Peaks.gnr) data(HiC_Ctrl.cmx_lst)  # Index Beaf32 Beaf32_Index.gnr <- IndexFeatures(     gRange.gnr_lst = list(Beaf = Beaf32_Peaks.gnr),     chromSize.dtf = data.frame(         seqnames = c(\"2L\", \"2R\"),         seqlengths = c(23513712, 25286936)     ),     binSize.num = 100000 )  # Beaf32 <-> Beaf32 Pairing Beaf_Beaf.gni <- SearchPairs(indexAnchor.gnr = Beaf32_Index.gnr) Beaf_Beaf.gni <- Beaf_Beaf.gni[seq_len(2000)] # subset 2000 first for exemple  # Matrices extractions center on Beaf32 <-> Beaf32 point interaction interactions_PF.mtx_lst <- ExtractSubmatrix(     feature.gn = Beaf_Beaf.gni,     hic.cmx_lst = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"pf\" ) GetQuantif(     matrices.lst = interactions_PF.mtx_lst,     area.fun = \"center\",     operation.fun = \"mean\" ) |> head() #> 2L:11_2L:11 2L:11_2L:12 2L:11_2L:17 2L:11_2L:20 2L:11_2L:22 2L:11_2L:23  #>  43065.5000  31422.8750   1866.5556    779.7778    788.0000    760.1111"},{"path":"/reference/HiC_Ctrl.cmx_lst.html","id":null,"dir":"Reference","previous_headings":"","what":"In situ Hi-C control. — HiC_Ctrl.cmx_lst","title":"In situ Hi-C control. — HiC_Ctrl.cmx_lst","text":"situ Hi-C non-heat treated S2 cells (Drosophila Melanogaster) MboI chromosome 2R 2L download [4DN](https://data.4dnucleome.org/experiment-set-replicates/4DNESFOADERB/) portal (Ray J, Munn PR, et al., 2019). data result Genomic2DTK::ImportHiC function.","code":""},{"path":"/reference/HiC_Ctrl.cmx_lst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In situ Hi-C control. — HiC_Ctrl.cmx_lst","text":"","code":"data(HiC_Ctrl.cmx_lst)"},{"path":"/reference/HiC_Ctrl.cmx_lst.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"In situ Hi-C control. — HiC_Ctrl.cmx_lst","text":"list ContactMatrix objects. element correspond interaction matrix two chromosomes.","code":""},{"path":"/reference/HiC_Ctrl.cmx_lst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"In situ Hi-C control. — HiC_Ctrl.cmx_lst","text":"","code":"data(HiC_Ctrl.cmx_lst) HiC_Ctrl.cmx_lst #> $`2L_2L` #> class: ContactMatrix  #> dim: 236 236  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 236 #>  #> $`2L_2R` #> class: ContactMatrix  #> dim: 236 253  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 489 #>  #> $`2R_2R` #> class: ContactMatrix  #> dim: 253 253  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 253 #>  #> attr(,\"resolution\") #> [1] 1e+05 #> attr(,\"chromSize\") #> # A tibble: 2 × 3 #>   name    length dimension #>   <chr>    <dbl>     <dbl> #> 1 2L    23513712       236 #> 2 2R    25286936       253 #> attr(,\"matricesKind\") #> # A tibble: 3 × 4 #>   name  type  kind  symmetric #>   <chr> <chr> <chr> <lgl>     #> 1 2L_2L cis   U     TRUE      #> 2 2L_2R trans NA    FALSE     #> 3 2R_2R cis   U     TRUE      #> attr(,\"mtx\") #> [1] \"obs\""},{"path":"/reference/HiC_HS.cmx_lst.html","id":null,"dir":"Reference","previous_headings":"","what":"In situ Hi-C heat treated. — HiC_HS.cmx_lst","title":"In situ Hi-C heat treated. — HiC_HS.cmx_lst","text":"situ Hi-C heat treated S2 cells (Drosophila Melanogaster) MboI chromosome 2R 2L download [4DN](https://data.4dnucleome.org/experiment-set-replicates/4DNESFI64TG3/) portal (Ray J, Munn PR, et al., 2019). data result Genomic2DTK::ImportHiC function.","code":""},{"path":"/reference/HiC_HS.cmx_lst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In situ Hi-C heat treated. — HiC_HS.cmx_lst","text":"","code":"data(HiC_HS.cmx_lst)"},{"path":"/reference/HiC_HS.cmx_lst.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"In situ Hi-C heat treated. — HiC_HS.cmx_lst","text":"list ContactMatrix objects. element correspond interaction matrix two chromosomes.","code":""},{"path":"/reference/HiC_HS.cmx_lst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"In situ Hi-C heat treated. — HiC_HS.cmx_lst","text":"","code":"data(HiC_HS.cmx_lst) HiC_HS.cmx_lst #> $`2L_2L` #> class: ContactMatrix  #> dim: 236 236  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 236 #>  #> $`2L_2R` #> class: ContactMatrix  #> dim: 236 253  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 489 #>  #> $`2R_2R` #> class: ContactMatrix  #> dim: 253 253  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(5): name type kind symmetric resolution #> regions: 253 #>  #> attr(,\"resolution\") #> [1] 1e+05 #> attr(,\"chromSize\") #> # A tibble: 2 × 3 #>     length name  dimension #>      <int> <chr>     <dbl> #> 1 23513712 2L          236 #> 2 25286936 2R          253 #> attr(,\"matricesKind\") #> # A tibble: 3 × 4 #>   name  type  kind  symmetric #>   <chr> <chr> <chr> <lgl>     #> 1 2L_2L cis   U     TRUE      #> 2 2L_2R trans NA    FALSE     #> 3 2R_2R cis   U     TRUE      #> attr(,\"mtx\") #> [1] \"obs\""},{"path":"/reference/Hsl2Hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert HSL to Hex. — Hsl2Hex","title":"Convert HSL to Hex. — Hsl2Hex","text":"Convert color HSL (Hue,Saturation,Light) hexadecimal format.","code":""},{"path":"/reference/Hsl2Hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert HSL to Hex. — Hsl2Hex","text":"","code":"Hsl2Hex(hsl.col = NULL, alpha.bln = FALSE)"},{"path":"/reference/Hsl2Hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert HSL to Hex. — Hsl2Hex","text":"hsl.col <charcater>: vector color's HSL code. alpha.bln <logical>: whether alpha layer returned. (Default FALSE)","code":""},{"path":"/reference/Hsl2Hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert HSL to Hex. — Hsl2Hex","text":"character color's hexadecimal code.","code":""},{"path":"/reference/Hsl2Hex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert HSL to Hex. — Hsl2Hex","text":"Hsl2Hex","code":""},{"path":"/reference/Hsl2Hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert HSL to Hex. — Hsl2Hex","text":"","code":"Hsl2Hex(c(43.8, 0.873, 0.492, 0.498), alpha.bln = TRUE) #> [1] \"#ebb0107f\""},{"path":"/reference/Hsl2Rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert HSL to RGB. — Hsl2Rgb","title":"Convert HSL to RGB. — Hsl2Rgb","text":"Convert color HSl (Hue,Saturation,Light) format RGB format.","code":""},{"path":"/reference/Hsl2Rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert HSL to RGB. — Hsl2Rgb","text":"","code":"Hsl2Rgb(hsl.col = NULL, alpha.bln = FALSE)"},{"path":"/reference/Hsl2Rgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert HSL to RGB. — Hsl2Rgb","text":"hsl.col <charcater>: vector color's HSL code. alpha.bln <logical>: whether alpha layer returned. (Default FALSE)","code":""},{"path":"/reference/Hsl2Rgb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert HSL to RGB. — Hsl2Rgb","text":"integer vector color's RGB code.","code":""},{"path":"/reference/Hsl2Rgb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert HSL to RGB. — Hsl2Rgb","text":"Hsl2Rgb","code":""},{"path":"/reference/Hsl2Rgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert HSL to RGB. — Hsl2Rgb","text":"","code":"Hsl2Rgb(c(43.8, 0.873, 0.492, 0.498), alpha.bln = TRUE) #>   red green  blue alpha  #>   235   176    16   127"},{"path":"/reference/Hue.html","id":null,"dir":"Reference","previous_headings":"","what":"Hue palette. — Hue","title":"Hue palette. — Hue","text":"Create Hue palette.","code":""},{"path":"/reference/Hue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hue palette. — Hue","text":"","code":"Hue(   paletteLength.num = 9,   rotation.num = NULL,   hueRange.num = c(0, 360),   saturation.num = 0.65,   lightness.num = 0.65,   alpha.num = 1,   alpha.bln = FALSE )"},{"path":"/reference/Hue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hue palette. — Hue","text":"paletteLength.num <numeric>: color number. rotation.num <numeric>: positive, rotates clockwise color space, reversing number negative. NULL compute rotation according hueRange.num parameter. (Default NULL) hueRange.num <numeric>: Degree range color space 0 360. (Default c(0,360)) saturation.num <numeric>: Saturation value 0 1. (Default 0.65) lightness.num <numeric>: Lightness value 0 1. (Default 0.65) alpha.num <numeric>: Opacity value 0 1. (Default 1) alpha.bln <logical>: whether alpha layer returned. (Default FALSE)","code":""},{"path":"/reference/Hue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hue palette. — Hue","text":"vector color.","code":""},{"path":"/reference/Hue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hue palette. — Hue","text":"Hue","code":""},{"path":"/reference/Hue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hue palette. — Hue","text":"","code":"Hue(paletteLength.num = 9) #> [1] \"#e06c6c\" \"#e0b96c\" \"#b9e06c\" \"#6ce06c\" \"#6ce0b9\" \"#6cbae0\" \"#6c6ce0\" #> [8] \"#b86ce0\" \"#e06cba\""},{"path":"/reference/ICEnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Iterative Correction. — ICEnorm","title":"Compute Iterative Correction. — ICEnorm","text":"Compute Iterative Correction (Vanilla Count) hic maps.","code":""},{"path":"/reference/ICEnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Iterative Correction. — ICEnorm","text":"","code":"ICEnorm(hic.cmx, qtlTh.num = 0.15, maxIter.num = 50)"},{"path":"/reference/ICEnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Iterative Correction. — ICEnorm","text":"hic.cmx <contactMatrix>: HiC maps chunk normalize. qtlTh.num <numerical>: threshold quantile bins ignored. (Default 0.15) maxIter.num <numerical>: maximum iteration number.","code":""},{"path":"/reference/ICEnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Iterative Correction. — ICEnorm","text":"normalized contactMatrix","code":""},{"path":"/reference/ICEnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Iterative Correction. — ICEnorm","text":"ICEnorm","code":""},{"path":"/reference/ICEnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Iterative Correction. — ICEnorm","text":"","code":"data(HiC_Ctrl.cmx_lst) HiC_Ctrl_ICE.cmx <- ICEnorm(HiC_Ctrl.cmx_lst[['2L_2L']])"},{"path":"/reference/ImportHiC.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Hic data — ImportHiC","title":"Import Hic data — ImportHiC","text":"Import ..hic, .cool, .mcool .bedpe data","code":""},{"path":"/reference/ImportHiC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Hic data — ImportHiC","text":"","code":"ImportHiC(   file.pth = NULL,   res.num = NULL,   chromSize.dtf = NULL,   chrom_1.chr = NULL,   chrom_2.chr = NULL,   verbose.bln = FALSE,   cores.num = 1 )"},{"path":"/reference/ImportHiC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Hic data — ImportHiC","text":"file.pth <GRanges Pairs[GRanges] GInteractions>: genomic feature compute extraction HiC submatrix. Extension .hic, .cool, .mcool, .h5, .hdf5, .HDF5 .bedpe\" assuming .h5 et .hdf5 cool (mcool). res.num <numeric>: HiC resolution. chromSize.dtf <data.frame>: data.frame first colum correspond chromosomes names, second column correspond chromosomes lengths base pairs. chrom_1.chr <numeric>: seqnames firsts chromosmes (rows matrix). chrom_2.chr <numeric>: seqnames second chromosmes (col matrix). NULL equal chrom_1.chr (Defalt NULL) verbose.bln <logical>: TRUE show progression console. (Default FALSE) cores.num <numerical> : integer specify number cores. (Default 1)","code":""},{"path":"/reference/ImportHiC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Hic data — ImportHiC","text":"matrices list.","code":""},{"path":"/reference/ImportHiC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Hic data — ImportHiC","text":"ImportHiC","code":""},{"path":"/reference/ImportHiC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Hic data — ImportHiC","text":"","code":"# \\donttest{  # Prepare Temp Directory options(timeout = 3600) temp.dir <- file.path(tempdir(), \"HIC_DATA\") dir.create(temp.dir)  # Download .hic file Hic.url <- paste0(     \"https://4dn-open-data-public.s3.amazonaws.com/\",     \"fourfront-webprod/wfoutput/\",     \"7386f953-8da9-47b0-acb2-931cba810544/4DNFIOTPSS3L.hic\" ) HicOutput.pth <- file.path(temp.dir, \"Control_HIC.hic\") download.file(Hic.url, HicOutput.pth, method = \"curl\", extra = \"-k\")  # Import .hic file HiC_Ctrl.cmx_lst <- ImportHiC(     file.pth = HicOutput.pth,     res.num = 100000,     chrom_1.chr = c(\"2L\", \"2L\", \"2R\"),     chrom_2.chr = c(\"2L\", \"2R\", \"2R\") )  # Download .mcool file Mcool.url <- paste0(     \"https://4dn-open-data-public.s3.amazonaws.com/\",     \"fourfront-webprod/wfoutput/\",     \"4f1479a2-4226-4163-ba99-837f2c8f4ac0/4DNFI8DRD739.mcool\" ) McoolOutput.pth <- file.path(temp.dir, \"HeatShock_HIC.mcool\") download.file(Mcool.url, McoolOutput.pth, method = \"curl\", extra = \"-k\")  # Import .mcool file HiC_HS.cmx_lst <- ImportHiC(     file.pth = McoolOutput.pth,     res.num = 100000,     chrom_1.chr = c(\"2L\", \"2L\", \"2R\"),     chrom_2.chr = c(\"2L\", \"2R\", \"2R\") ) # }"},{"path":"/reference/IndexFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Indexes GRanges on genome. — IndexFeatures","title":"Indexes GRanges on genome. — IndexFeatures","text":"Function indexes GRanges object binned genome constraints. Needed prior Genomic2DTK::SearchPairs() function.","code":""},{"path":"/reference/IndexFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indexes GRanges on genome. — IndexFeatures","text":"","code":"IndexFeatures(   gRange.gnr_lst = NULL,   constraint.gnr = NULL,   chromSize.dtf = NULL,   binSize.num = NULL,   method.chr = \"mean\",   variablesName.chr_vec = NULL,   cores.num = 1,   verbose.bln = FALSE )"},{"path":"/reference/IndexFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indexes GRanges on genome. — IndexFeatures","text":"gRange.gnr_lst <GRanges GRangesList list[GRanges]>: GRanges object, list GRanges GRangesList containing coordinates index. constraint.gnr <GRanges>: GRanges object constraint regions. Note bins constraint region paired Genomic2DTK::SearchPairs(). NULL chromosomes chromSize.dtf used constraints (Default NULL) chromSize.dtf <data.frame>: data.frame containing chromosomes names lengths base pairs (see example). binSize.num <integer>: Bin size bp - corresponds HiC matrix resolution. method.chr <character>: string defining summary method used metadata columns defined variablesName.chr_vec multiple ranges indexed bin. Use 'mean', 'median', 'sum', 'max' 'min'. (Default 'mean'') variablesName.chr_vec <character> : character vector specify metadata columns GRanges apply summary method multiple ranges indexed bin. cores.num <integer> : Number cores used. (Default 1) verbose.bln <logical>: TRUE show progression console. (Default FALSE)","code":""},{"path":"/reference/IndexFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indexes GRanges on genome. — IndexFeatures","text":"GRanges object.","code":""},{"path":"/reference/IndexFeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Indexes GRanges on genome. — IndexFeatures","text":"IndexFeatures","code":""},{"path":"/reference/IndexFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indexes GRanges on genome. — IndexFeatures","text":"","code":"data(Beaf32_Peaks.gnr) Beaf32_Index.gnr <- IndexFeatures(     gRange.gnr_lst = list(Beaf = Beaf32_Peaks.gnr),     chromSize.dtf = data.frame(         seqnames = c(\"2L\", \"2R\"),         seqlengths = c(23513712, 25286936)     ),     binSize.num = 100000 )"},{"path":"/reference/IsHsl.html","id":null,"dir":"Reference","previous_headings":"","what":"Check HSL color format. — IsHsl","title":"Check HSL color format. — IsHsl","text":"Check color HSL color format.","code":""},{"path":"/reference/IsHsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check HSL color format. — IsHsl","text":"","code":"IsHsl(color.col = NULL)"},{"path":"/reference/IsHsl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check HSL color format. — IsHsl","text":"color.col <character numeric>: color.","code":""},{"path":"/reference/IsHsl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check HSL color format. — IsHsl","text":"logical.","code":""},{"path":"/reference/IsHsl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check HSL color format. — IsHsl","text":"IsHsl","code":""},{"path":"/reference/IsHsl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check HSL color format. — IsHsl","text":"","code":"IsHsl(\"red\") #> [1] FALSE IsHsl(\"#FFFFFF\") #> [1] FALSE IsHsl(c(125, 125, 125)) #> [1] FALSE IsHsl(c(43.8, 0.873, 0.492)) #> [1] TRUE"},{"path":"/reference/IsRgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Check RGB color format. — IsRgb","title":"Check RGB color format. — IsRgb","text":"Check color RGB color format.","code":""},{"path":"/reference/IsRgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check RGB color format. — IsRgb","text":"","code":"IsRgb(color.col = NULL)"},{"path":"/reference/IsRgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check RGB color format. — IsRgb","text":"color.col <character numeric>: color.","code":""},{"path":"/reference/IsRgb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check RGB color format. — IsRgb","text":"logical.","code":""},{"path":"/reference/IsRgb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check RGB color format. — IsRgb","text":"IsRgb","code":""},{"path":"/reference/IsRgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check RGB color format. — IsRgb","text":"","code":"IsRgb(\"red\") #> [1] FALSE IsRgb(\"#FFFFFF\") #> [1] FALSE IsRgb(c(125, 125, 125)) #> [1] TRUE IsRgb(c(43.8, 0.873, 0.492)) #> [1] FALSE"},{"path":"/reference/JoinHiC.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge HiC chunk. — JoinHiC","title":"Merge HiC chunk. — JoinHiC","text":"Create mega contactMatrix list contactMatrix.","code":""},{"path":"/reference/JoinHiC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge HiC chunk. — JoinHiC","text":"","code":"JoinHiC(hic.cmx_lst)"},{"path":"/reference/JoinHiC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge HiC chunk. — JoinHiC","text":"hic.cmx_lst <List[contactMatrix]>: HiC maps list.","code":""},{"path":"/reference/JoinHiC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge HiC chunk. — JoinHiC","text":"contactMatrix.","code":""},{"path":"/reference/JoinHiC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge HiC chunk. — JoinHiC","text":"JoinHiC","code":""},{"path":"/reference/JoinHiC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge HiC chunk. — JoinHiC","text":"","code":"data(HiC_Ctrl.cmx_lst) Mega_Ctrl.cmx <- JoinHiC(HiC_Ctrl.cmx_lst)"},{"path":"/reference/MakeParallelParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure parallel parameters. — MakeParallelParam","title":"Configure parallel parameters. — MakeParallelParam","text":"Create BiocParallel parameter according OS.","code":""},{"path":"/reference/MakeParallelParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure parallel parameters. — MakeParallelParam","text":"","code":"MakeParallelParam(cores.num = 1, verbose.bln = FALSE)"},{"path":"/reference/MakeParallelParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure parallel parameters. — MakeParallelParam","text":"cores.num <numerical> : integer specify number cores. (Default 1) verbose.bln <logical>: logical value. TRUE show progression console. (Default TRUE)","code":""},{"path":"/reference/MakeParallelParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure parallel parameters. — MakeParallelParam","text":"return parrallel parameter according number cores OS use BiocParallel package.","code":""},{"path":"/reference/MakeParallelParam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure parallel parameters. — MakeParallelParam","text":"MakeParallelParam","code":""},{"path":"/reference/MakeParallelParam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure parallel parameters. — MakeParallelParam","text":"","code":"multicoreParam <- MakeParallelParam(2) BiocParallel::bplapply(BPPARAM = multicoreParam, seq_len(3), sqrt) #> [[1]] #> [1] 1 #>  #> [[2]] #> [1] 1.414214 #>  #> [[3]] #> [1] 1.732051 #>"},{"path":"/reference/MeanScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale values by mean. — MeanScale","title":"Scale values by mean. — MeanScale","text":"Scale values mean.","code":""},{"path":"/reference/MeanScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale values by mean. — MeanScale","text":"","code":"MeanScale(x.num)"},{"path":"/reference/MeanScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale values by mean. — MeanScale","text":"x.num <numeric>: numerical vector.","code":""},{"path":"/reference/MeanScale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale values by mean. — MeanScale","text":"scaled numeric vector.","code":""},{"path":"/reference/MeanScale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scale values by mean. — MeanScale","text":"MeanScale","code":""},{"path":"/reference/MeanScale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale values by mean. — MeanScale","text":"","code":"set.seed(655213) x.num <- rnorm(500, 500) set.seed(522613) y.num <- rnorm(500, 100) plot(density(x.num), col = \"red\", xlim = c(min(y.num), max(x.num))) lines(density(y.num), col = \"green\")  plot(density(MeanScale(x.num)), col = \"red\", xlim = c(min(MeanScale(y.num)), max(MeanScale(x.num)))) lines(density(MeanScale(y.num)), col = \"green\")"},{"path":"/reference/MeltSpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce matrix in tibble. — MeltSpm","title":"Coerce matrix in tibble. — MeltSpm","text":"Coerce sparse matrix M tibble columns: row index, j column index x value M[,j].","code":""},{"path":"/reference/MeltSpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce matrix in tibble. — MeltSpm","text":"","code":"MeltSpm(mat.spm = NULL)"},{"path":"/reference/MeltSpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce matrix in tibble. — MeltSpm","text":"mat.spm <dgCMatrix dgCMatrix coercible>: matrix.","code":""},{"path":"/reference/MeltSpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce matrix in tibble. — MeltSpm","text":"tibble.","code":""},{"path":"/reference/MeltSpm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce matrix in tibble. — MeltSpm","text":"MeltSpm","code":""},{"path":"/reference/MeltSpm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce matrix in tibble. — MeltSpm","text":"","code":"i <- c(1, 1, 2, 2, 3, 3, 4, 4, 4, 4) j <- c(1, 4, 2, 5, 1, 4, 2, 3, 4, 5) x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) mat.spm <- Matrix::sparseMatrix(i = i, j = j, x = x, dims = c(5, 5)) mat.spm #> 5 x 5 sparse Matrix of class \"dgCMatrix\" #>                 #> [1,] 1 . . 2  . #> [2,] . 3 . .  4 #> [3,] 5 . . 6  . #> [4,] . 7 8 9 10 #> [5,] . . . .  . meltedMat.tbl <- MeltSpm(mat.spm) meltedMat.tbl[order(meltedMat.tbl$i), ] #> # A tibble: 10 × 3 #>        i     j     x #>    <int> <int> <dbl> #>  1     1     1     1 #>  2     1     4     2 #>  3     2     2     3 #>  4     2     5     4 #>  5     3     1     5 #>  6     3     4     6 #>  7     4     2     7 #>  8     4     3     8 #>  9     4     4     9 #> 10     4     5    10"},{"path":"/reference/MergeGRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge GRanges. — MergeGRanges","title":"Merge GRanges. — MergeGRanges","text":"Merge GRanges list GRanges","code":""},{"path":"/reference/MergeGRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge GRanges. — MergeGRanges","text":"","code":"MergeGRanges(..., sort.bln = FALSE, reduce.bln = FALSE)"},{"path":"/reference/MergeGRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge GRanges. — MergeGRanges","text":"... <GRanges GRangesList list[GRanges]>: GRanges list GRanges GRangesList. sort.bln <logical>: whether result sorted. (Default FALSE) reduce.bln <logical>: whether result reduce. See GenomicRanges::reduce details. (Default FALSE)","code":""},{"path":"/reference/MergeGRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge GRanges. — MergeGRanges","text":"GRange object.","code":""},{"path":"/reference/MergeGRanges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge GRanges. — MergeGRanges","text":"MergeGRanges","code":""},{"path":"/reference/MergeGRanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge GRanges. — MergeGRanges","text":"","code":"GRange_1.grn <- GenomicRanges::GRanges(     seqnames = S4Vectors::Rle(c(\"chr1\", \"chr2\", \"chr1\"), c(1, 3, 1)),     ranges = IRanges::IRanges(101:105, end = 111:115, names = letters[seq_len(5)]),     strand = S4Vectors::Rle(BiocGenerics::strand(c(\"-\", \"+\", \"*\", \"+\")), c(1, 1, 2, 1)),     score = seq_len(5) ) GRange_2.grn <- GenomicRanges::GRanges(     seqnames = S4Vectors::Rle(c(\"chr1\", \"chr3\"), c(1, 4)),     ranges = IRanges::IRanges(106:110, end = 116:120, names = letters[6:10]),     strand = S4Vectors::Rle(BiocGenerics::strand(c(\"*\", \"+\", \"-\")), c(2, 1, 2)),     score = 6:10 ) GRange_1.grn #> GRanges object with 5 ranges and 1 metadata column: #>     seqnames    ranges strand |     score #>        <Rle> <IRanges>  <Rle> | <integer> #>   a     chr1   101-111      - |         1 #>   b     chr2   102-112      + |         2 #>   c     chr2   103-113      * |         3 #>   d     chr2   104-114      * |         4 #>   e     chr1   105-115      + |         5 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths GRange_2.grn #> GRanges object with 5 ranges and 1 metadata column: #>     seqnames    ranges strand |     score #>        <Rle> <IRanges>  <Rle> | <integer> #>   f     chr1   106-116      * |         6 #>   g     chr3   107-117      * |         7 #>   h     chr3   108-118      + |         8 #>   i     chr3   109-119      - |         9 #>   j     chr3   110-120      - |        10 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths MergeGRanges(GRange_1.grn, GRange_2.grn) #> GRanges object with 10 ranges and 1 metadata column: #>     seqnames    ranges strand |     score #>        <Rle> <IRanges>  <Rle> | <integer> #>   a     chr1   101-111      - |         1 #>   b     chr2   102-112      + |         2 #>   c     chr2   103-113      * |         3 #>   d     chr2   104-114      * |         4 #>   e     chr1   105-115      + |         5 #>   f     chr1   106-116      * |         6 #>   g     chr3   107-117      * |         7 #>   h     chr3   108-118      + |         8 #>   i     chr3   109-119      - |         9 #>   j     chr3   110-120      - |        10 #>   ------- #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths GRange.lst <- list(GRange_1.grn, GRange_2.grn) MergeGRanges(GRange.lst) #> GRanges object with 10 ranges and 1 metadata column: #>     seqnames    ranges strand |     score #>        <Rle> <IRanges>  <Rle> | <integer> #>   a     chr1   101-111      - |         1 #>   b     chr2   102-112      + |         2 #>   c     chr2   103-113      * |         3 #>   d     chr2   104-114      * |         4 #>   e     chr1   105-115      + |         5 #>   f     chr1   106-116      * |         6 #>   g     chr3   107-117      * |         7 #>   h     chr3   108-118      + |         8 #>   i     chr3   109-119      - |         9 #>   j     chr3   110-120      - |        10 #>   ------- #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths MergeGRanges(GRange.lst, reduce.bln = TRUE) #> GRanges object with 8 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1   105-115      + #>   [2]     chr1   101-111      - #>   [3]     chr1   106-116      * #>   [4]     chr2   102-112      + #>   [5]     chr2   103-114      * #>   [6]     chr3   108-118      + #>   [7]     chr3   109-120      - #>   [8]     chr3   107-117      * #>   ------- #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"/reference/MinMaxScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales values on min-max range. — MinMaxScale","title":"Scales values on min-max range. — MinMaxScale","text":"Scale values min-max range.","code":""},{"path":"/reference/MinMaxScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales values on min-max range. — MinMaxScale","text":"","code":"MinMaxScale(x.num, min.num = (0), max.num = 1)"},{"path":"/reference/MinMaxScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales values on min-max range. — MinMaxScale","text":"x.num <numeric>: numerical vector. min.num <numeric>: minimal value scaling. max.num <numeric>: maximal value scaling.","code":""},{"path":"/reference/MinMaxScale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scales values on min-max range. — MinMaxScale","text":"scaled numeric vector.","code":""},{"path":"/reference/MinMaxScale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scales values on min-max range. — MinMaxScale","text":"MinMaxScale","code":""},{"path":"/reference/MinMaxScale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales values on min-max range. — MinMaxScale","text":"","code":"set.seed(655213) x.num <- rnorm(500, 500) set.seed(522613) y.num <- rnorm(500, 100) plot(density(x.num), col = \"red\", xlim = c(min(y.num), max(x.num))) lines(density(y.num), col = \"green\")  plot(density(MinMaxScale(x.num)), col = \"red\", xlim = c(min(MinMaxScale(y.num)), max(MinMaxScale(x.num)))) lines(density(MinMaxScale(y.num)), col = \"green\")"},{"path":"/reference/NotIn.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclusion binary operator. — NotIn","title":"Exclusion binary operator. — NotIn","text":"Binary operator, inverse %%.","code":""},{"path":"/reference/NotIn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclusion binary operator. — NotIn","text":"","code":"NotIn(lhs, rhs)"},{"path":"/reference/NotIn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclusion binary operator. — NotIn","text":"lhs <vector NULL>: values compared rhs rhs <vector NULL>: values compared lhs","code":""},{"path":"/reference/NotIn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclusion binary operator. — NotIn","text":"boolean.","code":""},{"path":"/reference/NotIn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exclusion binary operator. — NotIn","text":"NotIn","code":""},{"path":"/reference/NotIn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclusion binary operator. — NotIn","text":"","code":"\"A\" |> NotIn(c(\"A\", \"B\", \"C\")) #> [1] FALSE \"A\" |> NotIn(c(\"B\", \"C\", \"D\")) #> [1] TRUE NotIn(\"A\", c(\"A\", \"B\", \"C\")) #> [1] FALSE NotIn(\"A\", c(\"B\", \"C\", \"D\")) #> [1] TRUE"},{"path":"/reference/OrienteMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracted matrix orientation — OrienteMatrix","title":"Extracted matrix orientation — OrienteMatrix","text":"Oriente extracted Matrix according anchors bait order. Apply 180° rotation follow transposation matrix matricies list according interactions attributes list.","code":""},{"path":"/reference/OrienteMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracted matrix orientation — OrienteMatrix","text":"","code":"OrienteMatrix(matrice.mtx)"},{"path":"/reference/OrienteMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracted matrix orientation — OrienteMatrix","text":"matrice.mtx <matrix List[matrix]>: matrix matricies list oriente","code":""},{"path":"/reference/OrienteMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracted matrix orientation — OrienteMatrix","text":"Oriented matrix matricies list","code":""},{"path":"/reference/OrienteMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracted matrix orientation — OrienteMatrix","text":"OrienteMatrix","code":""},{"path":"/reference/OrienteMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracted matrix orientation — OrienteMatrix","text":"","code":"# Data data(Beaf32_Peaks.gnr) data(HiC_Ctrl.cmx_lst)  # Index Beaf32 in TADs domains Beaf32_Index.gnr <- IndexFeatures(     gRange.gnr_lst = list(Beaf = Beaf32_Peaks.gnr),     chromSize.dtf = data.frame(         seqnames = c(\"2L\", \"2R\"),         seqlengths = c(23513712, 25286936)     ),     binSize.num = 100000 )  # Beaf32 <-> Beaf32 Pairing Beaf_Beaf.gni <- SearchPairs(indexAnchor.gnr = Beaf32_Index.gnr) Beaf_Beaf.gni <- Beaf_Beaf.gni[seq_len(2000)] # subset 2000 first for exemple  # Matrices extractions center on Beaf32 <-> Beaf32 point interaction interactions_PF.mtx_lst <- ExtractSubmatrix(     feature.gn = Beaf_Beaf.gni,     hic.cmx_lst = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"pf\" )  # Matrices Orientation oriented_Interactions_PF.mtx_lst <- OrienteMatrix(interactions_PF.mtx_lst) #> 677 matrices are oriented"},{"path":"/reference/OverExpectedHiC.html","id":null,"dir":"Reference","previous_headings":"","what":"Genomic distance bias correction. — OverExpectedHiC","title":"Genomic distance bias correction. — OverExpectedHiC","text":"Function normalises HiC matrices expected values computing genomic distance.","code":""},{"path":"/reference/OverExpectedHiC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genomic distance bias correction. — OverExpectedHiC","text":"","code":"OverExpectedHiC(hic.cmx_lst, verbose.bln = FALSE, cores.num = 1)"},{"path":"/reference/OverExpectedHiC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Genomic distance bias correction. — OverExpectedHiC","text":"hic.cmx_lst <List[contactMatrix]>: HiC maps list. verbose.bln <logical>: TRUE show progression console. (Default FALSE) cores.num <numerical> : Number cores used. (Default 1)","code":""},{"path":"/reference/OverExpectedHiC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Genomic distance bias correction. — OverExpectedHiC","text":"matrices list.","code":""},{"path":"/reference/OverExpectedHiC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Genomic distance bias correction. — OverExpectedHiC","text":"OverExpectedHiC","code":""},{"path":"/reference/OverExpectedHiC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genomic distance bias correction. — OverExpectedHiC","text":"","code":"# Note: run Genomic2DTK::BalanceHiC before OverExpectedHiC calculation. data(HiC_Ctrl.cmx_lst) OverExpectedHiC(HiC_Ctrl.cmx_lst) #> $`2L_2L` #> class: ContactMatrix  #> dim: 236 236  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(6): name type ... resolution expected #> regions: 236 #>  #> $`2L_2R` #> class: ContactMatrix  #> dim: 236 253  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(6): name type ... resolution expected #> regions: 489 #>  #> $`2R_2R` #> class: ContactMatrix  #> dim: 253 253  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(6): name type ... resolution expected #> regions: 253 #>  #> attr(,\"resolution\") #> [1] 100000 #> attr(,\"chromSize\") #> # A tibble: 2 × 3 #>   name    length dimension #>   <chr>    <dbl>     <dbl> #> 1 2L    23513712       236 #> 2 2R    25286936       253 #> attr(,\"matricesKind\") #> # A tibble: 3 × 4 #>   name  type  kind  symmetric #>   <chr> <chr> <chr> <lgl>     #> 1 2L_2L cis   U     TRUE      #> 2 2L_2R trans NA    FALSE     #> 3 2R_2R cis   U     TRUE      #> attr(,\"mtx\") #> [1] \"o/e\" #> attr(,\"expected\") #> # A tibble: 253 × 2 #>    distance expected #>       <dbl>    <dbl> #>  1        1   44559. #>  2   100001   12794. #>  3   200001    3665. #>  4   300001    2130. #>  5   400001    1445. #>  6   500001    1092. #>  7   600001     876. #>  8   700001     739. #>  9   800001     625. #> 10   900001     550. #> # … with 243 more rows"},{"path":"/reference/PadMtx.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a value around a matrix. — PadMtx","title":"Add a value around a matrix. — PadMtx","text":"Add value around matrix.","code":""},{"path":"/reference/PadMtx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a value around a matrix. — PadMtx","text":"","code":"PadMtx(   mat.mtx = NULL,   padSize.num = 1,   value.num = 0,   side.chr = c(\"top\", \"bot\", \"right\", \"left\") )"},{"path":"/reference/PadMtx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a value around a matrix. — PadMtx","text":"mat.mtx <matrix>: numerical matrix. padSize.num <numeric>: number columns rows add. (Default 1) value.num <numeric>: value add. Null create mirror choosen sides. (Default 0) side.chr <character>: side pad, must one 'top','bot','right' 'left'. (Default c('top','bot','right','left') )","code":""},{"path":"/reference/PadMtx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a value around a matrix. — PadMtx","text":"matrix.","code":""},{"path":"/reference/PadMtx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a value around a matrix. — PadMtx","text":"PadMtx","code":""},{"path":"/reference/PadMtx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a value around a matrix. — PadMtx","text":"","code":"mat.mtx <- matrix(seq_len(25), 5, 5) PadMtx(mat.mtx = mat.mtx, padSize.num = 1, value.num = 0, side.chr = c(\"top\", \"bot\", \"right\", \"left\")) #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] #> [1,]    0    0    0    0    0    0    0 #> [2,]    0    1    6   11   16   21    0 #> [3,]    0    2    7   12   17   22    0 #> [4,]    0    3    8   13   18   23    0 #> [5,]    0    4    9   14   19   24    0 #> [6,]    0    5   10   15   20   25    0 #> [7,]    0    0    0    0    0    0    0 PadMtx(mat.mtx = mat.mtx, padSize.num = 1, value.num = NULL, side.chr = c(\"top\", \"bot\", \"right\", \"left\")) #>         col.pad               col.pad #> row.pad       1 1  6 11 16 21      21 #>               1 1  6 11 16 21      21 #>               2 2  7 12 17 22      22 #>               3 3  8 13 18 23      23 #>               4 4  9 14 19 24      24 #>               5 5 10 15 20 25      25 #> row.pad       5 5 10 15 20 25      25 PadMtx(mat.mtx = mat.mtx, padSize.num = 1, value.num = 0, side.chr = c(\"right\", \"left\")) #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] #> [1,]    0    1    6   11   16   21    0 #> [2,]    0    2    7   12   17   22    0 #> [3,]    0    3    8   13   18   23    0 #> [4,]    0    4    9   14   19   24    0 #> [5,]    0    5   10   15   20   25    0 PadMtx(mat.mtx = mat.mtx, padSize.num = 1, value.num = 0, side.chr = c(\"top\")) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    0 #> [2,]    1    6   11   16   21 #> [3,]    2    7   12   17   22 #> [4,]    3    8   13   18   23 #> [5,]    4    9   14   19   24 #> [6,]    5   10   15   20   25"},{"path":"/reference/Plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum by removing NA. — Plus","title":"Sum by removing NA. — Plus","text":"Perform sum removing NA. values NA return NA instead 0.","code":""},{"path":"/reference/Plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum by removing NA. — Plus","text":"","code":"Plus(x)"},{"path":"/reference/Plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum by removing NA. — Plus","text":"x <numerical>: numerical vector","code":""},{"path":"/reference/Plus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum by removing NA. — Plus","text":"sum numbers.","code":""},{"path":"/reference/Plus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum by removing NA. — Plus","text":"Plus","code":""},{"path":"/reference/Plus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum by removing NA. — Plus","text":"","code":"Plus(c(1, 2, 3)) #> [1] 6 sum(c(1, 2, 3), na.rm = TRUE) #> [1] 6 sum(c(1, 2, 3)) #> [1] 6 Plus(c(1, 2, NA)) #> [1] 3 sum(c(1, 2, NA), na.rm = TRUE) #> [1] 3 sum(c(1, 2, NA)) #> [1] NA Plus(c(NA, NA, NA)) #> [1] NA sum(c(NA, NA, NA), na.rm = TRUE) #> [1] 0 sum(c(NA, NA, NA)) #> [1] NA"},{"path":"/reference/QtlThreshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Find threshold for outliers based on quantiles. — QtlThreshold","title":"Find threshold for outliers based on quantiles. — QtlThreshold","text":"Find threshold outliers triming based quantiles.","code":""},{"path":"/reference/QtlThreshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find threshold for outliers based on quantiles. — QtlThreshold","text":"","code":"QtlThreshold(x.num = NULL, prct.num = 5, bounds.chr = \"both\")"},{"path":"/reference/QtlThreshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find threshold for outliers based on quantiles. — QtlThreshold","text":"x.num <numeric>: numeric vector. prct.num <numeric>: percentage (0-100) threshold. (Default 5) bounds.chr <character>: bounds return, \"lower\", \"upper\" \"\". (Default \"\")","code":""},{"path":"/reference/QtlThreshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find threshold for outliers based on quantiles. — QtlThreshold","text":"numerical vector thresholds values outliers triming.","code":""},{"path":"/reference/QtlThreshold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find threshold for outliers based on quantiles. — QtlThreshold","text":"QtlThreshold","code":""},{"path":"/reference/QtlThreshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find threshold for outliers based on quantiles. — QtlThreshold","text":"","code":"set.seed(1111) x.num <- 0:100 x.num <- sort(x.num) x.num #>   [1]   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17 #>  [19]  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35 #>  [37]  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53 #>  [55]  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71 #>  [73]  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89 #>  [91]  90  91  92  93  94  95  96  97  98  99 100 QtlThreshold(x.num, prct.num = 5, bounds.chr = \"lower\") #> 5%     #>  5 NA  QtlThreshold(x.num, prct.num = 5, bounds.chr = \"both\") #>  2.5% 97.5%  #>   2.5  97.5  QtlThreshold(x.num, prct.num = 5, bounds.chr = \"upper\") #>     95%  #>  NA  95"},{"path":"/reference/ReduceRun.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function over two RLE — ReduceRun","title":"Apply a function over two RLE — ReduceRun","text":"Apply function values two RLE return one RLE.","code":""},{"path":"/reference/ReduceRun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function over two RLE — ReduceRun","text":"","code":"ReduceRun(first.rle, second.rle, reduceFun.chr = \"paste\", ...)"},{"path":"/reference/ReduceRun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function over two RLE — ReduceRun","text":"first.rle <rle Rle>: first rle. second.rle <rle Rle>>: second rle. reduceFun.chr <character>: name function apply e.g paste, sum, mean. ... <...>: parameter reduce function.","code":""},{"path":"/reference/ReduceRun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function over two RLE — ReduceRun","text":"reduced Rle","code":""},{"path":"/reference/ReduceRun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a function over two RLE — ReduceRun","text":"ReduceRun","code":""},{"path":"/reference/ReduceRun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function over two RLE — ReduceRun","text":"","code":"first.rle <- rle(c(\"A\", \"A\", \"B\")) second.rle <- rle(c(\"A\", \"B\", \"B\")) ReduceRun(first.rle = first.rle, second.rle = second.rle, reduceFun.chr = \"paste\", sep = \"_\") #> character-Rle of length 3 with 3 runs #>   Lengths:     1     1     1 #>   Values : \"A_A\" \"A_B\" \"B_B\" first.rle <- S4Vectors::Rle(c(1, 2, 3)) second.rle <- S4Vectors::Rle(c(5, 5, 5)) ReduceRun(first.rle = first.rle, second.rle = second.rle, reduceFun.chr = \"sum\") #> numeric-Rle of length 3 with 3 runs #>   Lengths: 1 1 1 #>   Values : 6 7 8"},{"path":"/reference/ResizeMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Resize a matrix — ResizeMatrix","title":"Resize a matrix — ResizeMatrix","text":"Resize numericam matrix new dimension.","code":""},{"path":"/reference/ResizeMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resize a matrix — ResizeMatrix","text":"","code":"ResizeMatrix(matrice.mtx, newDim.num = dim(matrice.mtx))"},{"path":"/reference/ResizeMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resize a matrix — ResizeMatrix","text":"matrice.mtx <matrix>: numerical matrix resize. newDim.num <integer>: number rows cols resized matrix.","code":""},{"path":"/reference/ResizeMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resize a matrix — ResizeMatrix","text":"resized matrix.","code":""},{"path":"/reference/ResizeMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resize a matrix — ResizeMatrix","text":"ResizeMatrix","code":""},{"path":"/reference/ResizeMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resize a matrix — ResizeMatrix","text":"","code":"matrice.mtx <- matrix(0, 11, 11) matrice.mtx[which(as.logical(seq_len(11 * 11) %% 2))] <- seq_len(ceiling((11 * 11) / 2)) matrice.mtx[2, ] <- 100 matrice.mtx[, 7] <- 200 matrice.mtx #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] #>  [1,]    1    0   12    0   23    0  200    0   45     0    56 #>  [2,]  100  100  100  100  100  100  200  100  100   100   100 #>  [3,]    2    0   13    0   24    0  200    0   46     0    57 #>  [4,]    0    8    0   19    0   30  200   41    0    52     0 #>  [5,]    3    0   14    0   25    0  200    0   47     0    58 #>  [6,]    0    9    0   20    0   31  200   42    0    53     0 #>  [7,]    4    0   15    0   26    0  200    0   48     0    59 #>  [8,]    0   10    0   21    0   32  200   43    0    54     0 #>  [9,]    5    0   16    0   27    0  200    0   49     0    60 #> [10,]    0   11    0   22    0   33  200   44    0    55     0 #> [11,]    6    0   17    0   28    0  200    0   50     0    61 ResizeMatrix(matrice.mtx = matrice.mtx, newDim.num = c(7, 7)) #>           [,1]      [,2]      [,3]     [,4]     [,5]     [,6]     [,7] #> [1,]  1.000000  8.000000  7.666667  0.00000 66.66667 30.00000 56.00000 #> [2,] 34.666667 39.111111 38.666667 33.33333 88.88889 53.77778 71.33333 #> [3,]  1.000000  4.888889 11.222222 20.00000 84.88889 22.00000 19.33333 #> [4,]  0.000000  3.000000 13.333333 31.00000 94.66667 17.66667  0.00000 #> [5,]  1.333333  5.555556 12.222222 21.33333 85.77778 22.66667 19.66667 #> [6,]  3.333333  8.333333 10.888889 11.00000 76.44444 27.88889 40.00000 #> [7,]  6.000000 11.333333  9.333333  0.00000 66.66667 33.33333 61.00000 ResizeMatrix(matrice.mtx = matrice.mtx, newDim.num = c(13, 13)) #>            [,1]       [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>  [1,]  1.000000  0.1666667  8.000000  6.000000  7.666667 19.166667  0.000000 #>  [2,] 83.500000 83.3611111 84.666667 84.333333 84.611111 86.527778 83.333333 #>  [3,] 34.666667 33.5555556 39.111111 37.666667 38.666667 46.666667 33.333333 #>  [4,]  1.000000  3.5000000  5.666667  8.000000 10.333333 12.500000 15.000000 #>  [5,]  1.000000  4.6111111  4.888889  8.666667 11.222222 10.277778 20.000000 #>  [6,]  2.500000  1.6666667  8.277778  7.500000  9.166667 18.222222  5.166667 #>  [7,]  0.000000  7.5000000  3.000000 10.000000 13.333333  5.166667 31.000000 #>  [8,]  3.333333  1.8055556  8.833333  7.916667  9.444444 18.916667  5.166667 #>  [9,]  1.333333  5.7777778  5.555556  9.500000 12.222222 10.777778 21.333333 #> [10,]  2.500000  4.5833333  7.000000  9.250000 11.500000 13.916667 16.000000 #> [11,]  3.333333  3.6111111  8.333333  9.000000 10.888889 16.833333 11.000000 #> [12,]  1.000000  7.8055556  4.944444 10.583333 13.777778  8.472222 27.500000 #> [13,]  6.000000  1.0000000 11.333333  8.500000  9.333333 23.333333  0.000000 #>           [,8]      [,9]    [,10]    [,11]     [,12]    [,13] #>  [1,] 166.6667  66.66667 22.50000 30.00000  9.333333 56.00000 #>  [2,] 180.5556 122.22222 87.08333 88.33333 84.888889 92.66667 #>  [3,] 172.2222  88.88889 48.66667 53.77778 39.666667 71.33333 #>  [4,] 169.1667  80.33333 21.75000 24.00000 26.416667 28.50000 #>  [5,] 170.0000  84.88889 21.50000 22.00000 32.111111 19.33333 #>  [6,] 167.5278  71.33333 23.08333 29.05556 15.416667 48.33333 #>  [7,] 171.8333  94.66667 21.00000 17.66667 44.166667  0.00000 #>  [8,] 167.5278  71.33333 23.50000 29.61111 15.555556 49.16667 #>  [9,] 170.2222  85.77778 22.33333 22.66667 33.277778 19.66667 #> [10,] 169.3333  81.00000 23.00000 25.33333 27.500000 30.00000 #> [11,] 168.5000  76.44444 23.66667 27.88889 21.944444 40.00000 #> [12,] 171.2500  91.11111 22.50000 20.83333 39.888889 10.16667 #> [13,] 166.6667  66.66667 25.00000 33.33333 10.166667 61.00000"},{"path":"/reference/Rgb2Hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert RGB to Hex. — Rgb2Hex","title":"Convert RGB to Hex. — Rgb2Hex","text":"Convert color RGB format hexadecimal format.","code":""},{"path":"/reference/Rgb2Hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert RGB to Hex. — Rgb2Hex","text":"","code":"Rgb2Hex(rgb.col = NULL, alpha.bln = FALSE)"},{"path":"/reference/Rgb2Hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert RGB to Hex. — Rgb2Hex","text":"rgb.col <integer>: integer color's RGB code. alpha.bln <logical>: whether alpha layer returned. (Default FALSE)","code":""},{"path":"/reference/Rgb2Hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert RGB to Hex. — Rgb2Hex","text":"character color's hexadecimal code.","code":""},{"path":"/reference/Rgb2Hex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert RGB to Hex. — Rgb2Hex","text":"Rgb2Hex","code":""},{"path":"/reference/Rgb2Hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert RGB to Hex. — Rgb2Hex","text":"","code":"Rgb2Hex(c(235, 176, 16, 127), alpha.bln = TRUE) #> [1] \"#ebb0107f\""},{"path":"/reference/Rise0.html","id":null,"dir":"Reference","previous_headings":"","what":"Explicit zeros in sparse matrix. — Rise0","title":"Explicit zeros in sparse matrix. — Rise0","text":"Explicit implicit zeros sparse matrix.","code":""},{"path":"/reference/Rise0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explicit zeros in sparse matrix. — Rise0","text":"","code":"Rise0(mat.spm = NULL, which.ndx = NULL, coord.dtf = NULL)"},{"path":"/reference/Rise0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explicit zeros in sparse matrix. — Rise0","text":"mat.spm <dgCMatrix dgCMatrix coercible>: sparse matrix. .ndx <numeric> vector positions zeros explicits (column driven). NULL coord.dtf NULL zeros explicits. (Default NULL) coord.dtf <data.frame> coordinate data frame zeros explicit Row index fisrt column, columns index second columns. NULL .ndx parameter used (Default NULL)","code":""},{"path":"/reference/Rise0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explicit zeros in sparse matrix. — Rise0","text":"Sparse matrix explicit zeros.","code":""},{"path":"/reference/Rise0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Explicit zeros in sparse matrix. — Rise0","text":"Rise0","code":""},{"path":"/reference/Rise0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explicit zeros in sparse matrix. — Rise0","text":"","code":"set.seed(123) mat.spm <- as(matrix(floor(runif(7 * 13, 0, 2)), 7, 13), \"dgCMatrix\") mat.spm #> 7 x 13 sparse Matrix of class \"dgCMatrix\" #>                                #> [1,] . 1 . 1 . . . 1 . . 1 1 . #> [2,] 1 1 1 1 . 1 . . 1 1 1 . . #> [3,] . . . 1 1 . . . 1 . 1 . 1 #> [4,] 1 1 . 1 1 . . 1 . 1 . . 1 #> [5,] 1 . . 1 1 . . . 1 1 . 1 1 #> [6,] . 1 1 1 1 . . 1 . 1 . . . #> [7,] 1 1 1 1 . . . . . . . 1 . Rise0(mat.spm = mat.spm, which.ndx = c(1, 3, 6, 10, 12)) #> 7 x 13 sparse Matrix of class \"dgCMatrix\" #>                                #> [1,] 0 1 . 1 . . . 1 . . 1 1 . #> [2,] 1 1 1 1 . 1 . . 1 1 1 . . #> [3,] 0 0 . 1 1 . . . 1 . 1 . 1 #> [4,] 1 1 . 1 1 . . 1 . 1 . . 1 #> [5,] 1 0 . 1 1 . . . 1 1 . 1 1 #> [6,] 0 1 1 1 1 . . 1 . 1 . . . #> [7,] 1 1 1 1 . . . . . . . 1 . Rise0(mat.spm = mat.spm, coord.dtf = data.frame(i = c(1, 5, 3), j = c(1, 2, 3))) #> 7 x 13 sparse Matrix of class \"dgCMatrix\" #>                                #> [1,] 0 1 . 1 . . . 1 . . 1 1 . #> [2,] 1 1 1 1 . 1 . . 1 1 1 . . #> [3,] . . 0 1 1 . . . 1 . 1 . 1 #> [4,] 1 1 . 1 1 . . 1 . 1 . . 1 #> [5,] 1 0 . 1 1 . . . 1 1 . 1 1 #> [6,] . 1 1 1 1 . . 1 . 1 . . . #> [7,] 1 1 1 1 . . . . . . . 1 . Rise0(mat.spm = mat.spm) #> 7 x 13 sparse Matrix of class \"dgCMatrix\" #>                                #> [1,] 0 1 0 1 0 0 0 1 0 0 1 1 0 #> [2,] 1 1 1 1 0 1 0 0 1 1 1 0 0 #> [3,] 0 0 0 1 1 0 0 0 1 0 1 0 1 #> [4,] 1 1 0 1 1 0 0 1 0 1 0 0 1 #> [5,] 1 0 0 1 1 0 0 0 1 1 0 1 1 #> [6,] 0 1 1 1 1 0 0 1 0 1 0 0 0 #> [7,] 1 1 1 1 0 0 0 0 0 0 0 1 0"},{"path":"/reference/SdThreshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Find threshold for outliers based on sd. — SdThreshold","title":"Find threshold for outliers based on sd. — SdThreshold","text":"Find threshold outliers triming based standard deviation.","code":""},{"path":"/reference/SdThreshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find threshold for outliers based on sd. — SdThreshold","text":"","code":"SdThreshold(x.num = NULL, sdThreshold.num = 3, bounds.chr = \"both\")"},{"path":"/reference/SdThreshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find threshold for outliers based on sd. — SdThreshold","text":"x.num <numeric>: numeric vector. sdThreshold.num <numeric>: number standard deviation. (Default 3) bounds.chr <character>: bounds return, \"lower\", \"upper\" \"\". (Default \"\")","code":""},{"path":"/reference/SdThreshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find threshold for outliers based on sd. — SdThreshold","text":"numerical vector thresholds values outliers triming","code":""},{"path":"/reference/SdThreshold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find threshold for outliers based on sd. — SdThreshold","text":"SdThreshold","code":""},{"path":"/reference/SdThreshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find threshold for outliers based on sd. — SdThreshold","text":"","code":"set.seed(1111) x.num <- rnorm(1000) x.num <- sort(x.num) x.num #>    [1] -2.947230181 -2.930846364 -2.912295201 -2.652936167 -2.580330302 #>    [6] -2.436626893 -2.431943155 -2.420604816 -2.341488040 -2.220351734 #>   [11] -2.209953332 -2.185699706 -2.172483538 -2.172301277 -2.167865392 #>   [16] -2.126277548 -2.109910762 -2.091388684 -2.074594095 -2.059485800 #>   [21] -2.038177494 -2.021971391 -1.980041146 -1.966766209 -1.964391692 #>   [26] -1.954660943 -1.931494739 -1.929052710 -1.919957962 -1.914909614 #>   [31] -1.910171523 -1.894509057 -1.893494633 -1.885957093 -1.875262315 #>   [36] -1.875243371 -1.844869267 -1.837280339 -1.817001602 -1.808391197 #>   [41] -1.806897433 -1.795477691 -1.791919025 -1.753429287 -1.742806903 #>   [46] -1.741490319 -1.725168073 -1.711868465 -1.694731581 -1.669115136 #>   [51] -1.651650569 -1.644664938 -1.604379575 -1.592462991 -1.581747079 #>   [56] -1.576920440 -1.558082946 -1.556747882 -1.551084024 -1.550546561 #>   [61] -1.544527132 -1.544138733 -1.544102898 -1.540233632 -1.534281566 #>   [66] -1.529141625 -1.528639832 -1.528372247 -1.527316968 -1.523920534 #>   [71] -1.517031873 -1.511637433 -1.494651137 -1.489697312 -1.485401131 #>   [76] -1.483259788 -1.470764898 -1.469964404 -1.464296308 -1.436553257 #>   [81] -1.424585718 -1.423710084 -1.417146045 -1.412007482 -1.407908129 #>   [86] -1.407356958 -1.401833371 -1.401034520 -1.400753457 -1.400620638 #>   [91] -1.398668124 -1.393335051 -1.389753666 -1.389123423 -1.388434142 #>   [96] -1.372403852 -1.365287909 -1.358521395 -1.342954521 -1.342026771 #>  [101] -1.337070225 -1.335824952 -1.330461830 -1.330055926 -1.320978222 #>  [106] -1.320060700 -1.313694064 -1.312111742 -1.302291292 -1.300410941 #>  [111] -1.298721659 -1.288704411 -1.278172091 -1.274062753 -1.269309223 #>  [116] -1.267968089 -1.266397651 -1.265838808 -1.265373920 -1.263484521 #>  [121] -1.261845988 -1.248214152 -1.240952394 -1.238732312 -1.224770696 #>  [126] -1.222645818 -1.222311254 -1.213118937 -1.212720792 -1.205486795 #>  [131] -1.200430574 -1.197604800 -1.189648845 -1.181836277 -1.180997897 #>  [136] -1.173792485 -1.173592071 -1.171117963 -1.161528404 -1.157635514 #>  [141] -1.138359035 -1.136255216 -1.134188569 -1.133811699 -1.130981741 #>  [146] -1.130626768 -1.117923213 -1.112173619 -1.111229969 -1.110862786 #>  [151] -1.107689737 -1.105246204 -1.085359169 -1.073031577 -1.069377399 #>  [156] -1.067134093 -1.062626788 -1.058827708 -1.057826675 -1.055915729 #>  [161] -1.046911622 -1.045846963 -1.043976970 -1.043807666 -1.043213248 #>  [166] -1.040400574 -1.036833221 -1.035473334 -1.029792502 -1.029119085 #>  [171] -1.025291454 -1.021131771 -1.017906173 -1.004665705 -0.988565699 #>  [176] -0.985486661 -0.984847567 -0.982393992 -0.976479813 -0.972516986 #>  [181] -0.969798075 -0.968772186 -0.966178339 -0.965520355 -0.962480325 #>  [186] -0.961354034 -0.961303906 -0.961283310 -0.942364838 -0.937956644 #>  [191] -0.935834550 -0.930473789 -0.928613996 -0.926949132 -0.926277278 #>  [196] -0.924518632 -0.908383016 -0.903741128 -0.893864093 -0.884936520 #>  [201] -0.875223109 -0.871863261 -0.871052811 -0.868690181 -0.864315401 #>  [206] -0.862354930 -0.849821281 -0.849250535 -0.840631824 -0.835864132 #>  [211] -0.817929620 -0.802524115 -0.798987543 -0.790751049 -0.790429809 #>  [216] -0.786009593 -0.783612099 -0.782002877 -0.779936593 -0.774385348 #>  [221] -0.763438735 -0.763056132 -0.758359383 -0.753842657 -0.753310586 #>  [226] -0.751119049 -0.747153488 -0.741718275 -0.739093207 -0.738470438 #>  [231] -0.734717573 -0.723451566 -0.718621221 -0.718036605 -0.711567845 #>  [236] -0.707463457 -0.705527410 -0.703183505 -0.699488478 -0.699483972 #>  [241] -0.697286299 -0.695487669 -0.691972679 -0.691173357 -0.689367923 #>  [246] -0.683135622 -0.682975754 -0.679109184 -0.675737819 -0.672409634 #>  [251] -0.670629567 -0.670362293 -0.668765573 -0.668031234 -0.666763589 #>  [256] -0.664845590 -0.656327643 -0.655892874 -0.641058315 -0.639657740 #>  [261] -0.637251948 -0.629427062 -0.626246629 -0.625188582 -0.625012873 #>  [266] -0.618040459 -0.617984698 -0.617912106 -0.615274929 -0.613800618 #>  [271] -0.607431513 -0.603460785 -0.591079069 -0.586999465 -0.584036974 #>  [276] -0.580163745 -0.577563034 -0.576169268 -0.575885358 -0.575324865 #>  [281] -0.573548067 -0.573169275 -0.562571813 -0.559121408 -0.557207007 #>  [286] -0.556605548 -0.553447159 -0.547906556 -0.547872283 -0.546944588 #>  [291] -0.544496499 -0.541231591 -0.541141032 -0.540885969 -0.537510827 #>  [296] -0.537085307 -0.533295786 -0.530863226 -0.526446698 -0.525587885 #>  [301] -0.524828533 -0.520787002 -0.520517356 -0.519421824 -0.516570926 #>  [306] -0.511095682 -0.504953477 -0.504437049 -0.499943430 -0.499132813 #>  [311] -0.498738767 -0.493859643 -0.491755717 -0.490464936 -0.489673344 #>  [316] -0.488761946 -0.486043023 -0.485730243 -0.485545662 -0.483701339 #>  [321] -0.481592418 -0.481377931 -0.479013677 -0.478201092 -0.477670785 #>  [326] -0.472026756 -0.471192741 -0.468862784 -0.468251672 -0.466456291 #>  [331] -0.464694771 -0.462937050 -0.458570159 -0.456985660 -0.451772892 #>  [336] -0.450317211 -0.437523927 -0.433176508 -0.431032163 -0.429894248 #>  [341] -0.429539384 -0.421830180 -0.421320189 -0.420822776 -0.416014205 #>  [346] -0.413552483 -0.409620798 -0.409338986 -0.400875312 -0.399592534 #>  [351] -0.399102177 -0.398307333 -0.391203006 -0.389101325 -0.388950714 #>  [356] -0.378412762 -0.373146067 -0.372026477 -0.371066763 -0.367060544 #>  [361] -0.366859878 -0.366624947 -0.363822233 -0.356168194 -0.355781755 #>  [366] -0.353648706 -0.344666548 -0.343347691 -0.340041200 -0.336624057 #>  [371] -0.335697049 -0.324987285 -0.324230584 -0.323795678 -0.313582760 #>  [376] -0.309547142 -0.308313094 -0.304579634 -0.302221752 -0.300497491 #>  [381] -0.298330352 -0.290258438 -0.289524284 -0.289491870 -0.289282413 #>  [386] -0.281183125 -0.280251079 -0.279641026 -0.278461947 -0.277989036 #>  [391] -0.274810135 -0.269390635 -0.269141798 -0.265865315 -0.263239617 #>  [396] -0.262859801 -0.260673279 -0.259743332 -0.259192741 -0.259115883 #>  [401] -0.258978478 -0.258243004 -0.257651852 -0.257140149 -0.248040215 #>  [406] -0.247451977 -0.247409181 -0.244814249 -0.243268192 -0.242465523 #>  [411] -0.239355919 -0.238466722 -0.238266703 -0.235949104 -0.234955098 #>  [416] -0.234449922 -0.233049792 -0.231593571 -0.229156383 -0.228676068 #>  [421] -0.227203758 -0.222185627 -0.221839860 -0.219355235 -0.216710897 #>  [426] -0.208876577 -0.208776400 -0.206591992 -0.204068004 -0.200660107 #>  [431] -0.198585488 -0.196642334 -0.196377084 -0.194747300 -0.193242787 #>  [436] -0.190636546 -0.189061982 -0.187655743 -0.176356978 -0.175629520 #>  [441] -0.175367327 -0.175314609 -0.173700457 -0.167069456 -0.165657987 #>  [446] -0.165386221 -0.157770873 -0.150117504 -0.150102308 -0.148860957 #>  [451] -0.146184323 -0.145367696 -0.141768356 -0.140623817 -0.139923313 #>  [456] -0.139113759 -0.133982699 -0.130818631 -0.130021137 -0.128610065 #>  [461] -0.124503806 -0.117470862 -0.115694473 -0.112057075 -0.110612503 #>  [466] -0.109510669 -0.107475145 -0.107395231 -0.107182433 -0.104948992 #>  [471] -0.101729460 -0.100654867 -0.097906683 -0.097550548 -0.097001086 #>  [476] -0.093037532 -0.092455603 -0.091431840 -0.088752533 -0.086580111 #>  [481] -0.084227732 -0.081097497 -0.080512606 -0.072772042 -0.072202695 #>  [486] -0.067079317 -0.055572118 -0.054886927 -0.047753028 -0.047297143 #>  [491] -0.045704598 -0.044848506 -0.041039063 -0.039997391 -0.039941426 #>  [496] -0.039840281 -0.039050204 -0.039049733 -0.037072947 -0.034704382 #>  [501] -0.028364641 -0.026624214 -0.026204640 -0.024877659 -0.024372547 #>  [506] -0.021091330 -0.019303407 -0.017205308 -0.015323041 -0.015308128 #>  [511] -0.011131732 -0.010285154 -0.008265104 -0.003755814 -0.002647985 #>  [516]  0.001449927  0.002159399  0.002737608  0.008145257  0.013705825 #>  [521]  0.019832320  0.021954070  0.024167607  0.027759423  0.028240143 #>  [526]  0.030910710  0.031640760  0.035887069  0.039179343  0.043938726 #>  [531]  0.046032467  0.051503977  0.052579261  0.054528997  0.062655793 #>  [536]  0.063629063  0.064629140  0.066559497  0.068663596  0.069597703 #>  [541]  0.072837834  0.073267627  0.080944592  0.081154820  0.085354844 #>  [546]  0.088679798  0.094705820  0.095058647  0.098236935  0.099197377 #>  [551]  0.104168140  0.105199816  0.111220864  0.112310964  0.112967824 #>  [556]  0.115618636  0.116167950  0.116290309  0.120855468  0.122367046 #>  [561]  0.124368690  0.126634583  0.127134851  0.127575121  0.129802528 #>  [566]  0.136949333  0.137739519  0.147362593  0.151120022  0.153433690 #>  [571]  0.158267485  0.158705781  0.159120433  0.161062095  0.164032285 #>  [576]  0.164795941  0.168124855  0.169293151  0.170600506  0.171558729 #>  [581]  0.171895276  0.176022012  0.176273417  0.179108882  0.182793592 #>  [586]  0.183082223  0.183273838  0.189319504  0.189739097  0.190466472 #>  [591]  0.200547942  0.202914848  0.207718279  0.209868641  0.210247253 #>  [596]  0.211943936  0.216307660  0.218034284  0.219215567  0.223142935 #>  [601]  0.223791396  0.228110856  0.230311742  0.230383911  0.233324058 #>  [606]  0.233526626  0.234822189  0.235896440  0.236624872  0.241025268 #>  [611]  0.242893210  0.244244166  0.244613101  0.245959028  0.257352334 #>  [616]  0.257369932  0.261629943  0.264504506  0.268611602  0.274312766 #>  [621]  0.277312001  0.279551757  0.281711077  0.282894875  0.285135127 #>  [626]  0.295591914  0.295737734  0.304742660  0.306398684  0.307956642 #>  [631]  0.308866175  0.313015511  0.315029722  0.316571240  0.319986620 #>  [636]  0.322069652  0.324957278  0.327012979  0.336794768  0.338268121 #>  [641]  0.339307629  0.341422006  0.344480524  0.348195434  0.355116837 #>  [646]  0.355633083  0.358348059  0.358858023  0.360241997  0.369884879 #>  [651]  0.371116991  0.374091170  0.378054472  0.380396629  0.380960030 #>  [656]  0.382917618  0.384087275  0.385292241  0.386098386  0.387796710 #>  [661]  0.392956082  0.397314775  0.406324236  0.410810413  0.416434684 #>  [666]  0.417591399  0.418293932  0.419407882  0.424349333  0.424742337 #>  [671]  0.427158441  0.428717542  0.429916218  0.430451404  0.433504940 #>  [676]  0.438021367  0.439565049  0.441879880  0.444508735  0.447608280 #>  [681]  0.464760426  0.466707755  0.471172949  0.476977185  0.478316477 #>  [686]  0.483160527  0.495660352  0.500326140  0.501706643  0.502504560 #>  [691]  0.503482964  0.506513393  0.507838836  0.509876520  0.510517866 #>  [696]  0.512770024  0.512968779  0.513484246  0.521074765  0.523690088 #>  [701]  0.527461973  0.527506852  0.529915500  0.532816722  0.535059926 #>  [706]  0.536893664  0.537989721  0.546763071  0.547215986  0.547683343 #>  [711]  0.554031585  0.554730474  0.566006526  0.569019022  0.573512772 #>  [716]  0.575445065  0.578194571  0.581046312  0.582011324  0.585108484 #>  [721]  0.587825673  0.588104217  0.589733037  0.589769903  0.590383219 #>  [726]  0.591914877  0.591967342  0.598642923  0.599111375  0.599705431 #>  [731]  0.600615748  0.600697040  0.601710575  0.602106948  0.603027591 #>  [736]  0.606182010  0.608497745  0.613708887  0.614355752  0.618441652 #>  [741]  0.618755311  0.619785473  0.620890630  0.624769017  0.627220188 #>  [746]  0.629436731  0.632143849  0.632496544  0.632913523  0.639702038 #>  [751]  0.662222800  0.675238729  0.677180638  0.677508062  0.677600299 #>  [756]  0.678981486  0.690164261  0.690890080  0.692755539  0.693263358 #>  [761]  0.694189454  0.695719258  0.697545336  0.700105215  0.701910957 #>  [766]  0.703300281  0.705863606  0.705896092  0.713011829  0.717795761 #>  [771]  0.724791403  0.732646249  0.736406072  0.741449369  0.741920730 #>  [776]  0.742138109  0.743216806  0.744159360  0.745866033  0.747034695 #>  [781]  0.749509285  0.750057241  0.750988849  0.751203437  0.755560661 #>  [786]  0.765446248  0.771625511  0.772116933  0.777305689  0.788383861 #>  [791]  0.791723586  0.795715088  0.796363580  0.812017373  0.815185456 #>  [796]  0.824333812  0.825116243  0.825427664  0.826675535  0.829759228 #>  [801]  0.829822529  0.835610612  0.836033925  0.836935475  0.837227018 #>  [806]  0.838491977  0.840614872  0.846840964  0.858948368  0.859881043 #>  [811]  0.860591459  0.862467392  0.863904684  0.863984701  0.869009542 #>  [816]  0.875988352  0.879533158  0.882316888  0.884420209  0.886553238 #>  [821]  0.886961524  0.889390214  0.917667294  0.918321630  0.931423916 #>  [826]  0.932985725  0.934701470  0.935750390  0.936608985  0.939324857 #>  [831]  0.943637246  0.949593078  0.958981246  0.963011807  0.966441815 #>  [836]  0.970853354  0.973904505  0.979566568  0.979809184  0.990836348 #>  [841]  0.991168374  0.995157304  1.002796926  1.012213730  1.015172840 #>  [846]  1.015963483  1.025390598  1.027761817  1.034005496  1.034486388 #>  [851]  1.038146318  1.040261559  1.040291057  1.043064389  1.048464843 #>  [856]  1.055472189  1.059940931  1.065478652  1.069276566  1.069696450 #>  [861]  1.076015070  1.076946358  1.082082122  1.096181669  1.098007545 #>  [866]  1.102786639  1.104648595  1.106915765  1.107128655  1.109801855 #>  [871]  1.116469593  1.117771943  1.130024756  1.130430903  1.137429288 #>  [876]  1.139619832  1.142146524  1.143714723  1.152029004  1.152553365 #>  [881]  1.156927791  1.160889997  1.162688022  1.170417719  1.170646708 #>  [886]  1.174786565  1.176332681  1.183422400  1.190255627  1.190711366 #>  [891]  1.198091847  1.199901180  1.201406635  1.205821957  1.209338251 #>  [896]  1.220509885  1.221696185  1.228332070  1.229445488  1.231904859 #>  [901]  1.232635287  1.234758436  1.235963395  1.239970195  1.240002500 #>  [906]  1.248118356  1.255254604  1.258909883  1.268180355  1.273527812 #>  [911]  1.283940856  1.286563933  1.289770210  1.290886551  1.301807250 #>  [916]  1.307376533  1.317149485  1.322524430  1.335711301  1.336993480 #>  [921]  1.341059582  1.372666535  1.374343897  1.381437060  1.384047521 #>  [926]  1.394747168  1.395198440  1.403646422  1.404528907  1.406110110 #>  [931]  1.407638371  1.414181843  1.431466661  1.434440269  1.435175758 #>  [936]  1.439807142  1.446492865  1.469775802  1.470722632  1.474726867 #>  [941]  1.475148938  1.477291715  1.483426295  1.484387448  1.505263250 #>  [946]  1.510713688  1.511484254  1.514912696  1.522116812  1.523758115 #>  [951]  1.527520659  1.530136104  1.541604453  1.546027276  1.582125226 #>  [956]  1.640363260  1.650831792  1.660297478  1.660921380  1.662907915 #>  [961]  1.678565685  1.694387605  1.697998059  1.713295931  1.719329908 #>  [966]  1.737624481  1.750855530  1.753974301  1.761500831  1.768999773 #>  [971]  1.770061998  1.773267506  1.785197031  1.792594231  1.820611067 #>  [976]  1.823822933  1.826297521  1.842873630  1.915882229  1.930540245 #>  [981]  2.002383304  2.013086021  2.037915530  2.067347819  2.134162292 #>  [986]  2.158101129  2.228291187  2.239164612  2.285147434  2.361631481 #>  [991]  2.398250568  2.433557088  2.446660821  2.502845342  2.543264108 #>  [996]  2.581766558  2.615128742  2.666984567  2.817220633  2.973465222 SdThreshold(x.num, sdThreshold.num = 2, bounds.chr = \"lower\") #> [1] -2.010379        NA SdThreshold(x.num, sdThreshold.num = 2, bounds.chr = \"both\") #> [1] -2.010379  1.957867 SdThreshold(x.num, sdThreshold.num = 2, bounds.chr = \"upper\") #> [1]       NA 1.957867"},{"path":"/reference/SearchPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates pairs from genomic index. — SearchPairs","title":"Creates pairs from genomic index. — SearchPairs","text":"Creates pairs coordinates indexed anchor bait genomic coordinates according distance constraints.","code":""},{"path":"/reference/SearchPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates pairs from genomic index. — SearchPairs","text":"","code":"SearchPairs(   indexAnchor.gnr = NULL,   indexBait.gnr = NULL,   minDist.num = NULL,   maxDist.num = NULL,   verbose.bln = FALSE,   cores.num = 1 )"},{"path":"/reference/SearchPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates pairs from genomic index. — SearchPairs","text":"indexAnchor.gnr <GRanges>: first indexed GRanges object used pairs anchor (must indexed using IndexFeatures()). indexBait.gnr <GRanges>: second indexed GRanges object used pairs bait (must indexed using IndexFeatures()). NULL, indexAnchor.gnr used instead (Default NULL) minDist.num <numeric>: Minimal distance anchors baits. (Default NULL) maxDist.num <numeric>: Maximal distance anchors baits. (Default NULL) verbose.bln <logical>: TRUE show progression console. (Default FALSE) cores.num <integer> : Number cores use. (Default 1)","code":""},{"path":"/reference/SearchPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates pairs from genomic index. — SearchPairs","text":"GInteractions object.","code":""},{"path":"/reference/SearchPairs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates pairs from genomic index. — SearchPairs","text":"SearchPairs","code":""},{"path":"/reference/SearchPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates pairs from genomic index. — SearchPairs","text":"","code":"# Data data(Beaf32_Peaks.gnr)  # Index Beaf32 Beaf32_Index.gnr <- IndexFeatures(     gRange.gnr_lst = list(Beaf = Beaf32_Peaks.gnr),     chromSize.dtf = data.frame(seqnames = c(\"2L\", \"2R\"), seqlengths = c(23513712, 25286936)),     binSize.num = 100000 )  # Beaf32 <-> Beaf32 Pairing Beaf_Beaf.gni <- SearchPairs(indexAnchor.gnr = Beaf32_Index.gnr)"},{"path":"/reference/SeqEnds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all sequences lengths. — SeqEnds","title":"Get all sequences lengths. — SeqEnds","text":"Get sequences lengths ranges GRanges object.","code":""},{"path":"/reference/SeqEnds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all sequences lengths. — SeqEnds","text":"","code":"SeqEnds(x.gnr)"},{"path":"/reference/SeqEnds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all sequences lengths. — SeqEnds","text":"x.gnr <GRanges>: GRanges object.","code":""},{"path":"/reference/SeqEnds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all sequences lengths. — SeqEnds","text":"integer vector.","code":""},{"path":"/reference/SeqEnds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get all sequences lengths. — SeqEnds","text":"SeqEnds","code":""},{"path":"/reference/SeqEnds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all sequences lengths. — SeqEnds","text":"","code":"GRange.grn <- GenomicRanges::GRanges(     seqnames = S4Vectors::Rle(c(\"chr1\", \"chr2\", \"chr1\"), c(1, 3, 1)),     ranges = IRanges::IRanges(101:105, end = 111:115, names = letters[seq_len(5)]),     strand = S4Vectors::Rle(BiocGenerics::strand(c(\"-\", \"+\", \"*\", \"+\")), c(1, 1, 2, 1)),     seqinfo = c(chr1 = 200, chr2 = 300),     score = seq_len(5) ) SeqEnds(GRange.grn) #> chr1 chr2 chr2 chr2 chr1  #>  200  300  300  300  200"},{"path":"/reference/StrToGRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert String to GRanges. — StrToGRanges","title":"Convert String to GRanges. — StrToGRanges","text":"Convert ranges describe string (.e seqname:start-end:strand) GRanges object.","code":""},{"path":"/reference/StrToGRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert String to GRanges. — StrToGRanges","text":"","code":"StrToGRanges(x.chr_vec)"},{"path":"/reference/StrToGRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert String to GRanges. — StrToGRanges","text":"x.chr_vec <character>: strings convert GRanges.","code":""},{"path":"/reference/StrToGRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert String to GRanges. — StrToGRanges","text":"GRanges object.","code":""},{"path":"/reference/StrToGRanges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert String to GRanges. — StrToGRanges","text":"StrToGRanges","code":""},{"path":"/reference/StrToGRanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert String to GRanges. — StrToGRanges","text":"","code":"StrToGRanges(\"chr1:1-100:+\") #> GRanges object with 1 range and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1     1-100      + #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths StrToGRanges(c(\"chr1:1-100:+\", \"chr2:400-500:-\", \"chr1:10-50:*\")) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1     1-100      + #>   [2]     chr2   400-500      - #>   [3]     chr1     10-50      * #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"/reference/SwitchMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Change values of HiC map. — SwitchMatrix","title":"Change values of HiC map. — SwitchMatrix","text":"Change values matrix observed, balanced, observed/expected expected values according done hic.","code":""},{"path":"/reference/SwitchMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change values of HiC map. — SwitchMatrix","text":"","code":"SwitchMatrix(hic.cmx_lst, matrixKind.chr = c(\"obs\", \"norm\", \"o/e\", \"exp\"))"},{"path":"/reference/SwitchMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change values of HiC map. — SwitchMatrix","text":"hic.cmx_lst <List[contactMatrix]>: HiC maps list. matrixKind.chr <character>: kind matrix want.","code":""},{"path":"/reference/SwitchMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change values of HiC map. — SwitchMatrix","text":"contactMatrix list.","code":""},{"path":"/reference/SwitchMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change values of HiC map. — SwitchMatrix","text":"SwitchMatrix","code":""},{"path":"/reference/SwitchMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change values of HiC map. — SwitchMatrix","text":"","code":"# Data data(HiC_Ctrl.cmx_lst)  # Preprocess HiC HiC.cmx_lst <- HiC_Ctrl.cmx_lst |>     NormalizeHiC(         interaction.type = \"cis\",         method.chr = \"ICE\"     ) |>     ExpectedHiC() #> Error in ExpectedHiC(NormalizeHiC(HiC_Ctrl.cmx_lst, interaction.type = \"cis\",     method.chr = \"ICE\")): could not find function \"ExpectedHiC\"  # Switch values in matrix HiC_Ctrl_Obs.cmx_lst <- SwitchMatrix(HiC.cmx_lst, matrixKind.chr = \"obs\") #> Error in SwitchMatrix(HiC.cmx_lst, matrixKind.chr = \"obs\"): object 'HiC.cmx_lst' not found HiC_Ctrl_Norm.cmx_lst <- SwitchMatrix(HiC.cmx_lst, matrixKind.chr = \"norm\") #> Error in SwitchMatrix(HiC.cmx_lst, matrixKind.chr = \"norm\"): object 'HiC.cmx_lst' not found HiC_Ctrl_oe.cmx_lst <- SwitchMatrix(HiC.cmx_lst, matrixKind.chr = \"o/e\") #> Error in SwitchMatrix(HiC.cmx_lst, matrixKind.chr = \"o/e\"): object 'HiC.cmx_lst' not found HiC_Ctrl_exp.cmx_lst <- SwitchMatrix(HiC.cmx_lst, matrixKind.chr = \"exp\") #> Error in SwitchMatrix(HiC.cmx_lst, matrixKind.chr = \"exp\"): object 'HiC.cmx_lst' not found"},{"path":"/reference/TADs_Domains.gnr.html","id":null,"dir":"Reference","previous_headings":"","what":"D.melanogaster TADs. — TADs_Domains.gnr","title":"D.melanogaster TADs. — TADs_Domains.gnr","text":"Drosophila Melanogaster TADs chromosome 2R 2L ([F.Ramirez, 2018](https://doi.org/10.1038/s41467-017-02525-w))","code":""},{"path":"/reference/TADs_Domains.gnr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"D.melanogaster TADs. — TADs_Domains.gnr","text":"","code":"data(TADs_Domains.gnr)"},{"path":"/reference/TADs_Domains.gnr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"D.melanogaster TADs. — TADs_Domains.gnr","text":"object class GRanges.","code":""},{"path":"/reference/TADs_Domains.gnr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"D.melanogaster TADs. — TADs_Domains.gnr","text":"","code":"data(TADs_Domains.gnr) TADs_Domains.gnr #> GRanges object with 856 ranges and 3 metadata columns: #>         seqnames            ranges strand |     score       class        name #>            <Rle>         <IRanges>  <Rle> | <numeric> <character> <character> #>     [1]       2L       73104-94543      * |         3      active       Tad_1 #>     [2]       2L      94544-102930      * |         8      active       Tad_2 #>     [3]       2L     102931-121473      * |         8      active       Tad_3 #>     [4]       2L     121474-130495      * |         6      active       Tad_4 #>     [5]       2L     130496-143461      * |         3      active       Tad_5 #>     ...      ...               ...    ... .       ...         ...         ... #>   [852]       2R 24903319-24928487      * |         8      active    Tad_1049 #>   [853]       2R 24938308-24965351      * |         3      active    Tad_1051 #>   [854]       2R 24965352-24969324      * |         8      active    Tad_1052 #>   [855]       2R 24969325-24987568      * |         3      active    Tad_1053 #>   [856]       2R 24987569-25012729      * |         3      active    Tad_1054 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome"},{"path":"/reference/TSS_Peaks.gnr.html","id":null,"dir":"Reference","previous_headings":"","what":"D.melanogaster Transcription starting sites. — TSS_Peaks.gnr","title":"D.melanogaster Transcription starting sites. — TSS_Peaks.gnr","text":"Data CHip Seq experiment","code":""},{"path":"/reference/TSS_Peaks.gnr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"D.melanogaster Transcription starting sites. — TSS_Peaks.gnr","text":"","code":"data(TSS_Peaks.gnr)"},{"path":"/reference/TSS_Peaks.gnr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"D.melanogaster Transcription starting sites. — TSS_Peaks.gnr","text":"object class GRanges.","code":""},{"path":"/reference/TSS_Peaks.gnr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"D.melanogaster Transcription starting sites. — TSS_Peaks.gnr","text":"","code":"data(TSS_Peaks.gnr) TSS_Peaks.gnr #> GRanges object with 600 ranges and 2 metadata columns: #>         seqnames    ranges strand |       class        name #>            <Rle> <IRanges>  <Rle> | <character> <character> #>     [1]       2L     71757      + |      active FBgn0031213 #>     [2]       2L     76348      + |    inactive FBgn0031214 #>     [3]       2L    106903      + |      active FBgn0005278 #>     [4]       2L    574291      + |      active FBgn0031268 #>     [5]       2L    773547      + |    inactive FBgn0031276 #>     ...      ...       ...    ... .         ...         ... #>   [596]       2R  24768172      - |      active FBgn0027590 #>   [597]       2R  24797414      - |      active FBgn0023181 #>   [598]       2R  24881817      - |    inactive FBgn0263443 #>   [599]       2R  24973207      - |    inactive FBgn0035089 #>   [600]       2R  24975341      - |    inactive FBgn0035090 #>   ------- #>   seqinfo: 2 sequences from an unspecified genome"},{"path":"/reference/TransposeList.html","id":null,"dir":"Reference","previous_headings":"","what":"Turns a nested list ","title":"Turns a nested list ","text":"Turns nested list \"inside-\".","code":""},{"path":"/reference/TransposeList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turns a nested list ","text":"","code":"TransposeList(var.nlst)"},{"path":"/reference/TransposeList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turns a nested list ","text":"var.nlst <list[list]>: nested list transpose.","code":""},{"path":"/reference/TransposeList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turns a nested list ","text":"tranposed nested list.","code":""},{"path":"/reference/TransposeList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turns a nested list ","text":"TransposeList","code":""},{"path":"/reference/TransposeList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turns a nested list ","text":"","code":"my_lst <- list(     first = list(\"A1\", \"B1\", \"C1\"),     second = list(\"A2\", \"B2\"),     third = list(NULL, \"B3\") ) TransposeList(my_lst) #> [[1]] #>  first second  #>   \"A1\"   \"A2\"  #>  #> [[2]] #>  first second  third  #>   \"B1\"   \"B2\"   \"B3\"  #>  #> [[3]] #> first  #>  \"C1\"  #>"},{"path":"/reference/TrimOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove outliers. — TrimOutliers","title":"Remove outliers. — TrimOutliers","text":"Replace values numerical vector minimal thresholds /maximal thresholds.","code":""},{"path":"/reference/TrimOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove outliers. — TrimOutliers","text":"","code":"TrimOutliers(x.num, tresholds.num = SdThreshold(x.num), clip.bln = FALSE)"},{"path":"/reference/TrimOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove outliers. — TrimOutliers","text":"x.num <numeric>: numeric vector. tresholds.num <numeric>: numeric vector length 2. first value minimal threshold, second value maximal threshold (Default find threshold based standarrd deviation. see `SdThreshold` function) clip.bln <logical>: TRUE value bounds replace threshodls values. FALSE Values bound replace NA (Default FALSE).","code":""},{"path":"/reference/TrimOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove outliers. — TrimOutliers","text":"trimed Numerical vector.","code":""},{"path":"/reference/TrimOutliers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove outliers. — TrimOutliers","text":"TrimOutliers","code":""},{"path":"/reference/TrimOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove outliers. — TrimOutliers","text":"","code":"set.seed(1111) x.num <- rnorm(1000) x.num <- sort(x.num) x.num[990:1000] #>  [1] 2.361631 2.398251 2.433557 2.446661 2.502845 2.543264 2.581767 2.615129 #>  [9] 2.666985 2.817221 2.973465 SdThreshold(x.num) #> [1] -3.002440  2.949928 TrimOutliers(x.num)[990:1000] #>  [1] 2.361631 2.398251 2.433557 2.446661 2.502845 2.543264 2.581767 2.615129 #>  [9] 2.666985 2.817221       NA TrimOutliers(x.num, clip = TRUE)[990:1000] #>  [1] 2.361631 2.398251 2.433557 2.446661 2.502845 2.543264 2.581767 2.615129 #>  [9] 2.666985 2.817221 2.949928"},{"path":"/reference/VCnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Vanilla Count Correction. — VCnorm","title":"Compute Vanilla Count Correction. — VCnorm","text":"Compute Vanilla Count Vanilla Count square root correction normalization hic maps.","code":""},{"path":"/reference/VCnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Vanilla Count Correction. — VCnorm","text":"","code":"VCnorm(hic.cmx = NULL, qtlTh.num = 0.15, sqrt.bln = TRUE)"},{"path":"/reference/VCnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Vanilla Count Correction. — VCnorm","text":"hic.cmx <contactMatrix>: HiC maps chunk normalize. qtlTh.num <numerical>: threshold quantile bins ignored. (Default 0.15) sqrt.bln <logical>: Whether square root must apply. (Default TRUE)","code":""},{"path":"/reference/VCnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Vanilla Count Correction. — VCnorm","text":"matrices list.","code":""},{"path":"/reference/VCnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Vanilla Count Correction. — VCnorm","text":"VCnorm","code":""},{"path":"/reference/VCnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Vanilla Count Correction. — VCnorm","text":"","code":"# Data data(HiC_Ctrl.cmx_lst)  HiC_Ctrl_VC.cmx <- VCnorm(HiC_Ctrl.cmx_lst[[\"2L_2L\"]]) HiC_Ctrl_VC_SQRT.cmx <- VCnorm(HiC_Ctrl.cmx_lst[[\"2L_2L\"]], sqrt.bln = TRUE)"},{"path":"/reference/WrapFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert string to function. — WrapFunction","title":"Convert string to function. — WrapFunction","text":"Wrap string function.","code":""},{"path":"/reference/WrapFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert string to function. — WrapFunction","text":"","code":"WrapFunction(...)"},{"path":"/reference/WrapFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert string to function. — WrapFunction","text":"... <character>: String parse eval function.","code":""},{"path":"/reference/WrapFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert string to function. — WrapFunction","text":"result function function.","code":""},{"path":"/reference/WrapFunction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert string to function. — WrapFunction","text":"WrapFunction","code":""},{"path":"/reference/WrapFunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert string to function. — WrapFunction","text":"","code":"X <- c(2, 4, NA) myString <- \"mean(X, na.rm=TRUE)\" WrapFunction(myString) #> Error in mean(X, na.rm = TRUE): object 'X' not found myResult <- WrapFunction(myString) #> Error in mean(X, na.rm = TRUE): object 'X' not found myString_2 <- \"function(X){mean(X, na.rm=TRUE)}\" WrapFunction(myString_2) #> function (X)  #> { #>     mean(X, na.rm = TRUE) #> } #> <environment: 0x55d30a2d1330> myFunction <- WrapFunction(myString_2) myFunction(c(1, 2, 3)) #> [1] 2"},{"path":"/reference/YlGnBu.html","id":null,"dir":"Reference","previous_headings":"","what":"YlGnBu palette. — YlGnBu","title":"YlGnBu palette. — YlGnBu","text":"Create YlGnBu palette.","code":""},{"path":"/reference/YlGnBu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"YlGnBu palette. — YlGnBu","text":"","code":"YlGnBu(   paletteLength.num = NULL,   space.chr = \"rgb\",   interpolate.chr = \"linear\",   bias.num = 1 )"},{"path":"/reference/YlGnBu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"YlGnBu palette. — YlGnBu","text":"paletteLength.num <numeric>: color number. space.chr <numeric>: character string; interpolation RGB CIE Lab color spaces. See ?grDevices::colorRamp details. (Default \"rgb\") interpolate.chr <numeric>: use spline linear interpolation. See ?grDevices::colorRamp details. (Default \"linear\") bias.num <numeric>: positive number. Higher values give widely spaced colors high end. See ?grDevices::colorRamp details. (Default 1)","code":""},{"path":"/reference/YlGnBu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"YlGnBu palette. — YlGnBu","text":"vector color.","code":""},{"path":"/reference/YlGnBu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"YlGnBu palette. — YlGnBu","text":"YlGnBu","code":""},{"path":"/reference/YlGnBu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"YlGnBu palette. — YlGnBu","text":"","code":"YlGnBu(9) #> [1] \"#FFFFD9\" \"#EDF8B1\" \"#C7E9B4\" \"#7FCDBB\" \"#41B6C4\" \"#1D91C0\" \"#225EA8\" #> [8] \"#253494\" \"#081D58\""},{"path":"/reference/YlOrRd.html","id":null,"dir":"Reference","previous_headings":"","what":"YlOrRd palette. — YlOrRd","title":"YlOrRd palette. — YlOrRd","text":"Create YlOrRd palette.","code":""},{"path":"/reference/YlOrRd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"YlOrRd palette. — YlOrRd","text":"","code":"YlOrRd(   paletteLength.num = NULL,   space.chr = \"rgb\",   interpolate.chr = \"linear\",   bias.num = 1 )"},{"path":"/reference/YlOrRd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"YlOrRd palette. — YlOrRd","text":"paletteLength.num <numeric>: color number. space.chr <numeric>: character string; interpolation RGB CIE Lab color spaces. See ?grDevices::colorRamp details. (Default \"rgb\") interpolate.chr <numeric>: use spline linear interpolation. See ?grDevices::colorRamp details. (Default \"linear\") bias.num <numeric>: positive number. Higher values give widely spaced colors high end. See ?grDevices::colorRamp details. (Default 1)","code":""},{"path":"/reference/YlOrRd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"YlOrRd palette. — YlOrRd","text":"vector color.","code":""},{"path":"/reference/YlOrRd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"YlOrRd palette. — YlOrRd","text":"YlOrRd","code":""},{"path":"/reference/YlOrRd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"YlOrRd palette. — YlOrRd","text":"","code":"YlOrRd(9) #> [1] \"#FFFFCC\" \"#FFEDA0\" \"#FED976\" \"#FEB24C\" \"#FD8D3C\" \"#FC4E2A\" \"#E31A1C\" #> [8] \"#BD0026\" \"#800026\""},{"path":"/reference/ggAPA.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation plot — ggAPA","title":"Aggregation plot — ggAPA","text":"Create ggplot object used plot aggregation.","code":""},{"path":"/reference/ggAPA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation plot — ggAPA","text":"","code":"ggAPA(   apa.mtx = NULL,   title.chr = NULL,   trimPrct.num = 0,   bounds.chr = \"both\",   colMin.num = NULL,   colMid.num = NULL,   colMax.num = NULL,   colBreaks.num = NULL,   blurPass.num = 0,   blurBox.num = NULL,   blurSize.num = NULL,   blurSd.num = 0.5,   lowerTri.num = NULL,   heatmap.col = NULL,   na.col = \"#F2F2F2\",   colorScale.chr = \"linear\",   bias.num = 1,   paletteLength.num = 51 )"},{"path":"/reference/ggAPA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregation plot — ggAPA","text":"apa.mtx <matrix> : matrix plot. (Default NULL) title.chr <character> : title plot. (Default NULL) trimPrct.num <numeric> : number 0 100 give percentage trimming. (Default 0) bounds.chr <character> : boundary must trim, , trim half percentage inferior superior see QtlThreshold. (Default \"\") colMin.num <numeric> : Minimal value Heatmap, force color range. Null automaticaly find. (Default NULL) colMid.num <numeric> : Center value Heatmap, force color range. Null automaticaly find. (Default NULL) colMax.num <numeric> : Maximal value Heatmap, force color range. Null automaticaly find. (Default NULL) colBreaks.num <numeric> : Repartition colors. Null automaticaly find. (Default NULL) blurPass.num <numeric> : Number blur pass. (Default 0) blurBox.num <numeric> : null automaticaly compute 3 Sd. (Default NULL) blurSize.num <numeric> : Size box applied blurr null automaticaly compute 3 Sd. (Default NULL) blurSd.num <numeric> : SD gaussian smooth. (Default 0.5) lowerTri.num <numeric> : value replace value lower triangle matrice (Usefull blur apply). (Default NULL) heatmap.col <character> : Heatmap color list. null automaticaly compute. (Default NULL) na.col <character> : color NA values. (Default \"#F2F2F2\") colorScale.chr <character> : shape color scale \"linear\" \"density\" based. (Default \"linear\") bias.num <numeric> : positive number. Higher values give widely spaced colors high end. See ?grDevices::colorRamp details. (Default 1) paletteLength.num <numeric> : number color palette. (Default 51)","code":""},{"path":"/reference/ggAPA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregation plot — ggAPA","text":"ggplot object.","code":""},{"path":"/reference/ggAPA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregation plot — ggAPA","text":"ggAPA","code":""},{"path":"/reference/ggAPA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation plot — ggAPA","text":"","code":"# Data data(Beaf32_Peaks.gnr) data(HiC_Ctrl.cmx_lst)  # Index Beaf32 Beaf32_Index.gnr <- IndexFeatures(     gRange.gnr_lst = list(Beaf = Beaf32_Peaks.gnr),     chromSize.dtf = data.frame(seqnames = c(\"2L\", \"2R\"), seqlengths = c(23513712, 25286936)),     binSize.num = 100000 )  # Beaf32 <-> Beaf32 Pairing Beaf_Beaf.gni <- SearchPairs(indexAnchor.gnr = Beaf32_Index.gnr) Beaf_Beaf.gni <- Beaf_Beaf.gni[seq_len(2000)] # subset 2000 first for exemple  # Matrices extractions center on Beaf32 <-> Beaf32 point interaction interactions_PF.mtx_lst <- ExtractSubmatrix(     feature.gn = Beaf_Beaf.gni,     hic.cmx_lst = HiC_Ctrl.cmx_lst,     referencePoint.chr = \"pf\" )  # Aggregate matrices in one matrix aggreg.mtx <- Aggregation(interactions_PF.mtx_lst)  # Visualization ggAPA(     apa.mtx = aggreg.mtx )   # Add Title ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA\" )   # Trim values ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA 30% trimmed on upper side of distribution\",     trimPrct.num = 30,     bounds.chr = \"upper\" ) #> Warning: no non-missing arguments to max; returning -Inf  ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA 30% trimmed on lower side of distribution\",     trimPrct.num = 30,     bounds.chr = \"lower\" ) #> Warning: no non-missing arguments to min; returning Inf  ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA 15% trimmed on each side of distribution\",     trimPrct.num = 30,     bounds.chr = \"both\" )   # Change Minimal, Central and Maximal Colors scale value ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA [min 200, center 300, max 600]\",     colMin.num = 200,     colMid.num = 300,     colMax.num = 600 )   # Change Color ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA\",     heatmap.col = viridis(6),     na.col = \"black\" )  ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA\",     heatmap.col = c(\"black\", \"white\"), )   # Change Color distribution ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA [100,150,200,250,300,350,600]\",     colBreaks.num = c(100, 150, 200, 250, 300, 350, 600) # Choosen Breaks )  ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA\",     colorScale = \"density\" # color distribution based on density )  ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA\",     bias.num = 2 # (>1 wait on extremums) )  ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA\",     bias.num = 0.5 # (<1 wait on center) )   # Apply a Blurr ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA\",     blurPass.num = 1,     blurSd.num = 0.5 )   # ggplot2 object modifications # Since the function returns a ggplot object, it is possible # to modify it following the ggplot2 grammar. ggAPA(     apa.mtx = aggreg.mtx,     title.chr = \"APA\", ) +     ggplot2::labs(         title = \"New title\",         subtitle = \"and subtitle\"     )"},{"path":"/reference/viridis.html","id":null,"dir":"Reference","previous_headings":"","what":"viridis palette. — viridis","title":"viridis palette. — viridis","text":"Create viridis palette.","code":""},{"path":"/reference/viridis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"viridis palette. — viridis","text":"","code":"viridis(   paletteLength.num = NULL,   space.chr = \"rgb\",   interpolate.chr = \"linear\",   bias.num = 1 )"},{"path":"/reference/viridis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"viridis palette. — viridis","text":"paletteLength.num <numeric>: color number. space.chr <numeric>: character string; interpolation RGB CIE Lab color spaces. See ?grDevices::colorRamp details. (Default \"rgb\") interpolate.chr <numeric>: use spline linear interpolation. See ?grDevices::colorRamp details. (Default \"linear\") bias.num <numeric>: positive number. Higher values give widely spaced colors high end. See ?grDevices::colorRamp details. (Default 1)","code":""},{"path":"/reference/viridis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"viridis palette. — viridis","text":"vector color.","code":""},{"path":"/reference/viridis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"viridis palette. — viridis","text":"viridis","code":""},{"path":"/reference/viridis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"viridis palette. — viridis","text":"","code":"viridis(9) #> [1] \"#440154\" \"#472C7A\" \"#3B518B\" \"#2C718E\" \"#21908C\" \"#27AD80\" \"#5CC862\" #> [8] \"#AADC31\" \"#FDE725\""},{"path":"/news/index.html","id":"genomic2dtk-0990","dir":"Changelog","previous_headings":"","what":"Genomic2DTK 0.99.0","title":"Genomic2DTK 0.99.0","text":"Submitted Bioconductor","code":""}]
